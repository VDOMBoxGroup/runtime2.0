<?xml version="1.0" encoding="utf-8"?>
<Type>
  <Information>
    <Name>gantt</Name>
    <DisplayName>#Lang(001)</DisplayName>
    <Description>#Lang(002)</Description>
    <ClassName>VDOM_gantt</ClassName>
    <ID>ea0ba7cb-e375-4b52-a647-fb28225e451d</ID>
    <Icon>#Res(b45e4301-fae1-98de-b355-a2ce418f89fb)</Icon>
    <EditorIcon>#Res(0fb8f2c5-8feb-1da9-6303-a2cf84550545)</EditorIcon>
    <StructureIcon>#Res(2c3ca31c-4d5d-9632-734c-a2ce5bc319c7)</StructureIcon>
    <Moveable>1</Moveable>
    <Resizable>3</Resizable>
    <Container>1</Container>
    <Category>Additional</Category>
    <Dynamic>1</Dynamic>
    <Version>2.4.2</Version>
    <InterfaceType>1</InterfaceType>
    <OptimizationPriority>1</OptimizationPriority>
    <Containers>htmlcontainer</Containers>
    <Languages>en_US ,fr_FR ,ru_RU</Languages>
    <Handlers/>
    <RemoteMethods/>
    <WCAG/>
    <XMLScriptName/>
  </Information>
  <Attributes>
    <Attribute>
      <Name>stateful</Name>
      <DisplayName>#Lang(101)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(201)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(401)|0)|(#Lang(402)|1))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(301)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>hierarchy</Name>
      <DisplayName>#Lang(102)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(202)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(302)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>visible</Name>
      <DisplayName>#Lang(103)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(203)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(403)|0)|(#Lang(404)|1))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(303)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>positioning1</Name>
      <DisplayName>#Lang(104)</DisplayName>
      <DefaultValue>absolute</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(204)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(405)|absolute)|(#Lang(406)|static)|(#Lang(407)|relative))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(304)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>zindex</Name>
      <DisplayName>#Lang(105)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(205)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(305)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>top</Name>
      <DisplayName>#Lang(106)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(206)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(306)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>left</Name>
      <DisplayName>#Lang(107)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(207)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(307)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>width</Name>
      <DisplayName>#Lang(108)</DisplayName>
      <DefaultValue>130</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(208)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>height</Name>
      <DisplayName>#Lang(109)</DisplayName>
      <DefaultValue>22</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(209)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>columns</Name>
      <DisplayName>#Lang(111)</DisplayName>
      <DefaultValue>[
          { name: "text", tree: true, width: 200, resize: true, label: "Mission" },
          { name: "start_date", align: "center", width: 100, resize: true, label: "Start date" },
          { name: "duration", align: "center", width: 100, resize: true, label: "Duration" },
          { name: "add", width: 44, resize: true, hide: false }
        ]</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(211)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(311)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>data</Name>
      <DisplayName>#Lang(112)</DisplayName>
      <DefaultValue>{
          "data": [
            {
              "id": 1,
              "redactor": "Natalu VULCAN",
              "text": "BOREALIS CHIMIE SAS GRANDPUITS",
              "start_date": "",
              "duration": 0,
              "progress": 0.4,
              "open": true,
              "editable": false,
              "readonly": true
            },
            {
              "id": 2,
              "redactor": "",
              "text": "REUNION",
              "start_date": "02-04-2018",
              "duration": 24,
              "progress": 0.6,
              "parent": 1,
              "open": true
            },
            {
              "id": 3,
              "redactor": "Konstantin DZUBA",
              "text": "Deplacement",
              "start_date": "05-04-2018",
              "duration": 68,
              "progress": 0.6,
              "parent": 2
            },
            {
              "id": 4,
              "redactor": "Danil ERMOLENKO",
              "text": "Prise de nodes",
              "start_date": "11-04-2018",
              "duration": 15,
              "progress": 0.6,
              "parent": 2,
              "deadlines": true
            }
          ],
          "links": [
            { "id": 1, "source": 1, "target": 2, "type": "1" },
            { "id": 2, "source": 2, "target": 3, "type": "0" },
            { "id": 3, "source": 3, "target": 4, "type": "0" }
          ]
        }</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(212)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(312)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>startdate</Name>
      <DisplayName>#Lang(113)</DisplayName>
      <DefaultValue>new Date()</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(213)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(313)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>enddate</Name>
      <DisplayName>#Lang(114)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(214)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(314)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>durationunit</Name>
      <DisplayName>#Lang(115)</DisplayName>
      <DefaultValue>day</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(215)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(408)|minute)|(#Lang(409)|hour)|(#Lang(411)|day)|(#Lang(412)|week)|(#Lang(413)|month)|(#Lang(414)|year))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(315)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>durationstep</Name>
      <DisplayName>#Lang(116)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(216)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(316)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>showlightbox</Name>
      <DisplayName>#Lang(117)</DisplayName>
      <DefaultValue>true</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(217)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(415)|true)|(#Lang(416)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>rounddnddates</Name>
      <DisplayName>#Lang(118)</DisplayName>
      <DefaultValue>false</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(218)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(417)|true)|(#Lang(418)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(318)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>worktime</Name>
      <DisplayName>#Lang(119)</DisplayName>
      <DefaultValue>false</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(219)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(419)|true)|(#Lang(421)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(319)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>correctworktime</Name>
      <DisplayName>#Lang(121)</DisplayName>
      <DefaultValue>false</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(221)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(422)|true)|(#Lang(423)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(321)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>showtodaymarker</Name>
      <DisplayName>#Lang(122)</DisplayName>
      <DefaultValue>false</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(222)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(424)|true)|(#Lang(425)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(322)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>autoscheduling</Name>
      <DisplayName>#Lang(123)</DisplayName>
      <DefaultValue>false</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(223)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(426)|true)|(#Lang(427)|false))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(323)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>mincolumnwidth</Name>
      <DisplayName>#Lang(124)</DisplayName>
      <DefaultValue>10</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(224)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(500)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(324)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>classname</Name>
      <DisplayName>#Lang(125)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(225)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(500)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(325)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>highlightweekend</Name>
      <DisplayName>#Lang(126)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(226)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(326)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>zoom</Name>
      <DisplayName>#Lang(127)</DisplayName>
      <DefaultValue>{
					minColumnWidth: 50,
					maxColumnWidth: 50,
					levels: [
						[
							{ unit: "month", format: "%M %Y", step: 1, css: () =&gt; '' },
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							}
						],
						[
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							},
							{ unit: "day", format: "%d", step: 1 }
						],
						[
							{ unit: "day", format: "%d %M", step: 1 },
							{ unit: "hour", format: "%H:%i", step: 1 }
						]
					],
					useKey: "ctrlKey",
					trigger: "wheel",
					element: function () {
						return gantt_o_0b1e8527_f6dd_4096_9fff_19772a921696.$root.querySelector(".gantt_task");
					}
				}</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(227)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(327)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
  </Attributes>
  <Languages>
    <Language Code="en_US">
      <Sentence ID="001">Gantt</Sentence>
      <Sentence ID="002">The gantt chart</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101"></Sentence>
      <Sentence ID="102">Hierarchy</Sentence>
      <Sentence ID="103">Visibility</Sentence>
      <Sentence ID="104"></Sentence>
      <Sentence ID="105">Z-Index</Sentence>
      <Sentence ID="106">Top</Sentence>
      <Sentence ID="107">Left</Sentence>
      <Sentence ID="108">Width</Sentence>
      <Sentence ID="109">Height</Sentence>
      <Sentence ID="111">Columns</Sentence>
      <Sentence ID="112">Data</Sentence>
      <Sentence ID="113">Start date</Sentence>
      <Sentence ID="114">End date</Sentence>
      <Sentence ID="115">Duration unit</Sentence>
      <Sentence ID="116">Duration step</Sentence>
      <Sentence ID="117">Show lightbox</Sentence>
      <Sentence ID="118">Round dnd dates</Sentence>
      <Sentence ID="119">Work time</Sentence>
      <Sentence ID="121">Correct work time</Sentence>
      <Sentence ID="122">Show today marker</Sentence>
      <Sentence ID="123">Auto scheduling</Sentence>
      <Sentence ID="124">Min column width</Sentence>
      <Sentence ID="125">CSS Class</Sentence>
      <Sentence ID="126">Highlight weekend</Sentence>
      <Sentence ID="127">Zoom config</Sentence>
      <Sentence ID="201"></Sentence>
      <Sentence ID="202">Order of rendering the object on the page</Sentence>
      <Sentence ID="203">Visibility of the object</Sentence>
      <Sentence ID="204"></Sentence>
      <Sentence ID="205">Position in visual hierarchy of objects</Sentence>
      <Sentence ID="206">Spacing between the top edge of the container and the object in pixels</Sentence>
      <Sentence ID="207">Spacing between the left edge of the container and the object in pixels</Sentence>
      <Sentence ID="208">Width of the object in pixels</Sentence>
      <Sentence ID="209">Height of the object in pixels</Sentence>
      <Sentence ID="211">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="212">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="213">Add support zooming time scale</Sentence>
      <Sentence ID="214">Add support zooming time scale</Sentence>
      <Sentence ID="215"></Sentence>
      <Sentence ID="216"></Sentence>
      <Sentence ID="217"></Sentence>
      <Sentence ID="218"></Sentence>
      <Sentence ID="219"></Sentence>
      <Sentence ID="221"></Sentence>
      <Sentence ID="222"></Sentence>
      <Sentence ID="223"></Sentence>
      <Sentence ID="224"></Sentence>
      <Sentence ID="225">CSS class name</Sentence>
      <Sentence ID="226">Color to highlight the weekend</Sentence>
      <Sentence ID="227"></Sentence>
      <Sentence ID="301"></Sentence>
      <Sentence ID="302">Incorrect value, must be even integer from 0 to 99</Sentence>
      <Sentence ID="303">Incorrect value, must be either 0 or 1</Sentence>
      <Sentence ID="304"></Sentence>
      <Sentence ID="305">Incorrect value, must be even integer from 0 to 99</Sentence>
      <Sentence ID="306">Incorrect value, must be even positive integer</Sentence>
      <Sentence ID="307">Incorrect value, must be even positive integer</Sentence>
      <Sentence ID="308">Incorrect value, must be even positive integer</Sentence>
      <Sentence ID="309">Incorrect value, must be even positive integer</Sentence>
      <Sentence ID="311">Invalid data for gantt chart</Sentence>
      <Sentence ID="312">Invalid data for gantt chart</Sentence>
      <Sentence ID="313">Error in zooming</Sentence>
      <Sentence ID="314">Error in zooming</Sentence>
      <Sentence ID="315">Error in zooming</Sentence>
      <Sentence ID="316">Incorrect value, must be even positive integer</Sentence>
      <Sentence ID="317"></Sentence>
      <Sentence ID="318"></Sentence>
      <Sentence ID="319"></Sentence>
      <Sentence ID="321"></Sentence>
      <Sentence ID="322"></Sentence>
      <Sentence ID="323"></Sentence>
      <Sentence ID="324"></Sentence>
      <Sentence ID="325">Names of CSS classes</Sentence>
      <Sentence ID="326">Error in highlight weekend</Sentence>
      <Sentence ID="327"></Sentence>
      <Sentence ID="401"></Sentence>
      <Sentence ID="402"></Sentence>
      <Sentence ID="403">Invisible</Sentence>
      <Sentence ID="404">Visible</Sentence>
      <Sentence ID="405">CSS Class</Sentence>
      <Sentence ID="406">Style</Sentence>
      <Sentence ID="407"></Sentence>
      <Sentence ID="408">minute</Sentence>
      <Sentence ID="409">hour</Sentence>
      <Sentence ID="411">day</Sentence>
      <Sentence ID="412">week</Sentence>
      <Sentence ID="413">month</Sentence>
      <Sentence ID="414">year</Sentence>
      <Sentence ID="415">Yes</Sentence>
      <Sentence ID="416">No</Sentence>
      <Sentence ID="417">Yes</Sentence>
      <Sentence ID="418">No</Sentence>
      <Sentence ID="419">Yes</Sentence>
      <Sentence ID="421">No</Sentence>
      <Sentence ID="422">Yes</Sentence>
      <Sentence ID="423">No</Sentence>
      <Sentence ID="424">Yes</Sentence>
      <Sentence ID="425">No</Sentence>
      <Sentence ID="426">Yes</Sentence>
      <Sentence ID="427">No</Sentence>
      <Sentence ID="501">Hide the object</Sentence>
      <Sentence ID="502">Show the object</Sentence>
      <Sentence ID="503">Hide the object</Sentence>
      <Sentence ID="504">Add new CSS class.</Sentence>
      <Sentence ID="505"></Sentence>
      <Sentence ID="506">Set new CSS style of the object</Sentence>
      <Sentence ID="507"></Sentence>
      <Sentence ID="508"></Sentence>
      <Sentence ID="509"></Sentence>
      <Sentence ID="511"></Sentence>
      <Sentence ID="512"></Sentence>
      <Sentence ID="513"></Sentence>
      <Sentence ID="514"></Sentence>
      <Sentence ID="515"></Sentence>
      <Sentence ID="516"></Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="601">Hide</Sentence>
      <Sentence ID="602">Show</Sentence>
      <Sentence ID="603">Hide</Sentence>
      <Sentence ID="604">addClass</Sentence>
      <Sentence ID="605">setData</Sentence>
      <Sentence ID="606">setStyle</Sentence>
      <Sentence ID="607">Set date range</Sentence>
      <Sentence ID="608">Set config</Sentence>
      <Sentence ID="609">setClass</Sentence>
      <Sentence ID="611">Zoom in</Sentence>
      <Sentence ID="612">Zoom out</Sentence>
      <Sentence ID="701">Fade</Sentence>
      <Sentence ID="702">Fade</Sentence>
      <Sentence ID="703">Fade</Sentence>
      <Sentence ID="704">className</Sentence>
      <Sentence ID="705">data</Sentence>
      <Sentence ID="706">cssStyleValue</Sentence>
      <Sentence ID="707">Start date</Sentence>
      <Sentence ID="708">End date</Sentence>
      <Sentence ID="709">config</Sentence>
      <Sentence ID="711">value</Sentence>
      <Sentence ID="712"></Sentence>
      <Sentence ID="801">Fade effect, time is indicated in milliseconds</Sentence>
      <Sentence ID="802">Fade effect, time is indicated in milliseconds</Sentence>
      <Sentence ID="803">Fade effect, time is indicated in milliseconds</Sentence>
      <Sentence ID="804">The name of the CSS class.</Sentence>
      <Sentence ID="805"></Sentence>
      <Sentence ID="806">CSS style value</Sentence>
      <Sentence ID="807"></Sentence>
      <Sentence ID="808"></Sentence>
      <Sentence ID="809"></Sentence>
      <Sentence ID="811"></Sentence>
      <Sentence ID="812"></Sentence>
      <Sentence ID="901">Current X-value</Sentence>
      <Sentence ID="902">Current X-value</Sentence>
      <Sentence ID="903">Current X-value</Sentence>
      <Sentence ID="904">Current X-value</Sentence>
      <Sentence ID="905">Current X-value</Sentence>
      <Sentence ID="906">Current X-value</Sentence>
      <Sentence ID="907">Current X-value</Sentence>
      <Sentence ID="908">Current X-value</Sentence>
      <Sentence ID="909">Current X-value</Sentence>
      <Sentence ID="911">Current X-value</Sentence>
    </Language>
    <Language Code="fr_FR">
      <Sentence ID="001">Gantt</Sentence>
      <Sentence ID="002">The gantt chart</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101"></Sentence>
      <Sentence ID="102">Hiérarchie</Sentence>
      <Sentence ID="103">Visibilité</Sentence>
      <Sentence ID="104"></Sentence>
      <Sentence ID="105">Z-Index</Sentence>
      <Sentence ID="106">Haut</Sentence>
      <Sentence ID="107">Gauche</Sentence>
      <Sentence ID="108">Largeur</Sentence>
      <Sentence ID="109">Hauteur</Sentence>
      <Sentence ID="111">Columns</Sentence>
      <Sentence ID="112">Data</Sentence>
      <Sentence ID="113">Start date</Sentence>
      <Sentence ID="114">End date</Sentence>
      <Sentence ID="115">Duration unit</Sentence>
      <Sentence ID="116">Duration step</Sentence>
      <Sentence ID="117">Show lightbox</Sentence>
      <Sentence ID="118">Round dnd dates</Sentence>
      <Sentence ID="119">Work time</Sentence>
      <Sentence ID="121">Correct work time</Sentence>
      <Sentence ID="122">Show today marker</Sentence>
      <Sentence ID="123">Auto scheduling</Sentence>
      <Sentence ID="124">Min column width</Sentence>
      <Sentence ID="125">Class</Sentence>
      <Sentence ID="126"></Sentence>
      <Sentence ID="127">Zoom config</Sentence>
      <Sentence ID="201"></Sentence>
      <Sentence ID="202">Hiérarchie de l'objet, ordre de chargement de l'objet par rapport aux autres</Sentence>
      <Sentence ID="203">Afficher ou cacher l'objet</Sentence>
      <Sentence ID="204"></Sentence>
      <Sentence ID="205">Niveau de superposition de l'objet par rapport aux autres</Sentence>
      <Sentence ID="206">Distance depuis le bord haut de l'objet parent en pixels</Sentence>
      <Sentence ID="207">Distance depuis le bord gauche de l'objet parent en pixels</Sentence>
      <Sentence ID="208">Largeur de l'objet en pixels</Sentence>
      <Sentence ID="209">Hauteur de l'objet en pixels</Sentence>
      <Sentence ID="211">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="212">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="213"></Sentence>
      <Sentence ID="214"></Sentence>
      <Sentence ID="215"></Sentence>
      <Sentence ID="216"></Sentence>
      <Sentence ID="217"></Sentence>
      <Sentence ID="218"></Sentence>
      <Sentence ID="219"></Sentence>
      <Sentence ID="221"></Sentence>
      <Sentence ID="222"></Sentence>
      <Sentence ID="223"></Sentence>
      <Sentence ID="224"></Sentence>
      <Sentence ID="225">CSS class name</Sentence>
      <Sentence ID="226"></Sentence>
      <Sentence ID="227"></Sentence>
      <Sentence ID="301"></Sentence>
      <Sentence ID="302">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="303">Valeur Incorrecte, doit être 0 ou 1</Sentence>
      <Sentence ID="304"></Sentence>
      <Sentence ID="305">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="306">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="307">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="308">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="309">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="311">Invalid data for gantt chart</Sentence>
      <Sentence ID="312">Invalid data for gantt chart</Sentence>
      <Sentence ID="313"></Sentence>
      <Sentence ID="314"></Sentence>
      <Sentence ID="315"></Sentence>
      <Sentence ID="316">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="317"></Sentence>
      <Sentence ID="318"></Sentence>
      <Sentence ID="319"></Sentence>
      <Sentence ID="321"></Sentence>
      <Sentence ID="322"></Sentence>
      <Sentence ID="323"></Sentence>
      <Sentence ID="324"></Sentence>
      <Sentence ID="325">Incorrect value</Sentence>
      <Sentence ID="326"></Sentence>
      <Sentence ID="327"></Sentence>
      <Sentence ID="401"></Sentence>
      <Sentence ID="402"></Sentence>
      <Sentence ID="403">Invisible</Sentence>
      <Sentence ID="404">Visible</Sentence>
      <Sentence ID="405">Class</Sentence>
      <Sentence ID="406">Style</Sentence>
      <Sentence ID="407"></Sentence>
      <Sentence ID="408">minute</Sentence>
      <Sentence ID="409">hour</Sentence>
      <Sentence ID="411">day</Sentence>
      <Sentence ID="412">week</Sentence>
      <Sentence ID="413">month</Sentence>
      <Sentence ID="414">year</Sentence>
      <Sentence ID="415"></Sentence>
      <Sentence ID="416"></Sentence>
      <Sentence ID="417"></Sentence>
      <Sentence ID="418"></Sentence>
      <Sentence ID="419"></Sentence>
      <Sentence ID="421"></Sentence>
      <Sentence ID="422"></Sentence>
      <Sentence ID="423"></Sentence>
      <Sentence ID="424"></Sentence>
      <Sentence ID="425"></Sentence>
      <Sentence ID="426"></Sentence>
      <Sentence ID="427"></Sentence>
      <Sentence ID="501">Hide the object</Sentence>
      <Sentence ID="502">Show the object</Sentence>
      <Sentence ID="503">Hide the object</Sentence>
      <Sentence ID="504">Add new CSS class.</Sentence>
      <Sentence ID="505"></Sentence>
      <Sentence ID="506">Set new CSS style</Sentence>
      <Sentence ID="507"></Sentence>
      <Sentence ID="508"></Sentence>
      <Sentence ID="509"></Sentence>
      <Sentence ID="511"></Sentence>
      <Sentence ID="512"></Sentence>
      <Sentence ID="513"></Sentence>
      <Sentence ID="514"></Sentence>
      <Sentence ID="515"></Sentence>
      <Sentence ID="516"></Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="601">Hide</Sentence>
      <Sentence ID="602">Show</Sentence>
      <Sentence ID="603">Hide</Sentence>
      <Sentence ID="604">addClass</Sentence>
      <Sentence ID="605">setData</Sentence>
      <Sentence ID="606">setStyle</Sentence>
      <Sentence ID="607">Set date range</Sentence>
      <Sentence ID="608">Set config</Sentence>
      <Sentence ID="609">setClass</Sentence>
      <Sentence ID="611">Zoom in</Sentence>
      <Sentence ID="612">Zoom out</Sentence>
      <Sentence ID="701">Fade</Sentence>
      <Sentence ID="702">Fade</Sentence>
      <Sentence ID="703">Fade</Sentence>
      <Sentence ID="704">className</Sentence>
      <Sentence ID="705">data</Sentence>
      <Sentence ID="706">cssStyleValue</Sentence>
      <Sentence ID="707">Start date</Sentence>
      <Sentence ID="708">End date</Sentence>
      <Sentence ID="709">config</Sentence>
      <Sentence ID="711">value</Sentence>
      <Sentence ID="712"></Sentence>
      <Sentence ID="801">Fade time</Sentence>
      <Sentence ID="802">Time of appearance</Sentence>
      <Sentence ID="803">Fade time</Sentence>
      <Sentence ID="804">The name of the CSS class.</Sentence>
      <Sentence ID="805"></Sentence>
      <Sentence ID="806">New CSS style value</Sentence>
      <Sentence ID="807"></Sentence>
      <Sentence ID="808"></Sentence>
      <Sentence ID="809"></Sentence>
      <Sentence ID="811"></Sentence>
      <Sentence ID="812"></Sentence>
      <Sentence ID="901">Current X-value</Sentence>
      <Sentence ID="902">Current X-value</Sentence>
      <Sentence ID="903">Current X-value</Sentence>
      <Sentence ID="904">Current X-value</Sentence>
      <Sentence ID="905">Current X-value</Sentence>
      <Sentence ID="906">Current X-value</Sentence>
      <Sentence ID="907">Current X-value</Sentence>
      <Sentence ID="908">Current X-value</Sentence>
      <Sentence ID="909">Current X-value</Sentence>
      <Sentence ID="911">Current X-value</Sentence>
    </Language>
    <Language Code="ru_RU">
      <Sentence ID="001">Gantt</Sentence>
      <Sentence ID="002">The gantt chart</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101"></Sentence>
      <Sentence ID="102">Иерархия</Sentence>
      <Sentence ID="103">Отображение</Sentence>
      <Sentence ID="104"></Sentence>
      <Sentence ID="105">Позиция</Sentence>
      <Sentence ID="106">Сверху</Sentence>
      <Sentence ID="107">Слева</Sentence>
      <Sentence ID="108">Ширина</Sentence>
      <Sentence ID="109">Высота</Sentence>
      <Sentence ID="111">Columns</Sentence>
      <Sentence ID="112">Data</Sentence>
      <Sentence ID="113">Start date</Sentence>
      <Sentence ID="114">End date</Sentence>
      <Sentence ID="115">Duration unit</Sentence>
      <Sentence ID="116">Duration step</Sentence>
      <Sentence ID="117">Show lightbox</Sentence>
      <Sentence ID="118">Round dnd dates</Sentence>
      <Sentence ID="119">Work time</Sentence>
      <Sentence ID="121">Correct work time</Sentence>
      <Sentence ID="122">Show today marker</Sentence>
      <Sentence ID="123">Auto scheduling</Sentence>
      <Sentence ID="124">Min column width</Sentence>
      <Sentence ID="125">Класс CSS</Sentence>
      <Sentence ID="126"></Sentence>
      <Sentence ID="127">Zoom config</Sentence>
      <Sentence ID="201"></Sentence>
      <Sentence ID="202">Порядок визуализации объекта в ходе загрузки страницы</Sentence>
      <Sentence ID="203">Неправильное значение, должен быть указан 0 или 1</Sentence>
      <Sentence ID="204"></Sentence>
      <Sentence ID="205">Положение в визуальной иерархии объектов</Sentence>
      <Sentence ID="206">Расстояние от верхней границы родительского контейнера до объекта в пикселях</Sentence>
      <Sentence ID="207">Расстояние от левой границы родительского контейнера до объекта в пикселях</Sentence>
      <Sentence ID="208">Ширина объекта в пикселях</Sentence>
      <Sentence ID="209">Высота объекта в пикселях</Sentence>
      <Sentence ID="211">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="212">Specific dhtmlx gantt data</Sentence>
      <Sentence ID="213"></Sentence>
      <Sentence ID="214"></Sentence>
      <Sentence ID="215"></Sentence>
      <Sentence ID="216"></Sentence>
      <Sentence ID="217"></Sentence>
      <Sentence ID="218"></Sentence>
      <Sentence ID="219"></Sentence>
      <Sentence ID="221"></Sentence>
      <Sentence ID="222"></Sentence>
      <Sentence ID="223"></Sentence>
      <Sentence ID="224"></Sentence>
      <Sentence ID="225">Имя класса CSS</Sentence>
      <Sentence ID="226"></Sentence>
      <Sentence ID="227"></Sentence>
      <Sentence ID="301"></Sentence>
      <Sentence ID="302">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
      <Sentence ID="303">Неправильное значение</Sentence>
      <Sentence ID="304"></Sentence>
      <Sentence ID="305">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
      <Sentence ID="306">Неправильное значение, должно быть указано целое положительное число</Sentence>
      <Sentence ID="307">Неправильное значение, должно быть указано целое положительное число</Sentence>
      <Sentence ID="308">Неправильное значение, должно быть указано целое положительное число</Sentence>
      <Sentence ID="309">Неправильное значение, должно быть указано целое положительное число</Sentence>
      <Sentence ID="311">Invalid data for gantt chart</Sentence>
      <Sentence ID="312">Invalid data for gantt chart</Sentence>
      <Sentence ID="313"></Sentence>
      <Sentence ID="314"></Sentence>
      <Sentence ID="315"></Sentence>
      <Sentence ID="316">Неправильное значение, должно быть указано целое положительное число</Sentence>
      <Sentence ID="317"></Sentence>
      <Sentence ID="318"></Sentence>
      <Sentence ID="319"></Sentence>
      <Sentence ID="321"></Sentence>
      <Sentence ID="322"></Sentence>
      <Sentence ID="323"></Sentence>
      <Sentence ID="324"></Sentence>
      <Sentence ID="325">Неправильное значение</Sentence>
      <Sentence ID="326"></Sentence>
      <Sentence ID="327"></Sentence>
      <Sentence ID="401"></Sentence>
      <Sentence ID="402"></Sentence>
      <Sentence ID="403">Не отображать</Sentence>
      <Sentence ID="404">Отображать</Sentence>
      <Sentence ID="405">Класс CSS</Sentence>
      <Sentence ID="406">Style</Sentence>
      <Sentence ID="407"></Sentence>
      <Sentence ID="408">minute</Sentence>
      <Sentence ID="409">hour</Sentence>
      <Sentence ID="411">day</Sentence>
      <Sentence ID="412">week</Sentence>
      <Sentence ID="413">month</Sentence>
      <Sentence ID="414">year</Sentence>
      <Sentence ID="415"></Sentence>
      <Sentence ID="416"></Sentence>
      <Sentence ID="417"></Sentence>
      <Sentence ID="418"></Sentence>
      <Sentence ID="419"></Sentence>
      <Sentence ID="421"></Sentence>
      <Sentence ID="422"></Sentence>
      <Sentence ID="423"></Sentence>
      <Sentence ID="424"></Sentence>
      <Sentence ID="425"></Sentence>
      <Sentence ID="426"></Sentence>
      <Sentence ID="427"></Sentence>
      <Sentence ID="501">Скрыть объект</Sentence>
      <Sentence ID="502">Показать объект</Sentence>
      <Sentence ID="503">Скрыть объект</Sentence>
      <Sentence ID="504">Add new CSS class.</Sentence>
      <Sentence ID="505"></Sentence>
      <Sentence ID="506">Установить новый стиль CSS</Sentence>
      <Sentence ID="507"></Sentence>
      <Sentence ID="508"></Sentence>
      <Sentence ID="509"></Sentence>
      <Sentence ID="511"></Sentence>
      <Sentence ID="512"></Sentence>
      <Sentence ID="513"></Sentence>
      <Sentence ID="514"></Sentence>
      <Sentence ID="515"></Sentence>
      <Sentence ID="516"></Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="601">Скрыть</Sentence>
      <Sentence ID="602">Показать</Sentence>
      <Sentence ID="603">Скрыть</Sentence>
      <Sentence ID="604">addClass</Sentence>
      <Sentence ID="605">setData</Sentence>
      <Sentence ID="606">Установить стиль</Sentence>
      <Sentence ID="607">Set date range</Sentence>
      <Sentence ID="608">Set config</Sentence>
      <Sentence ID="609">setClass</Sentence>
      <Sentence ID="611">Zoom in</Sentence>
      <Sentence ID="612">Zoom out</Sentence>
      <Sentence ID="701">Исчезновение</Sentence>
      <Sentence ID="702">Появление</Sentence>
      <Sentence ID="703">Исчезновение</Sentence>
      <Sentence ID="704">className</Sentence>
      <Sentence ID="705">data</Sentence>
      <Sentence ID="706">Стиль CSS</Sentence>
      <Sentence ID="707">Start date</Sentence>
      <Sentence ID="708">End date</Sentence>
      <Sentence ID="709">config</Sentence>
      <Sentence ID="711">value</Sentence>
      <Sentence ID="712"></Sentence>
      <Sentence ID="801">Время исчезновения в миллисекундах</Sentence>
      <Sentence ID="802">Время появления в миллисекундах</Sentence>
      <Sentence ID="803">Время исчезновения в миллисекундах</Sentence>
      <Sentence ID="804">The name of the CSS class.</Sentence>
      <Sentence ID="805"></Sentence>
      <Sentence ID="806">Новое значение стиля</Sentence>
      <Sentence ID="807"></Sentence>
      <Sentence ID="808"></Sentence>
      <Sentence ID="809"></Sentence>
      <Sentence ID="811"></Sentence>
      <Sentence ID="812"></Sentence>
      <Sentence ID="901">Текущее значение X</Sentence>
      <Sentence ID="902">Текущее значение X</Sentence>
      <Sentence ID="903">Текущее значение X</Sentence>
      <Sentence ID="904">Текущее значение X</Sentence>
      <Sentence ID="905">Текущее значение X</Sentence>
      <Sentence ID="906">Текущее значение X</Sentence>
      <Sentence ID="907">Текущее значение X</Sentence>
      <Sentence ID="908">Текущее значение X</Sentence>
      <Sentence ID="909">Текущее значение X</Sentence>
      <Sentence ID="911">Текущее значение X</Sentence>
    </Language>
  </Languages>
  <Resources>
    <Resource ID="b45e4301-fae1-98de-b355-a2ce418f89fb" Name="Gantt.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADoAAAA6CAYAAADhu0ooAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7CAAAOwgEVKEqAAAAAAmJLR0QAAKqNIzIAAAAHdElNRQfkAxMNBTr3rs8xAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTAzLTE5VDEzOjA1OjU4KzAwOjAwSPQjOQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wMy0xOVQxMzowNTo1OCswMDowMDmpm4UAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAACtUlEQVRoQ+2avWsUQRiHzy/UGBRMJfgvaFRIqhRapBYR0qiNWGsR7C21tU5laRdIE0gCqcRGiJiAEgKBiI2F36IY9febnZU362Vn5+Nm7ub2gYeZueztzrvzzu7s5jrDwgF4XpfkDfxeVPPjj/ACP8iRg7osYbBZUg00Wzg35SgyddeKquIanIC/VSstHJQluKJaDsg5Os4PBE+h/HtqH0EnTKn7TZf9wg9dWtMkUPq1D2Q/nG99pjl6Co5AuU0q2NfP8ItqOSDnQHWOZoNpRLtxFI4WVW924Yei2ltcAr0O54qqN1twEjLgnmObujeg/I6P2/AQ7DkuK6MjugxBqClgxCV1L8JbUH7PlffwIQyxLyNlGtH2qhsQputjXfqOJPv/AG6oloHYIzoG5TF9nYZGUj2mOa9Zu9DoySpF6nJZuQxPqpYf7P9N+Fy1DMg0iHUxYibx/snSR+6DwRrhxilgunE1xNJH7kNm5L6kCjQ6baC50QaaGzb30cuQ/77g1c4HntzXcFG1ItL0PvoEym19XIBRsUndkK8++VYvKjaBciRCEXJfjbCZo2fgaejbSR6TL8TeqlZE2PHS9sHbABfXV+Bx1aqHx9yBL1QrIiFGlG/zP0K5rzrnYVRCLRjYeZsrafSfD4RcGXFUm3JMl9EINUd5wqYg56jcXzd4zHfwpWpFIlSgLlyFd6HpxJB1eK+ousMDlca8vcxCeew6vU9+yDlqCwNoiu+DRNLUnYH3oSlg9pF9uqNajqQM1BYuQTm1TKPLmD7BZ6olYKCl/bwEvA1lX+vchHtIOUdt+aXLJvz3SDlIgR7WZRNO6PIfgzRHz8JLUPa3G4yJ6+5V1RLI3M72MW2QUteLoQ30py6zo3ox4rvbV0U1L6qB8rd2UX7cFJtqoNkyNBcjjui5otqSAZ3OX+cxQtVDow0+AAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="0fb8f2c5-8feb-1da9-6303-a2cf84550545" Name="GanttEditorIcon.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7BAAAOwQG4kWvtAAAAAmJLR0QAAKqNIzIAAAAHdElNRQfkAxMNBTr3rs8xAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTAzLTE5VDEzOjA1OjU4KzAwOjAwSPQjOQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wMy0xOVQxMzowNTo1OCswMDowMDmpm4UAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAABf0lEQVRIS7WVuUoFMRSGxxVcCtHGQgsrsVfEQu1sVC64gKW1T+NLWCqIIoKP4AKioC+g4oZYWIjr988kwzUzuZORuR983JNMyJmT5GYimMR+Bc3iB1eTsHpaUAlquIfbOIjfGEorPuO6+f2DHgolEWp3ohJ84KdHjWs3dmAb5mIrWMYddRh6jF9xK0vmTRuhBEtJmHKE6leCem1l4xiEr4I1HEHfXmzhTRKm2Llkii+BD631IQ6j3T+L2ne4gK/qEO6gInrxFq/wwvESrzGzb6rA3YPKKFtBafL2YBQHMG+DNV7L8BK3AnGX6ADV51P/+mDyKpjCIVT/O+rc13OCT0lYTNExXUQ9s8ul8Zt4HrcCKNrkMZzGGZw1v31YClXQ6JjqJfTmUvE8nuGx8RSVOJeQY6rl0UtIexe9OWqebuwyKk5v2KIKQljBR3wwKp7DoApC0MW363iPMapAF1RTsMd0A/dRX6f/onk0n0hjm0DYT2GlKMEE6tta+eRRFEW/C8VuOr0ZN38AAAAASUVORK5CYII=]]></Resource>
    <Resource ID="2c3ca31c-4d5d-9632-734c-a2ce5bc319c7" Name="GantIcon.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA8ElEQVQ4T52SPQqEMBCFJ1FEwcoL2HgmDyDW9hZWimJlJXgBwTN4BCtvIoKdqEsChp31L2u6vLz5MrwZkqbpFoYhvD2EUrotywJZlkkxfj8TgDiOpQBRFCGfADC1KAqoqgoZDMOAvu8v4QgwDAOM44jM0zSBbdtIM00TCCFcQ4CzbyzLOshd14HjOHKAp2BQB+u6HvyU0luGALBiTdMOZpaBrutyIe6upmlEgeu6cNfFaYie5wlAWZagKAq/M5Cqqtd7cNan7/tQ1zV/CoIA8jz/D/DtZnuyj5V1Ms/z8x5IjbFt2yff9RSSJNleVvO6D9O3cZax4OrMAAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="0cbebd51-a314-ea49-120e-a2d9fe72f5c9" Name="dhtmlxgantt.css" Type="css"><![CDATA[]]></Resource>
    <Resource ID="2ae311a4-683b-3abd-898d-a2da1cb0b26e" Name="dhtmlxgantt.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="56783af3-d460-f4e0-2a32-a2da24ae9e7f" Name="constraint-arrow.svg" Type="svg"><![CDATA[PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0Ij48cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIi8+PHBhdGggZD0iTTExLjU5IDcuNDFMMTUuMTcgMTFIMXYyaDE0LjE3bC0zLjU5IDMuNTlMMTMgMThsNi02LTYtNi0xLjQxIDEuNDF6TTIwIDZ2MTJoMlY2aC0yeiIvPjwvc3ZnPg==]]></Resource>
  </Resources>
  <SourceCode><![CDATA[class VDOM_gantt(VDOM_object):
    def render(self, contents=""):
        WOID = (self.id).replace('-', '_')
        ID = 'o_' + WOID

        DEBUG_INFO = {
          "objname": self.name,
          "objtype": "gantt",
          "js_lib": "dhtmlx gantt",
          "id": ID,
          "version": self.type.version
        }
        DEBUG_INFO_STRING = " ".join([str(key)+"='"+str(value)+"'" for key, value in DEBUG_INFO.items()])

        DISPLAY = lambda v: "none" if v == "0" else None
        SIZE_CONVERT = lambda v: str(v) + "px"
        STYLES = {
            "display": DISPLAY(self.visible),
            "position": self.positioning1,
            "z-index": self.zindex,
            "top": SIZE_CONVERT(self.top),
            "left": SIZE_CONVERT(self.left),
            "width": SIZE_CONVERT(self.width),
            "height": SIZE_CONVERT(self.height),
        }
        STYLES_STRING_FORMAT = ";".join([str(key)+":"+str(value) for key, value in STYLES.items() if value])

        STYLES_STRING = """
        <style>
          .%(id)s { %(styles)s }

          .%(id)s .week_end { background-color: #%(highlight_weekend)s; }

          .constraint-marker {
              position: absolute;
              -moz-box-sizing: border-box;
              box-sizing: border-box;
              width: 56px;
              height: 56px;
              margin-top: -11px;
              opacity: 0.4;
              z-index: 1;
              background: url(/56783af3-d460-f4e0-2a32-a2da24ae9e7f.svg);
              background-size: cover;
          }

          .constraint-marker.earliest-start { margin-left: -53px; }

          .constraint-marker.latest-end {
              margin-left: -3px;
              transform: rotate(180deg);
          }
        </style>""" % {
          "id":ID, 
          "styles": STYLES_STRING_FORMAT, 
          "highlight_weekend": self.highlightweekend 
        }

        INIT_SCRIPT = """
          <script data-meta='init script'>
            window.gantt_%(id)s = null;
            $(document).ready(() => {
              gantt_%(id)s = Gantt.getGanttInstance();

              gantt_%(id)s.plugins({
                marker: true,
                auto_scheduling: true
              });

              if (%(show_today_marker)s) {
                const todayMarkerLabelFormat = gantt_%(id)s.date.date_to_str(gantt_%(id)s.config.task_date);
                gantt_%(id)s.addMarker({
                    id: 'today',
                    start_date: new Date(),
                    css: "today",
                    title: todayMarkerLabelFormat(new Date())
                });

                // Auto update today marker
                setInterval(function() {
                    const today = gantt_%(id)s.getMarker('today');
                    today.start_date = new Date();
                    today.title = todayMarkerLabelFormat(today.start_date);
                    gantt_%(id)s.updateMarker('today');
                }, 1000*60);
              }

              // Contrsaints
              gantt_%(id)s.config.auto_scheduling = %(auto_scheduling)s;

              gantt_%(id)s.addTaskLayer(function draw_deadline(task) {
                  var constraintType = gantt_%(id)s.getConstraintType(task);
                  var types = gantt_%(id)s.config.constraint_types;
                  if (constraintType != types.ASAP && constraintType != types.ALAP && task.constraint_date) {
                      var dates = gantt_%(id)s.getConstraintLimitations(task);

                      var els = document.createElement("div");

                      if (dates.earliestStart) {
                          els.appendChild(renderDiv(task, dates.earliestStart, 'constraint-marker earliest-start'));
                      }

                      if (dates.latestEnd) {
                          els.appendChild(renderDiv(task, dates.latestEnd, 'constraint-marker latest-end'));
                      }

                      els.title = gantt_%(id)s.locale.labels[constraintType] + " " + gantt_%(id)s.templates.task_date(task.constraint_date);

                      if (els.children.length) return els;
                }
                return false;
              });

              function renderDiv(task, date, className) {
                  var el = document.createElement('div');
                  el.className = className;
                  var sizes = gantt_%(id)s.getTaskPosition(task, date);
                  el.style.left = sizes.left + 'px';
                  el.style.top = sizes.top + 'px';
                  return el;
              }

              gantt_%(id)s.config.constraint_types = {
                  // As Soon As Possible
                  ASAP: "asap",
                  // As Late As Possible
                  ALAP: "alap",
                  // Start No Earlier Than
                  SNET: "snet",
                  // Start No Later Than
                  SNLT: "snlt",
                  // Finish No Earlier Than
                  FNET: "fnet",
                  // Finish No Later Than
                  FNLT: "fnlt",
                  // Must Start On
                  MSO: "mso",
                  // Must Finish On
                  MFO: "mfo"
              };


              gantt_%(id)s.config.start_date = new Date("%(start_date)s");
              gantt_%(id)s.config.end_date = new Date("%(end_date)s");

              gantt_%(id)s.config.start_on_monday = true;

              gantt_%(id)s.config.show_tasks_outside_timescale = true;

              gantt_%(id)s.config.duration_unit = "%(duration_unit)s";
              gantt_%(id)s.config.duration_step = %(duration_step)s;


              gantt_%(id)s.config.round_dnd_dates = %(round_dnd_dates)s;


              gantt_%(id)s.config.min_column_width = %(min_column_width)s;


              gantt_%(id)s.ext.zoom.init(%(zoom_config)s);


              gantt_%(id)s.config.work_time = %(work_time)s;
              gantt_%(id)s.config.correct_work_time = %(correct_work_time)s;


              const weekEndClassCalculation = (date) => {
                if(!gantt_%(id)s.isWorkTime({date, unit: 'day'})) {
                  return "week_end";
                }
              };
              gantt_%(id)s.templates.timeline_cell_class = (task, date) => weekEndClassCalculation(date);
              gantt_%(id)s.templates.scale_cell_class = weekEndClassCalculation;


              gantt_%(id)s.config.columns = %(columns)s;


              gantt_%(id)s.init("gantt_%(id)s");


              //----E2VDOM----
              const E2VDOMIdFormat = (id) => id.slice(2);

              gantt_%(id)s.attachEvent("onAfterTaskUpdate", function(id, item) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskUpdate', {id: id, value: JSON.stringify(item)});
              });

              gantt_%(id)s.attachEvent("onTaskClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskClick', {id: id, value: JSON.stringify(task)});
                  return true;
              });

              gantt_%(id)s.attachEvent("onTaskDblClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskDblClick', {id: id, value: JSON.stringify(task)});
                  return %(show_lightbox)s;
              });

              gantt_%(id)s.attachEvent("onAfterTaskDelete", function(id,item){
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskDelete', {id: id, value: JSON.stringify(item)});
              });
            })
          </script>
        """ % {
          "id": ID,
          "start_date": self.startdate,
          "end_date": self.enddate,
          "columns": self.columns,
          "duration_unit": self.durationunit,
          "duration_step": self.durationstep,
          "round_dnd_dates": self.rounddnddates,
          "work_time": self.worktime,
          "correct_work_time": self.correctworktime,
          "min_column_width": self.mincolumnwidth,
          "zoom_config": self.zoom,
          "show_lightbox": self.showlightbox,
          "show_today_marker": self.showtodaymarker,
          "auto_scheduling": self.autoscheduling
        }

        SET_DATA_SCRIPT = """<script>$(document).ready(()=>{gantt_%(id)s.parse(`%(data)s`);})</script>""" % { "id": ID, "data": self.data }

        TYPE_WRAPPER = """<div {debug_string} class='{id} {classname}'>{content}</div>"""

        TYPE_HTML = """<div id="gantt_{id}" style='width:100%; height:100%;'></div>""".format(id=ID)

        SCRIPTS = """{}{}""".format(INIT_SCRIPT, SET_DATA_SCRIPT)

        CONTENT = """{}{}{}""".format(STYLES_STRING, TYPE_HTML, SCRIPTS)

        RESULT = TYPE_WRAPPER.format(
          debug_string=DEBUG_INFO_STRING,
          classname=self.classname,
          id=ID,
          content=CONTENT
        )

        return VDOM_object.render(self, contents=RESULT)

    def wysiwyg(self, contents=""):
        from scripting.legacy.wysiwyg import get_empty_wysiwyg_value

        image_id = "b45e4301-fae1-98de-b355-a2ce418f89fb"
        result = get_empty_wysiwyg_value(self, image_id)

        return VDOM_object.wysiwyg(self, contents=result)]]></SourceCode>
  <Libraries>
    <Library Target="html"><![CDATA[<script type="text/javascript" src="/2ae311a4-683b-3abd-898d-a2da1cb0b26e.js"></script>]]></Library>
    <Library Target="html"><![CDATA[<link rel="stylesheet" type="text/css" href="/0cbebd51-a314-ea49-120e-a2d9fe72f5c9.css" />]]></Library>
  </Libraries>
  <E2vdom>
    <Events>
      <Userinterfaceevents>
        <Event Name="dblclick" Help="#Lang(516)">
          <Parameters>
            <Parameter Name="id" Order="0" VbType="" Help="#Lang(907)"/>
            <Parameter Name="value" Order="0" VbType="" Help="#Lang(908)"/>
          </Parameters>
        </Event>
        <Event Name="onAfterTaskDelete" Help="#Lang(515)">
          <Parameters>
            <Parameter Name="id" Order="0" VbType="" Help="#Lang(905)"/>
            <Parameter Name="value" Order="1" VbType="" Help="#Lang(906)"/>
          </Parameters>
        </Event>
        <Event Name="onAfterTaskUpdate" Help="#Lang(517)">
          <Parameters>
            <Parameter Name="id" Order="0" VbType="" Help="#Lang(909)"/>
            <Parameter Name="value" Order="1" VbType="" Help="#Lang(911)"/>
          </Parameters>
        </Event>
        <Event Name="onTaskClick" Help="#Lang(514)">
          <Parameters>
            <Parameter Name="id" Order="0" VbType="" Help="#Lang(903)"/>
            <Parameter Name="value" Order="1" VbType="" Help="#Lang(904)"/>
          </Parameters>
        </Event>
        <Event Name="onTaskDblClick" Help="#Lang(513)">
          <Parameters>
            <Parameter Name="id" Order="0" VbType="" Help="#Lang(901)"/>
            <Parameter Name="value" Order="1" VbType="" Help="#Lang(902)"/>
          </Parameters>
        </Event>
      </Userinterfaceevents>
    </Events>
    <Actions>
      <Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
        <Action Help="#Lang(504)" InterfaceName="#Lang(604)" MethodName="addClass">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(704)" ScriptName="className" Help="#Lang(804)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$q(this.domCont).addClass(className);]]></SourceCode>
        </Action>
        <Action Help="#Lang(501)" InterfaceName="#Lang(601)" MethodName="hide">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(701)" ScriptName="fade" Help="#Lang(801)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[vdom_ui_hide(this.domCont, fade);]]></SourceCode>
        </Action>
        <Action Help="#Lang(503)" InterfaceName="#Lang(603)" MethodName="removeClass">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(703)" ScriptName="className" Help="#Lang(803)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$q(this.domCont).removeClass(className);]]></SourceCode>
        </Action>
        <Action Help="#Lang(509)" InterfaceName="#Lang(609)" MethodName="setClass">
          <Parameters>
            <Parameter DefaultValue="" Interface="setClass" InterfaceName="#Lang(712)" ScriptName="className" Help="#Lang(812)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$q(this.domCont).attr('class',className);]]></SourceCode>
        </Action>
        <Action Help="#Lang(508)" InterfaceName="#Lang(608)" MethodName="setConfig">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(709)" ScriptName="config" Help="#Lang(809)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(711)" ScriptName="value" Help="#Lang(811)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[window[`gantt_${this.name}`].config[config] = value;]]></SourceCode>
        </Action>
        <Action Help="#Lang(505)" InterfaceName="#Lang(605)" MethodName="setData">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(705)" ScriptName="data" Help="#Lang(805)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[window[`gantt_${this.name}`].parse(data);]]></SourceCode>
        </Action>
        <Action Help="#Lang(507)" InterfaceName="#Lang(607)" MethodName="setDateRange">
          <Parameters>
            <Parameter DefaultValue="'2020-01-01'" Interface="" InterfaceName="#Lang(707)" ScriptName="startDate" Help="#Lang(807)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="'2020-01-05'" Interface="" InterfaceName="#Lang(708)" ScriptName="endDate" Help="#Lang(808)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[
							window[`gantt_${this.name}`].config.start_date = new Date(startDate);
							window[`gantt_${this.name}`].config.end_date = new Date(endDate);
							window[`gantt_${this.name}`].render();
						]]></SourceCode>
        </Action>
        <Action Help="#Lang(506)" InterfaceName="#Lang(606)" MethodName="setStyle">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(706)" ScriptName="cssStyleValue" Help="#Lang(806)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[var t=$q(this.domCont);t.attr('style', t.attr('style') + ';' + cssStyleValue);]]></SourceCode>
        </Action>
        <Action Help="#Lang(502)" InterfaceName="#Lang(602)" MethodName="show">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(702)" ScriptName="fade" Help="#Lang(802)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[vdom_ui_show(this.domCont, fade);window[`gantt_${this.name}`].render()]]></SourceCode>
        </Action>
        <Action Help="#Lang(511)" InterfaceName="#Lang(611)" MethodName="zoomIn">
          <Parameters/>
          <SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomIn()]]></SourceCode>
        </Action>
        <Action Help="#Lang(512)" InterfaceName="#Lang(612)" MethodName="zoomOut">
          <Parameters/>
          <SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomOut()]]></SourceCode>
        </Action>
      </Container>
    </Actions>
  </E2vdom>
</Type>