<?xml version="1.0" encoding="utf-8"?>
<Type>
  <Information>
    <Name>htmlcontainer</Name>
    <DisplayName>#Lang(001)</DisplayName>
    <Description>#Lang(002)</Description>
    <ClassName>VDOM_htmlcontainer</ClassName>
    <ID>2330fe83-8cd6-4ed5-907d-11874e7ebcf4</ID>
    <Icon>#Res(135aaf50-6055-4db3-8c14-7d9ac93dd30f)</Icon>
    <EditorIcon>#Res(67a38932-aa05-4c6c-9b20-0398c6a53333)</EditorIcon>
    <StructureIcon>#Res(e33a6604-253c-4723-a7ac-123532bc1a5f)</StructureIcon>
    <Moveable>1</Moveable>
    <Resizable>1</Resizable>
    <Container>3</Container>
    <Category>Standard</Category>
    <Dynamic>1</Dynamic>
    <Version>2.141.9203</Version>
    <InterfaceType>1</InterfaceType>
    <OptimizationPriority>1</OptimizationPriority>
    <Containers/>
    <Languages>en_US ,fr_FR ,ru_RU</Languages>
    <RenderType>html</RenderType>
    <HTTPContentType>text/html</HTTPContentType>
    <Handlers/>
    <RemoteMethods/>
    <WCAG/>
    <XMLScriptName/>
  </Information>
  <Attributes>
    <Attribute>
      <Name>cssclass</Name>
      <DisplayName>#Lang(101)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(201)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(1000)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(301)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>hierarchy</Name>
      <DisplayName>#Lang(102)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>0</Visible>
      <Help>#Lang(202)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(302)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d+$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>title</Name>
      <DisplayName>#Lang(103)</DisplayName>
      <DefaultValue>page title</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(203)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(303)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>description</Name>
      <DisplayName>#Lang(104)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(204)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(150)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(304)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>image</Name>
      <DisplayName>#Lang(105)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(205)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>File()</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(305)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>bgrepeat</Name>
      <DisplayName>#Lang(106)</DisplayName>
      <DefaultValue>repeat</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(206)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(401)|repeat)|(#Lang(402)|no-repeat)|(#Lang(403)|repeat-x)|(#Lang(404)|repeat-y))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(306)</ErrorValidationMessage>
      <RegularExpressionValidation>^.+$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>metakeywords</Name>
      <DisplayName>#Lang(107)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(207)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(250)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(307)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>metadescription</Name>
      <DisplayName>#Lang(108)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(208)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(150)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>noscript</Name>
      <DisplayName>#Lang(109)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(209)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(1000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>securitycode</Name>
      <DisplayName>#Lang(111)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(211)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(311)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>deniedlink</Name>
      <DisplayName>#Lang(112)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(212)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>PageLink()</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(312)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>jqui</Name>
      <DisplayName>#Lang(113)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>0</Visible>
      <Help>#Lang(213)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(405)|1)|(#Lang(406)|0))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(313)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>customheaders</Name>
      <DisplayName>#Lang(114)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(214)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(1000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(314)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>testfunctions</Name>
      <DisplayName>#Lang(115)</DisplayName>
      <DefaultValue/>
      <Visible>0</Visible>
      <Help>#Lang(215)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>3</Colorgroup>
      <ErrorValidationMessage>#Lang(315)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>testclasses</Name>
      <DisplayName>#Lang(116)</DisplayName>
      <DefaultValue/>
      <Visible>0</Visible>
      <Help>#Lang(216)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>3</Colorgroup>
      <ErrorValidationMessage>#Lang(316)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>position</Name>
      <DisplayName>#Lang(117)</DisplayName>
      <DefaultValue>left</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(217)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(407)|left)|(#Lang(408)|center)|(#Lang(409)|jscenter))</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
      <RegularExpressionValidation>^(left|center)$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>style</Name>
      <DisplayName>#Lang(118)</DisplayName>
      <DefaultValue/>
      <Visible>0</Visible>
      <Help>#Lang(218)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(318)</ErrorValidationMessage>
      <RegularExpressionValidation>.+</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>linkcolor</Name>
      <DisplayName>#Lang(119)</DisplayName>
      <DefaultValue>000000</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(219)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(319)</ErrorValidationMessage>
      <RegularExpressionValidation>^(#?[0-9A-Fa-f]{6})?$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>activelinkcolor</Name>
      <DisplayName>#Lang(121)</DisplayName>
      <DefaultValue>000000</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(221)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(321)</ErrorValidationMessage>
      <RegularExpressionValidation>^(#?[0-9A-Fa-f]{6})?$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>visitedlinkcolor</Name>
      <DisplayName>#Lang(122)</DisplayName>
      <DefaultValue>000000</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(222)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(322)</ErrorValidationMessage>
      <RegularExpressionValidation>^(#?[0-9A-Fa-f]{6})?$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>bgcolor</Name>
      <DisplayName>#Lang(123)</DisplayName>
      <DefaultValue>FFFFFF</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(223)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(323)</ErrorValidationMessage>
      <RegularExpressionValidation>^(#?[0-9A-Fa-f]{6})?$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>css</Name>
      <DisplayName>#Lang(124)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(224)</Help>
      <InterfaceType>3</InterfaceType>
      <CodeInterface>MultiLine(10000)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(324)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>cookiewarning</Name>
      <DisplayName>#Lang(125)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(225)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(411)|0)|(#Lang(412)|1))</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(325)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>cookiewarningtext</Name>
      <DisplayName>#Lang(126)</DisplayName>
      <DefaultValue>En poursuivant votre navigation, vous acceptez le dépôt de cookies tiers destinés à vous proposer des vidéos, des boutons de partage, des remontées de contenus de plateformes sociales</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(226)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine(1000)</CodeInterface>
      <Colorgroup>2</Colorgroup>
      <ErrorValidationMessage>#Lang(326)</ErrorValidationMessage>
      <RegularExpressionValidation>^.*$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>textcolor</Name>
      <DisplayName>#Lang(127)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(227)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Color()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(327)</ErrorValidationMessage>
      <RegularExpressionValidation>^(#?[0-9A-Fa-f]{6})?$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>fontfamily</Name>
      <DisplayName>#Lang(128)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(228)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>Font()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(328)</ErrorValidationMessage>
      <RegularExpressionValidation/>
    </Attribute>
    <Attribute>
      <Name>fontsize</Name>
      <DisplayName>#Lang(129)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(229)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(6)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(329)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>fontweight</Name>
      <DisplayName>#Lang(131)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(231)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(413)|)|(#Lang(414)|normal)|(#Lang(415)|bold)|(#Lang(416)|bolder)|(#Lang(417)|lighter)|(#Lang(418)|100)|(#Lang(419)|200)|(#Lang(421)|300)|(#Lang(422)|400)|(#Lang(423)|500)|(#Lang(424)|600)|(#Lang(425)|700)|(#Lang(426)|800)|(#Lang(427)|900))</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(331)</ErrorValidationMessage>
      <RegularExpressionValidation/>
    </Attribute>
    <Attribute>
      <Name>letterspacing</Name>
      <DisplayName>#Lang(132)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(232)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(6)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(332)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>lineheight</Name>
      <DisplayName>#Lang(133)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(233)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(6)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(333)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>fontstyle</Name>
      <DisplayName>#Lang(134)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(234)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(428)|)|(#Lang(429)|italic)|(#Lang(431)|normal)|(#Lang(432)|oblique))</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(334)</ErrorValidationMessage>
      <RegularExpressionValidation/>
    </Attribute>
    <Attribute>
      <Name>zindex</Name>
      <DisplayName>#Lang(135)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>0</Visible>
      <Help>#Lang(235)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(335)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>visible</Name>
      <DisplayName>#Lang(136)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(236)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(433)|0)|(#Lang(434)|1))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(336)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>stateful</Name>
      <DisplayName>#Lang(137)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(237)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(435)|0)|(#Lang(436)|1))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(337)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
  </Attributes>
  <Languages>
    <Language Code="en_US">
      <Sentence ID="001">HTML container</Sentence>
      <Sentence ID="002">A container representing a web page. It can contain most of VDOM types.</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101">Class CSS</Sentence>
      <Sentence ID="102">Hierarchy</Sentence>
      <Sentence ID="103">Title</Sentence>
      <Sentence ID="104">Description</Sentence>
      <Sentence ID="105">Background image</Sentence>
      <Sentence ID="106">Background repeat</Sentence>
      <Sentence ID="107">Meta keywords</Sentence>
      <Sentence ID="108">Meta description</Sentence>
      <Sentence ID="109">NoScript</Sentence>
      <Sentence ID="111">Security code</Sentence>
      <Sentence ID="112">Denied link</Sentence>
      <Sentence ID="113">jQuery.UI</Sentence>
      <Sentence ID="114">Custom headers</Sentence>
      <Sentence ID="115">testfunctions</Sentence>
      <Sentence ID="116">testclasses</Sentence>
      <Sentence ID="117">Positioning</Sentence>
      <Sentence ID="118">Style</Sentence>
      <Sentence ID="119">Link color</Sentence>
      <Sentence ID="121">Active link color</Sentence>
      <Sentence ID="122">Visited link color</Sentence>
      <Sentence ID="123">Background color</Sentence>
      <Sentence ID="124">CSS</Sentence>
      <Sentence ID="125">Cookie warning</Sentence>
      <Sentence ID="126">Cookie warning text</Sentence>
      <Sentence ID="127">Text color</Sentence>
      <Sentence ID="128">Font-family</Sentence>
      <Sentence ID="129">Font-size</Sentence>
      <Sentence ID="131">Font-weight</Sentence>
      <Sentence ID="132">Letter-spacing</Sentence>
      <Sentence ID="133">Line-height</Sentence>
      <Sentence ID="134">Font-style</Sentence>
      <Sentence ID="135">Z-index</Sentence>
      <Sentence ID="136">Visibility</Sentence>
      <Sentence ID="137"></Sentence>
      <Sentence ID="201">The names of CSS classes. The names can consist only of Latin characters, may include hyphen (-) and underscore (_).</Sentence>
      <Sentence ID="202">The order of rendering the object on the page. The objects with identical values of the Hierarchy attribute are rendered in the order they are written in the XML-file of the VDOM application.</Sentence>
      <Sentence ID="203">The title of the object to display, may be in HTML format. In some objects the title is not displayed if the Title appearance attribute is set to 'Title off'.</Sentence>
      <Sentence ID="204">The description of the object.</Sentence>
      <Sentence ID="205">The background image of the object. Can be set together with the Background color attribute.</Sentence>
      <Sentence ID="206">The way of repeating the background image. If it is set to Repeat, the image will be repeated in the x- and y-axes; no-repeat - the image will be displayed only once; repeat-x - the image will be repeated in the x-axis; repeat-y - the image will be repeated in the y-axis.</Sentence>
      <Sentence ID="207">The list of keywords separated by commas, which are associated with the particular page and will be used by the search engines. A &lt;head&gt; tag of the page contains the following line: &lt;meta name="keywords" content="comma separated keywords" /&gt;.</Sentence>
      <Sentence ID="208">The description used by the search engines. A &lt;head&gt; tag contains the following line: &lt;meta name="description" content="the text of description" /&gt;.</Sentence>
      <Sentence ID="209">The alert message.</Sentence>
      <Sentence ID="211">The code used to protect the page's contents. The content will not be displayed until you pass this security code to the page on its rendering. It must be passed in a variable named "securitycode", and it must have the same value as the 'Secutity code' attribute of the page. If not - a user is redirected to a page specified by the 'Denied link' attribute.</Sentence>
      <Sentence ID="212">The page, to which the user is redirected when a security check fails. If it is not specified a blank page is displayed.</Sentence>
      <Sentence ID="213">Use jQuery.UI</Sentence>
      <Sentence ID="214">Custom tags (meta, style, script) to place in  HEAD tag of document</Sentence>
      <Sentence ID="215">testfunctions</Sentence>
      <Sentence ID="216">testclasses</Sentence>
      <Sentence ID="217">Positioning</Sentence>
      <Sentence ID="218">Style</Sentence>
      <Sentence ID="219">The color of the link.</Sentence>
      <Sentence ID="221">The color of the active link.</Sentence>
      <Sentence ID="222">The color of the visited link.</Sentence>
      <Sentence ID="223">The background color of the object.</Sentence>
      <Sentence ID="224">The necessary CSS code applied to all objects within the container.</Sentence>
      <Sentence ID="225">Display a warning message indicating that application may create cookies on client side.</Sentence>
      <Sentence ID="226">Text to display as message when Cookie warning attribute is enabled.</Sentence>
      <Sentence ID="227">The color of the text.</Sentence>
      <Sentence ID="228">newAttribute29</Sentence>
      <Sentence ID="229">newAttribute30</Sentence>
      <Sentence ID="231">newAttribute31</Sentence>
      <Sentence ID="232">newAttribute32</Sentence>
      <Sentence ID="233">newAttribute33</Sentence>
      <Sentence ID="234">newAttribute34</Sentence>
      <Sentence ID="235">Position in visual hierarchy of objects. If you have several objects in one container situated on each other, the Z-Index indicates the order of their displaying. The larger Z-Index is, the upper the object is situated.</Sentence>
      <Sentence ID="236">The visibility of the object. In any case the object will exist on the web page, this attribute only makes it invisible.</Sentence>
      <Sentence ID="237"></Sentence>
      <Sentence ID="301">Incorrect value.</Sentence>
      <Sentence ID="302">Incorrect value.</Sentence>
      <Sentence ID="303">Incorrect value, must be positive integer.</Sentence>
      <Sentence ID="304">Incorrect value, must be string.</Sentence>
      <Sentence ID="305">Incorrect value.</Sentence>
      <Sentence ID="306">Incorrect value.</Sentence>
      <Sentence ID="307">Incorrect value.</Sentence>
      <Sentence ID="308">Incorrect value.</Sentence>
      <Sentence ID="309">Incorrect value, must be string.</Sentence>
      <Sentence ID="311">Incorrect value.</Sentence>
      <Sentence ID="312">Incorrect value.</Sentence>
      <Sentence ID="313">Incorrect value.</Sentence>
      <Sentence ID="314">Incorrect value</Sentence>
      <Sentence ID="315">HTML Container.</Sentence>
      <Sentence ID="316">HTML Container.</Sentence>
      <Sentence ID="317">Incorrect value.</Sentence>
      <Sentence ID="318">Incorrect value.</Sentence>
      <Sentence ID="319">Incorrect value.</Sentence>
      <Sentence ID="321">Incorrect value.</Sentence>
      <Sentence ID="322">Incorrect value.</Sentence>
      <Sentence ID="323">Incorrect value.</Sentence>
      <Sentence ID="324">Incorrect value.</Sentence>
      <Sentence ID="325">Incorrect value, must be 0 or 1.</Sentence>
      <Sentence ID="326">Incorrect value.</Sentence>
      <Sentence ID="327">Incorrect value.</Sentence>
      <Sentence ID="328">newAttribute29</Sentence>
      <Sentence ID="329">newAttribute30</Sentence>
      <Sentence ID="331"></Sentence>
      <Sentence ID="332"></Sentence>
      <Sentence ID="333">newAttribute33</Sentence>
      <Sentence ID="334">newAttribute34</Sentence>
      <Sentence ID="335">Incorrect value, must be positive integer.</Sentence>
      <Sentence ID="336">Incorrect value, must be string.</Sentence>
      <Sentence ID="337"></Sentence>
      <Sentence ID="401">Repeat</Sentence>
      <Sentence ID="402">No-repeat</Sentence>
      <Sentence ID="403">Repeat-X</Sentence>
      <Sentence ID="404">Repeat-Y</Sentence>
      <Sentence ID="405">Yes</Sentence>
      <Sentence ID="406">No</Sentence>
      <Sentence ID="407">Left</Sentence>
      <Sentence ID="408">Center</Sentence>
      <Sentence ID="409">JS Center</Sentence>
      <Sentence ID="411">Disabled</Sentence>
      <Sentence ID="412">Enabled</Sentence>
      <Sentence ID="413"></Sentence>
      <Sentence ID="414">Normal</Sentence>
      <Sentence ID="415">Bold</Sentence>
      <Sentence ID="416">Bolder</Sentence>
      <Sentence ID="417">Lighter</Sentence>
      <Sentence ID="418">100</Sentence>
      <Sentence ID="419">200</Sentence>
      <Sentence ID="421">300</Sentence>
      <Sentence ID="422">400</Sentence>
      <Sentence ID="423">500</Sentence>
      <Sentence ID="424">600</Sentence>
      <Sentence ID="425">700</Sentence>
      <Sentence ID="426">800</Sentence>
      <Sentence ID="427">900</Sentence>
      <Sentence ID="428"></Sentence>
      <Sentence ID="429">Italic</Sentence>
      <Sentence ID="431">Normal</Sentence>
      <Sentence ID="432">Oblique</Sentence>
      <Sentence ID="433">Invisible</Sentence>
      <Sentence ID="434">Visible</Sentence>
      <Sentence ID="435"></Sentence>
      <Sentence ID="436"></Sentence>
      <Sentence ID="501">Visibility</Sentence>
      <Sentence ID="502">browserZoom</Sentence>
      <Sentence ID="503">Visibility</Sentence>
      <Sentence ID="504">Visibility</Sentence>
      <Sentence ID="505">Visibility</Sentence>
      <Sentence ID="506">Visibility</Sentence>
      <Sentence ID="507">Visibility</Sentence>
      <Sentence ID="508">Visibility</Sentence>
      <Sentence ID="509">Visibility</Sentence>
      <Sentence ID="511">Visibility</Sentence>
      <Sentence ID="512">Visibility</Sentence>
      <Sentence ID="513">Visibility</Sentence>
      <Sentence ID="514">Visibility</Sentence>
      <Sentence ID="515">Visibility</Sentence>
      <Sentence ID="516">Visibility</Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="518"></Sentence>
      <Sentence ID="519"></Sentence>
      <Sentence ID="521"></Sentence>
      <Sentence ID="522"></Sentence>
      <Sentence ID="523"></Sentence>
      <Sentence ID="524"></Sentence>
      <Sentence ID="525"></Sentence>
      <Sentence ID="526"></Sentence>
      <Sentence ID="527"></Sentence>
      <Sentence ID="528"></Sentence>
      <Sentence ID="529"></Sentence>
      <Sentence ID="531"></Sentence>
      <Sentence ID="532"></Sentence>
      <Sentence ID="601">Visibility</Sentence>
      <Sentence ID="602">browserZoom</Sentence>
      <Sentence ID="603">Visibility</Sentence>
      <Sentence ID="604">Visibility</Sentence>
      <Sentence ID="605">Visibility</Sentence>
      <Sentence ID="606">Visibility</Sentence>
      <Sentence ID="607">Visibility</Sentence>
      <Sentence ID="608">Visibility</Sentence>
      <Sentence ID="609">Visibility</Sentence>
      <Sentence ID="611">Visibility</Sentence>
      <Sentence ID="612">Visibility</Sentence>
      <Sentence ID="613">Visibility</Sentence>
      <Sentence ID="614">Visibility</Sentence>
      <Sentence ID="615">Visibility</Sentence>
      <Sentence ID="616">Visibility</Sentence>
      <Sentence ID="701">Incorrect value, must be string</Sentence>
      <Sentence ID="702">zoom</Sentence>
      <Sentence ID="703">Incorrect value, must be string</Sentence>
      <Sentence ID="704">Incorrect value, must be string</Sentence>
      <Sentence ID="705">Incorrect value, must be string</Sentence>
      <Sentence ID="706">Incorrect value, must be string</Sentence>
      <Sentence ID="707">Incorrect value, must be string</Sentence>
      <Sentence ID="708">Incorrect value, must be string</Sentence>
      <Sentence ID="709">Incorrect value, must be string</Sentence>
      <Sentence ID="711">Incorrect value, must be string</Sentence>
      <Sentence ID="712">Incorrect value, must be string</Sentence>
      <Sentence ID="713">Incorrect value, must be string</Sentence>
      <Sentence ID="714">Incorrect value, must be string</Sentence>
      <Sentence ID="715">Incorrect value, must be string</Sentence>
      <Sentence ID="716">Incorrect value, must be string</Sentence>
      <Sentence ID="717">Incorrect value, must be string</Sentence>
      <Sentence ID="718">Incorrect value, must be string</Sentence>
      <Sentence ID="801">Incorrect value, must be string</Sentence>
      <Sentence ID="802">zoom</Sentence>
      <Sentence ID="803">Incorrect value, must be string</Sentence>
      <Sentence ID="804">Incorrect value, must be string</Sentence>
      <Sentence ID="805">Incorrect value, must be string</Sentence>
      <Sentence ID="806">Incorrect value, must be string</Sentence>
      <Sentence ID="807">Incorrect value, must be string</Sentence>
      <Sentence ID="808">Incorrect value, must be string</Sentence>
      <Sentence ID="809">Incorrect value, must be string</Sentence>
      <Sentence ID="811">Incorrect value, must be string</Sentence>
      <Sentence ID="812">Incorrect value, must be string</Sentence>
      <Sentence ID="813">Incorrect value, must be string</Sentence>
      <Sentence ID="814">Incorrect value, must be string</Sentence>
      <Sentence ID="815">Incorrect value, must be string</Sentence>
      <Sentence ID="816">Incorrect value, must be string</Sentence>
      <Sentence ID="817">Incorrect value, must be string</Sentence>
      <Sentence ID="818">Incorrect value, must be string</Sentence>
      <Sentence ID="901">Description</Sentence>
      <Sentence ID="902">Description</Sentence>
      <Sentence ID="903">Description</Sentence>
      <Sentence ID="904">Description</Sentence>
      <Sentence ID="905">Description</Sentence>
      <Sentence ID="906">Description</Sentence>
      <Sentence ID="907">Description</Sentence>
      <Sentence ID="908">Description</Sentence>
      <Sentence ID="909">Description</Sentence>
      <Sentence ID="911">Description</Sentence>
      <Sentence ID="912">Description</Sentence>
      <Sentence ID="913">Description</Sentence>
      <Sentence ID="914">Description</Sentence>
      <Sentence ID="915">Description</Sentence>
      <Sentence ID="916">Description</Sentence>
      <Sentence ID="917">Description</Sentence>
      <Sentence ID="918">Description</Sentence>
      <Sentence ID="919">Description</Sentence>
      <Sentence ID="921">Description</Sentence>
      <Sentence ID="922">Description</Sentence>
      <Sentence ID="923">Description</Sentence>
      <Sentence ID="924">Description</Sentence>
      <Sentence ID="925">Description</Sentence>
      <Sentence ID="926">Description</Sentence>
      <Sentence ID="927">Description</Sentence>
      <Sentence ID="928">Description</Sentence>
      <Sentence ID="929">Description</Sentence>
      <Sentence ID="931">Description</Sentence>
      <Sentence ID="932">Description</Sentence>
      <Sentence ID="933">Description</Sentence>
      <Sentence ID="934">Description</Sentence>
      <Sentence ID="935">Description</Sentence>
    </Language>
    <Language Code="fr_FR">
      <Sentence ID="001">Conteneur HTML</Sentence>
      <Sentence ID="002">Conteneur HTML</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101">Class CSS</Sentence>
      <Sentence ID="102">Hiérarchie</Sentence>
      <Sentence ID="103">Titre</Sentence>
      <Sentence ID="104">Description</Sentence>
      <Sentence ID="105">Image de fond</Sentence>
      <Sentence ID="106">Répéter l'image de fond</Sentence>
      <Sentence ID="107">Meta keywords</Sentence>
      <Sentence ID="108">Meta description</Sentence>
      <Sentence ID="109">NoScript</Sentence>
      <Sentence ID="111">Code de securité</Sentence>
      <Sentence ID="112">Lien refusé</Sentence>
      <Sentence ID="113">jQuery.UI</Sentence>
      <Sentence ID="114"></Sentence>
      <Sentence ID="115">testfunctions</Sentence>
      <Sentence ID="116">testclasses</Sentence>
      <Sentence ID="117">Position</Sentence>
      <Sentence ID="118">Style</Sentence>
      <Sentence ID="119">Couleur liens</Sentence>
      <Sentence ID="121">Couleur Liens Actif</Sentence>
      <Sentence ID="122">Couleur Liens Visités</Sentence>
      <Sentence ID="123">Couleur de fond</Sentence>
      <Sentence ID="124">CSS</Sentence>
      <Sentence ID="125">Cookie warning</Sentence>
      <Sentence ID="126">Cookie warning text</Sentence>
      <Sentence ID="127">Couleur Texte</Sentence>
      <Sentence ID="128"></Sentence>
      <Sentence ID="129"></Sentence>
      <Sentence ID="131"></Sentence>
      <Sentence ID="132"></Sentence>
      <Sentence ID="133"></Sentence>
      <Sentence ID="134"></Sentence>
      <Sentence ID="135">Z-index</Sentence>
      <Sentence ID="136">Visibilité</Sentence>
      <Sentence ID="137"></Sentence>
      <Sentence ID="201">CSS classes for body</Sentence>
      <Sentence ID="202">Afficher ou cacher l'objet</Sentence>
      <Sentence ID="203">Distance depuis le bord gauche de l'objet parent en pixels</Sentence>
      <Sentence ID="204">Description du container</Sentence>
      <Sentence ID="205">Image d'arrière plan de la page</Sentence>
      <Sentence ID="206">Répéter ou non l'image d'arrière plan sous forme de mosaïque</Sentence>
      <Sentence ID="207">Meta keywords de la page</Sentence>
      <Sentence ID="208">Meta description de la page</Sentence>
      <Sentence ID="209">NoScript alert</Sentence>
      <Sentence ID="211">Code de Securité</Sentence>
      <Sentence ID="212">Lien refusé</Sentence>
      <Sentence ID="213">Use jQuery.UI</Sentence>
      <Sentence ID="214"></Sentence>
      <Sentence ID="215">testfunctions</Sentence>
      <Sentence ID="216">testclasses</Sentence>
      <Sentence ID="217">Position du container à l'intèrieur de la fenetre du navigateur</Sentence>
      <Sentence ID="218">Style</Sentence>
      <Sentence ID="219">Couleur par défaut des liens de la page</Sentence>
      <Sentence ID="221">Couleur par défaut des liens Actifs de la page</Sentence>
      <Sentence ID="222">Couleur par défaut des liens Visité de la page</Sentence>
      <Sentence ID="223">Couleur d'arrière plan de la page</Sentence>
      <Sentence ID="224">Style sheet of the page</Sentence>
      <Sentence ID="225">Display a warning message indicating that application may create cookies on client side.</Sentence>
      <Sentence ID="226">Text to display as message when Cookie warning attribute is enabled.</Sentence>
      <Sentence ID="227">Couleur par défaut du texte de la page</Sentence>
      <Sentence ID="228"></Sentence>
      <Sentence ID="229"></Sentence>
      <Sentence ID="231"></Sentence>
      <Sentence ID="232"></Sentence>
      <Sentence ID="233"></Sentence>
      <Sentence ID="234"></Sentence>
      <Sentence ID="235">Distance depuis le bord haut de l'objet parent en pixels</Sentence>
      <Sentence ID="236">Titre du conteneur</Sentence>
      <Sentence ID="237"></Sentence>
      <Sentence ID="301">Valeur Incorrecte</Sentence>
      <Sentence ID="302">Incorrect value</Sentence>
      <Sentence ID="303">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="304">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="305">Valeur Incorrecte</Sentence>
      <Sentence ID="306">Valeur Incorrecte</Sentence>
      <Sentence ID="307">Valeur Incorrecte</Sentence>
      <Sentence ID="308">Valeur Incorrecte</Sentence>
      <Sentence ID="309">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="311">Valeur Incorrecte</Sentence>
      <Sentence ID="312">Valeur Incorrecte</Sentence>
      <Sentence ID="313">Valeur Incorrecte</Sentence>
      <Sentence ID="314"></Sentence>
      <Sentence ID="315">Conteneur HTML</Sentence>
      <Sentence ID="316">Conteneur HTML</Sentence>
      <Sentence ID="317">Valeur Incorrecte</Sentence>
      <Sentence ID="318">Valeur Incorrecte</Sentence>
      <Sentence ID="319">Valeur Incorrecte</Sentence>
      <Sentence ID="321">Valeur Incorrecte</Sentence>
      <Sentence ID="322">Valeur Incorrecte</Sentence>
      <Sentence ID="323">Valeur Incorrecte</Sentence>
      <Sentence ID="324">Incorrect value</Sentence>
      <Sentence ID="325">Incorrect value, must be 0 or 1.</Sentence>
      <Sentence ID="326">Incorrect value.</Sentence>
      <Sentence ID="327">Valeur Incorrecte</Sentence>
      <Sentence ID="328"></Sentence>
      <Sentence ID="329"></Sentence>
      <Sentence ID="331"></Sentence>
      <Sentence ID="332"></Sentence>
      <Sentence ID="333"></Sentence>
      <Sentence ID="334"></Sentence>
      <Sentence ID="335">Valeur Incorrecte, doit être positive</Sentence>
      <Sentence ID="336">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="337"></Sentence>
      <Sentence ID="401">Répéter</Sentence>
      <Sentence ID="402">Ne pas répéter</Sentence>
      <Sentence ID="403">Répéter-horizontal</Sentence>
      <Sentence ID="404">Répéter-vertical</Sentence>
      <Sentence ID="405">Yes</Sentence>
      <Sentence ID="406">No</Sentence>
      <Sentence ID="407">Gauche</Sentence>
      <Sentence ID="408">Centrer</Sentence>
      <Sentence ID="409">JS Centrer</Sentence>
      <Sentence ID="411">Disabled</Sentence>
      <Sentence ID="412">Enabled</Sentence>
      <Sentence ID="413"></Sentence>
      <Sentence ID="414"></Sentence>
      <Sentence ID="415"></Sentence>
      <Sentence ID="416"></Sentence>
      <Sentence ID="417"></Sentence>
      <Sentence ID="418"></Sentence>
      <Sentence ID="419"></Sentence>
      <Sentence ID="421"></Sentence>
      <Sentence ID="422"></Sentence>
      <Sentence ID="423"></Sentence>
      <Sentence ID="424"></Sentence>
      <Sentence ID="425"></Sentence>
      <Sentence ID="426"></Sentence>
      <Sentence ID="427"></Sentence>
      <Sentence ID="428"></Sentence>
      <Sentence ID="429"></Sentence>
      <Sentence ID="431"></Sentence>
      <Sentence ID="432"></Sentence>
      <Sentence ID="433">Invisible</Sentence>
      <Sentence ID="434">Visible</Sentence>
      <Sentence ID="435"></Sentence>
      <Sentence ID="436"></Sentence>
      <Sentence ID="501">Visibilité</Sentence>
      <Sentence ID="502">browserZoom</Sentence>
      <Sentence ID="503">Visibilité</Sentence>
      <Sentence ID="504">Visibilité</Sentence>
      <Sentence ID="505">Visibilité</Sentence>
      <Sentence ID="506">Visibilité</Sentence>
      <Sentence ID="507">Visibilité</Sentence>
      <Sentence ID="508">Visibilité</Sentence>
      <Sentence ID="509">Visibilité</Sentence>
      <Sentence ID="511">Visibilité</Sentence>
      <Sentence ID="512">Visibilité</Sentence>
      <Sentence ID="513">Visibilité</Sentence>
      <Sentence ID="514">Visibilité</Sentence>
      <Sentence ID="515">Visibilité</Sentence>
      <Sentence ID="516">Visibilité</Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="518"></Sentence>
      <Sentence ID="519"></Sentence>
      <Sentence ID="521"></Sentence>
      <Sentence ID="522"></Sentence>
      <Sentence ID="523"></Sentence>
      <Sentence ID="524"></Sentence>
      <Sentence ID="525"></Sentence>
      <Sentence ID="526"></Sentence>
      <Sentence ID="527"></Sentence>
      <Sentence ID="528"></Sentence>
      <Sentence ID="529"></Sentence>
      <Sentence ID="531"></Sentence>
      <Sentence ID="532"></Sentence>
      <Sentence ID="601">Visibilité</Sentence>
      <Sentence ID="602">browserZoom</Sentence>
      <Sentence ID="603">Visibilité</Sentence>
      <Sentence ID="604">Visibilité</Sentence>
      <Sentence ID="605">Visibilité</Sentence>
      <Sentence ID="606">Visibilité</Sentence>
      <Sentence ID="607">Visibilité</Sentence>
      <Sentence ID="608">Visibilité</Sentence>
      <Sentence ID="609">Visibilité</Sentence>
      <Sentence ID="611">Visibilité</Sentence>
      <Sentence ID="612">Visibilité</Sentence>
      <Sentence ID="613">Visibilité</Sentence>
      <Sentence ID="614">Visibilité</Sentence>
      <Sentence ID="615">Visibilité</Sentence>
      <Sentence ID="616">Visibilité</Sentence>
      <Sentence ID="701">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="702">zoom</Sentence>
      <Sentence ID="703">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="704">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="705">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="706">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="707">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="708">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="709">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="711">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="712">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="713">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="714">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="715">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="716">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="717">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="718">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="801">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="802">zoom</Sentence>
      <Sentence ID="803">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="804">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="805">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="806">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="807">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="808">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="809">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="811">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="812">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="813">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="814">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="815">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="816">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="817">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="818">Valeur Incorrecte, doit être une chaîne de caractères</Sentence>
      <Sentence ID="901">Description</Sentence>
      <Sentence ID="902">Description</Sentence>
      <Sentence ID="903">Description</Sentence>
      <Sentence ID="904">Description</Sentence>
      <Sentence ID="905">Description</Sentence>
      <Sentence ID="906">Description</Sentence>
      <Sentence ID="907">Description</Sentence>
      <Sentence ID="908">Description</Sentence>
      <Sentence ID="909">Description</Sentence>
      <Sentence ID="911">Description</Sentence>
      <Sentence ID="912">Description</Sentence>
      <Sentence ID="913">Description</Sentence>
      <Sentence ID="914">Description</Sentence>
      <Sentence ID="915">Description</Sentence>
      <Sentence ID="916">Description</Sentence>
      <Sentence ID="917">Description</Sentence>
      <Sentence ID="918">Description</Sentence>
      <Sentence ID="919">Description</Sentence>
      <Sentence ID="921">Description</Sentence>
      <Sentence ID="922">Description</Sentence>
      <Sentence ID="923">Description</Sentence>
      <Sentence ID="924">Description</Sentence>
      <Sentence ID="925">Description</Sentence>
      <Sentence ID="926">Description</Sentence>
      <Sentence ID="927">Description</Sentence>
      <Sentence ID="928">Description</Sentence>
      <Sentence ID="929">Description</Sentence>
      <Sentence ID="931">Description</Sentence>
      <Sentence ID="932">Description</Sentence>
      <Sentence ID="933">Description</Sentence>
      <Sentence ID="934">Description</Sentence>
      <Sentence ID="935">Description</Sentence>
    </Language>
    <Language Code="ru_RU">
      <Sentence ID="001">Контейнер</Sentence>
      <Sentence ID="002">HTML Контейнер</Sentence>
      <Sentence ID="003"></Sentence>
      <Sentence ID="101">Class CSS</Sentence>
      <Sentence ID="102">Отображение</Sentence>
      <Sentence ID="103">Заголовок</Sentence>
      <Sentence ID="104">Описание</Sentence>
      <Sentence ID="105">Фоновая картинка</Sentence>
      <Sentence ID="106">Повторение фоновой картинки</Sentence>
      <Sentence ID="107">Ключевые слова</Sentence>
      <Sentence ID="108">Описание</Sentence>
      <Sentence ID="109">NoScript</Sentence>
      <Sentence ID="111">Код безопасности</Sentence>
      <Sentence ID="112">Ссылка при отказе</Sentence>
      <Sentence ID="113">jQuery.UI</Sentence>
      <Sentence ID="114"></Sentence>
      <Sentence ID="115">testfunctions</Sentence>
      <Sentence ID="116">testclasses</Sentence>
      <Sentence ID="117">Позиционирование</Sentence>
      <Sentence ID="118">Стиль</Sentence>
      <Sentence ID="119">Цвет ссылки</Sentence>
      <Sentence ID="121">Цвет активной ссылки</Sentence>
      <Sentence ID="122">Цвет посещенной ссылки</Sentence>
      <Sentence ID="123">Цвет фона</Sentence>
      <Sentence ID="124">CSS</Sentence>
      <Sentence ID="125">Cookie warning</Sentence>
      <Sentence ID="126">Cookie warning text</Sentence>
      <Sentence ID="127">Цвет текста</Sentence>
      <Sentence ID="128"></Sentence>
      <Sentence ID="129"></Sentence>
      <Sentence ID="131"></Sentence>
      <Sentence ID="132"></Sentence>
      <Sentence ID="133"></Sentence>
      <Sentence ID="134"></Sentence>
      <Sentence ID="135">Верх</Sentence>
      <Sentence ID="136">Z-Индекс</Sentence>
      <Sentence ID="137"></Sentence>
      <Sentence ID="201">CSS classes for body</Sentence>
      <Sentence ID="202">Отображается объект или нет</Sentence>
      <Sentence ID="203">Заголовок контейнера</Sentence>
      <Sentence ID="204">Описание контейнера</Sentence>
      <Sentence ID="205">Фоновая картинка</Sentence>
      <Sentence ID="206">Способ повторения фоновой картинки</Sentence>
      <Sentence ID="207">Ключевые слова документа для поисковых систем</Sentence>
      <Sentence ID="208">Описание документа для поисковых систем</Sentence>
      <Sentence ID="209">NoScript alert</Sentence>
      <Sentence ID="211">Код безопасности</Sentence>
      <Sentence ID="212">Ссылка при отказе</Sentence>
      <Sentence ID="213">Use jQuery.UI</Sentence>
      <Sentence ID="214"></Sentence>
      <Sentence ID="215">testfunctions</Sentence>
      <Sentence ID="216">testclasses</Sentence>
      <Sentence ID="217">Позиционирование</Sentence>
      <Sentence ID="218">Стиль</Sentence>
      <Sentence ID="219">Цвет ссылки</Sentence>
      <Sentence ID="221">Цвет активной ссылки</Sentence>
      <Sentence ID="222">Цвет посещенной ссылки</Sentence>
      <Sentence ID="223">Цвет фона</Sentence>
      <Sentence ID="224">Таблицы стилей для страницы</Sentence>
      <Sentence ID="225">Display a warning message indicating that application may create cookies on client side.</Sentence>
      <Sentence ID="226">Text to display as message when Cookie warning attribute is enabled.</Sentence>
      <Sentence ID="227">Цвет текста</Sentence>
      <Sentence ID="228"></Sentence>
      <Sentence ID="229"></Sentence>
      <Sentence ID="231"></Sentence>
      <Sentence ID="232"></Sentence>
      <Sentence ID="233"></Sentence>
      <Sentence ID="234"></Sentence>
      <Sentence ID="235">Расстояние от верхней границы родительского контейнера до объекта в пикселях</Sentence>
      <Sentence ID="236">Заголовок контейнера</Sentence>
      <Sentence ID="237"></Sentence>
      <Sentence ID="301">Неправильное значение</Sentence>
      <Sentence ID="302">Неправильное значение</Sentence>
      <Sentence ID="303">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="304">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="305">Неправильное значение</Sentence>
      <Sentence ID="306">Неправильное значение</Sentence>
      <Sentence ID="307">Неправильное значение</Sentence>
      <Sentence ID="308">Неправильное значение</Sentence>
      <Sentence ID="309">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="311">Неправильное значение</Sentence>
      <Sentence ID="312">Неправильное значение</Sentence>
      <Sentence ID="313">Неправильное значение</Sentence>
      <Sentence ID="314"></Sentence>
      <Sentence ID="315">HTML Контейнер</Sentence>
      <Sentence ID="316">HTML Контейнер</Sentence>
      <Sentence ID="317">Неправильное значение</Sentence>
      <Sentence ID="318">Неправильное значение</Sentence>
      <Sentence ID="319">Неправильное значение</Sentence>
      <Sentence ID="321">Неправильное значение</Sentence>
      <Sentence ID="322">Неправильное значение</Sentence>
      <Sentence ID="323">Неправильное значение</Sentence>
      <Sentence ID="324">Неправильное значение</Sentence>
      <Sentence ID="325">Incorrect value, must be 0 or 1.</Sentence>
      <Sentence ID="326">Incorrect value.</Sentence>
      <Sentence ID="327">Неправильное значение</Sentence>
      <Sentence ID="328"></Sentence>
      <Sentence ID="329"></Sentence>
      <Sentence ID="331"></Sentence>
      <Sentence ID="332"></Sentence>
      <Sentence ID="333"></Sentence>
      <Sentence ID="334"></Sentence>
      <Sentence ID="335">Неправильное значение, должно быть целое положительное число</Sentence>
      <Sentence ID="336">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="337"></Sentence>
      <Sentence ID="401">Повторять</Sentence>
      <Sentence ID="402">Не повторять</Sentence>
      <Sentence ID="403">Повторять по X</Sentence>
      <Sentence ID="404">Повторять по Y</Sentence>
      <Sentence ID="405">Yes</Sentence>
      <Sentence ID="406">No</Sentence>
      <Sentence ID="407">Left</Sentence>
      <Sentence ID="408">Center</Sentence>
      <Sentence ID="409">JS Center</Sentence>
      <Sentence ID="411">Disabled</Sentence>
      <Sentence ID="412">Enabled</Sentence>
      <Sentence ID="413"></Sentence>
      <Sentence ID="414"></Sentence>
      <Sentence ID="415"></Sentence>
      <Sentence ID="416"></Sentence>
      <Sentence ID="417"></Sentence>
      <Sentence ID="418"></Sentence>
      <Sentence ID="419"></Sentence>
      <Sentence ID="421"></Sentence>
      <Sentence ID="422"></Sentence>
      <Sentence ID="423"></Sentence>
      <Sentence ID="424"></Sentence>
      <Sentence ID="425"></Sentence>
      <Sentence ID="426"></Sentence>
      <Sentence ID="427"></Sentence>
      <Sentence ID="428"></Sentence>
      <Sentence ID="429"></Sentence>
      <Sentence ID="431"></Sentence>
      <Sentence ID="432"></Sentence>
      <Sentence ID="433">Не отображается</Sentence>
      <Sentence ID="434">Отображается</Sentence>
      <Sentence ID="435"></Sentence>
      <Sentence ID="436"></Sentence>
      <Sentence ID="501">Z-Индекс</Sentence>
      <Sentence ID="502">browserZoom</Sentence>
      <Sentence ID="503">Z-Индекс</Sentence>
      <Sentence ID="504">Z-Индекс</Sentence>
      <Sentence ID="505">Z-Индекс</Sentence>
      <Sentence ID="506">Z-Индекс</Sentence>
      <Sentence ID="507">Z-Индекс</Sentence>
      <Sentence ID="508">Z-Индекс</Sentence>
      <Sentence ID="509">Z-Индекс</Sentence>
      <Sentence ID="511">Z-Индекс</Sentence>
      <Sentence ID="512">Z-Индекс</Sentence>
      <Sentence ID="513">Z-Индекс</Sentence>
      <Sentence ID="514">Z-Индекс</Sentence>
      <Sentence ID="515">Z-Индекс</Sentence>
      <Sentence ID="516">Z-Индекс</Sentence>
      <Sentence ID="517"></Sentence>
      <Sentence ID="518"></Sentence>
      <Sentence ID="519"></Sentence>
      <Sentence ID="521"></Sentence>
      <Sentence ID="522"></Sentence>
      <Sentence ID="523"></Sentence>
      <Sentence ID="524"></Sentence>
      <Sentence ID="525"></Sentence>
      <Sentence ID="526"></Sentence>
      <Sentence ID="527"></Sentence>
      <Sentence ID="528"></Sentence>
      <Sentence ID="529"></Sentence>
      <Sentence ID="531"></Sentence>
      <Sentence ID="532"></Sentence>
      <Sentence ID="601">Z-Индекс</Sentence>
      <Sentence ID="602">browserZoom</Sentence>
      <Sentence ID="603">Z-Индекс</Sentence>
      <Sentence ID="604">Z-Индекс</Sentence>
      <Sentence ID="605">Z-Индекс</Sentence>
      <Sentence ID="606">Z-Индекс</Sentence>
      <Sentence ID="607">Z-Индекс</Sentence>
      <Sentence ID="608">Z-Индекс</Sentence>
      <Sentence ID="609">Z-Индекс</Sentence>
      <Sentence ID="611">Z-Индекс</Sentence>
      <Sentence ID="612">Z-Индекс</Sentence>
      <Sentence ID="613">Z-Индекс</Sentence>
      <Sentence ID="614">Z-Индекс</Sentence>
      <Sentence ID="615">Z-Индекс</Sentence>
      <Sentence ID="616">Z-Индекс</Sentence>
      <Sentence ID="701">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="702">zoom</Sentence>
      <Sentence ID="703">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="704">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="705">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="706">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="707">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="708">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="709">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="711">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="712">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="713">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="714">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="715">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="716">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="717">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="718">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="801">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="802">zoom</Sentence>
      <Sentence ID="803">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="804">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="805">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="806">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="807">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="808">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="809">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="811">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="812">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="813">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="814">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="815">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="816">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="817">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="818">Неправильное значение, должна быть строка</Sentence>
      <Sentence ID="901">Описание</Sentence>
      <Sentence ID="902">Описание</Sentence>
      <Sentence ID="903">Описание</Sentence>
      <Sentence ID="904">Описание</Sentence>
      <Sentence ID="905">Описание</Sentence>
      <Sentence ID="906">Описание</Sentence>
      <Sentence ID="907">Описание</Sentence>
      <Sentence ID="908">Описание</Sentence>
      <Sentence ID="909">Описание</Sentence>
      <Sentence ID="911">Описание</Sentence>
      <Sentence ID="912">Описание</Sentence>
      <Sentence ID="913">Описание</Sentence>
      <Sentence ID="914">Описание</Sentence>
      <Sentence ID="915">Описание</Sentence>
      <Sentence ID="916">Описание</Sentence>
      <Sentence ID="917">Описание</Sentence>
      <Sentence ID="918">Описание</Sentence>
      <Sentence ID="919">Описание</Sentence>
      <Sentence ID="921">Описание</Sentence>
      <Sentence ID="922">Описание</Sentence>
      <Sentence ID="923">Описание</Sentence>
      <Sentence ID="924">Описание</Sentence>
      <Sentence ID="925">Описание</Sentence>
      <Sentence ID="926">Описание</Sentence>
      <Sentence ID="927">Описание</Sentence>
      <Sentence ID="928">Описание</Sentence>
      <Sentence ID="929">Описание</Sentence>
      <Sentence ID="931">Описание</Sentence>
      <Sentence ID="932">Описание</Sentence>
      <Sentence ID="933">Описание</Sentence>
      <Sentence ID="934">Описание</Sentence>
      <Sentence ID="935">Описание</Sentence>
    </Language>
  </Languages>
  <Resources>
    <Resource ID="67a38932-aa05-4c6c-9b20-0398c6a53333" Name="Icon" Type="jpg"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
			bWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
			bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
			eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
			NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
			dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
			dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
			IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
			ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
			cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlE
			PSJ4bXAuaWlkOjNGQzVBMEYwMjQ3RjExRTE5MTgyRDE3OTI5RTM3Q0YzIiB4bXBNTTpEb2N1bWVu
			dElEPSJ4bXAuZGlkOjNGQzVBMEYxMjQ3RjExRTE5MTgyRDE3OTI5RTM3Q0YzIj4gPHhtcE1NOkRl
			cml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6M0ZDNUEwRUUyNDdGMTFFMTkxODJE
			MTc5MjlFMzdDRjMiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6M0ZDNUEwRUYyNDdGMTFFMTkx
			ODJEMTc5MjlFMzdDRjMiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1l
			dGE+IDw/eHBhY2tldCBlbmQ9InIiPz4FXlqsAAABqElEQVR42mLMW/uIgRTA8vfvP6wSMgJsPOxM
			N17+IFZDsIEAE8PvEzff8vJyomj48/cvpmpzBV5pgV8vv91XEvz27AcbIyOSht9//qCp5mBhCtDn
			e/399qU3ezU0GG7st+Pi40XWgG5DkIEwK+vn+68v3nx/4t//PzoKMteeazEzM8E0/EaxQYib1UGd
			+9nXC3c+nHnz4/H///+U5Q9dvyf+m10QooDRf/IZNBv+/P579+azf/+QA4NRUVWCg5MNZMOv338w
			Pa2oLgl1ACODMNv/lz9BvoaohDppd644sgbXyS+BpIMYQ6rSf9Z/fx48edvzTuIVOEqQbHg+Fa7h
			7X11GUXNdGXmj3t2P5k+/d/Pn06apvPdS5nZOJiAwYoZssDIEWX7x/Dxw+MpU4CqgSK8D29/eHQN
			qBJLsII1/Lv94febJy/+w8y6Lij968dXoGKcNnz6+afxneRTcblfTCwnxFVXKFkwcPACVTJql2yC
			KPr+/BayHk5JNSD59/vn7y9v//v1nZVXhENchZGJGZH42MRUkDVAxdm4OWUNICL//gNF/wEEGACV
			Q9SgBtjJgwAAAABJRU5ErkJggg==]]></Resource>
    <Resource ID="e33a6604-253c-4723-a7ac-123532bc1a5f" Name="Icon" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
			bWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
			bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
			eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
			NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
			dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
			dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
			IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
			ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
			cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlE
			PSJ4bXAuaWlkOjNGQzVBMEYwMjQ3RjExRTE5MTgyRDE3OTI5RTM3Q0YzIiB4bXBNTTpEb2N1bWVu
			dElEPSJ4bXAuZGlkOjNGQzVBMEYxMjQ3RjExRTE5MTgyRDE3OTI5RTM3Q0YzIj4gPHhtcE1NOkRl
			cml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6M0ZDNUEwRUUyNDdGMTFFMTkxODJE
			MTc5MjlFMzdDRjMiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6M0ZDNUEwRUYyNDdGMTFFMTkx
			ODJEMTc5MjlFMzdDRjMiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1l
			dGE+IDw/eHBhY2tldCBlbmQ9InIiPz4FXlqsAAABqElEQVR42mLMW/uIgRTA8vfvP6wSMgJsPOxM
			N17+IFZDsIEAE8PvEzff8vJyomj48/cvpmpzBV5pgV8vv91XEvz27AcbIyOSht9//qCp5mBhCtDn
			e/399qU3ezU0GG7st+Pi40XWgG5DkIEwK+vn+68v3nx/4t//PzoKMteeazEzM8E0/EaxQYib1UGd
			+9nXC3c+nHnz4/H///+U5Q9dvyf+m10QooDRf/IZNBv+/P579+azf/+QA4NRUVWCg5MNZMOv338w
			Pa2oLgl1ACODMNv/lz9BvoaohDppd644sgbXyS+BpIMYQ6rSf9Z/fx48edvzTuIVOEqQbHg+Fa7h
			7X11GUXNdGXmj3t2P5k+/d/Pn06apvPdS5nZOJiAwYoZssDIEWX7x/Dxw+MpU4CqgSK8D29/eHQN
			qBJLsII1/Lv94febJy/+w8y6Lij968dXoGKcNnz6+afxneRTcblfTCwnxFVXKFkwcPACVTJql2yC
			KPr+/BayHk5JNSD59/vn7y9v//v1nZVXhENchZGJGZH42MRUkDVAxdm4OWUNICL//gNF/wEEGACV
			Q9SgBtjJgwAAAABJRU5ErkJggg==]]></Resource>
    <Resource ID="135aaf50-6055-4db3-8c14-7d9ac93dd30f" Name="Icon" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJ
			bWFnZVJlYWR5ccllPAAAAyBpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
			bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6
			eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEz
			NDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJo
			dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
			dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAv
			IiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RS
			ZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpD
			cmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIiB4bXBNTTpJbnN0YW5jZUlE
			PSJ4bXAuaWlkOkZFODA2NkNBMjQ4MDExRTFBOTlBQ0E3OTQ5RTQ4REExIiB4bXBNTTpEb2N1bWVu
			dElEPSJ4bXAuZGlkOkZFODA2NkNCMjQ4MDExRTFBOTlBQ0E3OTQ5RTQ4REExIj4gPHhtcE1NOkRl
			cml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RkU4MDY2QzgyNDgwMTFFMUE5OUFD
			QTc5NDlFNDhEQTEiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RkU4MDY2QzkyNDgwMTFFMUE5
			OUFDQTc5NDlFNDhEQTEiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1l
			dGE+IDw/eHBhY2tldCBlbmQ9InIiPz5YzvwKAAAMt0lEQVR42tRaaWwc1R3/zbG7Xu+ub8d2EieO
			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]]></Resource>
    <Resource ID="1c378464-5553-3eb4-8e12-ebcec2bbee33" Name="emptygif" Type="gif"><![CDATA[R0lGODlhAQABAKEAAPT29AAAAAAAAAAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==]]></Resource>
    <Resource ID="3e932470-0e08-446c-a866-30c00e6d812a" Name="fn_printArea" Type="js"><![CDATA[KGZ1bmN0aW9uKEIpe3ZhciBBPTA7Qi5mbi5wcmludEFyZWE9ZnVuY3Rpb24oKXt2YXIgSD1CKHRo
			aXMpO3ZhciBHPSJwcmludEFyZWFfIjtDKEcrQSk7QSsrO3ZhciBKPUcrQTt2YXIgRj1kb2N1bWVu
			dC5jcmVhdGVFbGVtZW50KCJJRlJBTUUiKTtCKEYpLmF0dHIoInN0eWxlIiwicG9zaXRpb246YWJz
			b2x1dGU7d2lkdGg6MHB4O2hlaWdodDowcHg7bGVmdDotNTAwcHg7dG9wOi01MDBweDsiKTtCKEYp
			LmF0dHIoImlkIixKKTtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKEYpO3ZhciBJPUYuY29udGVu
			dFdpbmRvdy5kb2N1bWVudDt2YXIgRD13aW5kb3cuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05h
			bWUoImxpbmsiKTtmb3IodmFyIEU9MDtFPEQubGVuZ3RoO0UrKyl7aWYoRFtFXS5yZWwudG9Mb3dl
			ckNhc2UoKT09InN0eWxlc2hlZXQiKXtJLndyaXRlKCc8bGluayB0eXBlPSJ0ZXh0L2NzcyIgcmVs
			PSJzdHlsZXNoZWV0IiBocmVmPSInK0RbRV0uaHJlZisnIj48L2xpbms+Jyl9fUkud3JpdGUoJzxk
			aXYgY2xhc3M9IicrQihIKS5hdHRyKCJjbGFzcyIpKyciPicrQihIKS5odG1sKCkrIjwvZGl2PiIp
			O0kuY2xvc2UoKTtGLmNvbnRlbnRXaW5kb3cuZm9jdXMoKTtGLmNvbnRlbnRXaW5kb3cucHJpbnQo
			KX07dmFyIEM9ZnVuY3Rpb24oRCl7QigiaWZyYW1lIyIrRCkucmVtb3ZlKCl9fSkoalF1ZXJ5KTs=]]></Resource>
    <Resource ID="f571e9e8-e892-49a4-bea0-ff8e15c2c697" Name="momemnt.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="6cdc7eef-c7d2-bc99-b202-98b2d9052836" Name="history.min.js" Type="js"><![CDATA[LyoKICogaGlzdG9yeSBBUEkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjEuMCBiZXRhCiAqCiAqIFN1
			cHBvcnQ6IElFNissIEZGMyssIE9wZXJhIDkrLCBTYWZhcmksIENocm9tZQogKgogKiBDb3B5cmln
			aHQgMjAxMS0yMDEyLCBEbWl0cml5IFBha2h0aW5vdiAoIHNwYi5waWtzZWxAZ21haWwuY29tICkK
			ICoKICogaHR0cDovL3NwYi1waWtzZWwucnUvCiAqCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhl
			IE1JVCBhbmQgR1BMIGxpY2Vuc2VzOgogKiAgIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGlj
			ZW5zZXMvbWl0LWxpY2Vuc2UucGhwCiAqICAgaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dw
			bC5odG1sCiAqCiAqIFVwZGF0ZTogMjAtMDUtMjAxMgogKi8KKGZ1bmN0aW9uKGUseixzLGosVCl7
			ZnVuY3Rpb24gRyhhLGMsZyl7dmFyIGQ9Mj09PWE/ZS5vbmhhc2hjaGFuZ2U6ZS5vbnBvcHN0YXRl
			LGI9Mj09PWE/Imhhc2hjaGFuZ2UiOiJwb3BzdGF0ZSIsZj13W2JdO20uY3JlYXRlRXZlbnQ/KGE9
			bS5jcmVhdGVFdmVudCgiRXZlbnRzIiksYS5pbml0RXZlbnQoYixzLHMpKTooYT1tLmNyZWF0ZUV2
			ZW50T2JqZWN0KCksYS50eXBlPWIpO2Euc3RhdGU9bi5zdGF0ZTthLm9sZFVSTD1jO2EubmV3VVJM
			PWc7ZCYmZC5jYWxsKGUsYSk7Yz0wO2ZvcihnPWYubGVuZ3RoO2M8ZztjKyspZltjXS5jYWxsKGUs
			YSl9ZnVuY3Rpb24gTihhKXtyZXR1cm4gSD9hP0guc2V0SXRlbSgiX19oaXRvcnlhcGlfXyIsSShh
			KSk6TyhILmdldEl0ZW0oIl9faGl0b3J5YXBpX18iKSl8fHt9Ont9fWZ1bmN0aW9uIFAoYSxjLGcp
			e3ZhciBkPWEsYixmPXM7aWYoQXx8Qilmb3IoYiBpbiBjKXtpZihDLmNhbGwoYyxiKSlpZihCKWNb
			Yl0uZ2V0JiZCLmNhbGwoYSxiLGNbYl0uZ2V0KSwKY1tiXS5zZXQmJlouY2FsbChhLGIsY1tiXS5z
			ZXQpO2Vsc2UgaWYoQSl0cnl7QShhLGIsY1tiXSl9Y2F0Y2goaCl7aWYoZylyZXR1cm4gcztmPXo7
			YnJlYWt9fWVsc2UgZj16O2lmKGYmJngpe2c9IlN0YXRpY0NsYXNzIiskK3grKztkPVsiQ2xhc3Mg
			IitnXTsiZXhlY1ZCImluIGV8fGV4ZWNTY3JpcHQoIkZ1bmN0aW9uIGV4ZWNWQihjKSBFeGVjdXRl
			R2xvYmFsKGMpIEVuZCBGdW5jdGlvbiIsIlZCU2NyaXB0Iik7IlZCQ1ZhbCJpbiBlfHxleGVjU2Ny
			aXB0KCJGdW5jdGlvbiBWQkNWYWwobyxyKSBJZiBJc09iamVjdChvKSBUaGVuIFNldCByPW8gRWxz
			ZSByPW8gRW5kIElmIEVuZCBGdW5jdGlvbiIsIlZCU2NyaXB0Iik7Zm9yKGIgaW4gYSlkW2QubGVu
			Z3RoXT0iUHVibGljIFsiK2IrIl0iO0MuY2FsbChhLCJ0b1N0cmluZyIpJiYoYS5wcm9wZXJ0eUlz
			RW51bWVyYWJsZSgidG9TdHJpbmciKXx8KGRbZC5sZW5ndGhdPSJQdWJsaWMgW3RvU3RyaW5nXSIp
			LGNbIih0b1N0cmluZykiXT17Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TdHJpbmcuY2Fs
			bCh0aGlzKX19KTsKZm9yKGIgaW4gYylpZihDLmNhbGwoYyxiKSYmKGNbYl0uZ2V0JiYoYVsiZ2V0
			ICIrYl09Y1tiXS5nZXQsZC5wdXNoKCJQdWJsaWMgW2dldCAiK2IrIl0iLCJQdWJsaWMgIisoIih0
			b1N0cmluZykiPT09Yj8iRGVmYXVsdCAiOiIiKSsiUHJvcGVydHkgR2V0IFsiK2IrIl0iLCJDYWxs
			IFZCQ1ZhbChtZS5bZ2V0ICIrYisiXS5jYWxsKG1lKSxbIitiKyJdKSIsIkVuZCBQcm9wZXJ0eSIp
			KSxjW2JdLnNldCkpYVsic2V0ICIrYl09Y1tiXS5zZXQsZC5wdXNoKCJQdWJsaWMgW3NldCAiK2Ir
			Il0iLCJQdWJsaWMgUHJvcGVydHkgTGV0IFsiK2IrIl0odikiLCJDYWxsIG1lLltzZXQgIitiKyJd
			LmNhbGwobWUsdikiLCJFbmQgUHJvcGVydHkiLCJQdWJsaWMgUHJvcGVydHkgU2V0IFsiK2IrIl0o
			dikiLCJDYWxsIG1lLltzZXQgIitiKyJdLmNhbGwobWUsdikiLCJFbmQgUHJvcGVydHkiKTtkLnB1
			c2goIkVuZCBDbGFzcyIsIkZ1bmN0aW9uICIrZysiRmFjdG9yeSgpIiwiU2V0ICIrZysiRmFjdG9y
			eT1OZXcgIisKZywiRW5kIEZ1bmN0aW9uIik7ZXhlY1ZCKGQuam9pbigiXG4iKSk7ZD1lW2crIkZh
			Y3RvcnkiXSgpO2ZvcihiIGluIGEpZFtiXT1hW2JdO0MuY2FsbChhLCJ0b1N0cmluZyIpJiYoZC50
			b1N0cmluZz1hLnRvU3RyaW5nKX1yZXR1cm4gZH12YXIgbT1lLmRvY3VtZW50LHI9ZS5oaXN0b3J5
			fHx7fSxmPWUubG9jYXRpb24scD0hIXIucHVzaFN0YXRlLGFhPXAmJnIuc3RhdGU9PT1ULHU9Zi5o
			cmVmLHY9ZS5KU09OfHx7fSxBPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxCPU9iamVjdC5wcm90b3R5
			cGUuX19kZWZpbmVHZXR0ZXJfXyxaPU9iamVjdC5wcm90b3R5cGUuX19kZWZpbmVTZXR0ZXJfXyxV
			PXIucHVzaFN0YXRlLFY9ci5yZXBsYWNlU3RhdGUsSD1lLnNlc3Npb25TdG9yYWdlLEM9T2JqZWN0
			LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxiYT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLHk9
			ZXZhbCgiLypAY2Nfb24gKEBfanNjcmlwdF92ZXJzaW9uKycnKS5yZXBsYWNlKC9cXGRcXC4vLCAn
			Jyk7QCovIiksCiQ9KG5ldyBEYXRlKS5nZXRUaW1lKCkseD0oQXx8QikmJigheXx8ODx5KT8wOjEs
			aT04Pnk/bS5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTpzLEQsRSxGLEo9IiIsSz0oRD0iYWRkRXZl
			bnRMaXN0ZW5lciIsZVtEXSl8fChEPSJhdHRhY2hFdmVudCIsSj0ib24iLGVbRF0pLGNhPShFPSJy
			ZW1vdmVFdmVudExpc3RlbmVyIixlW0VdKXx8KEU9ImRldGFjaEV2ZW50IixlW0VdKSxkYT0oRj0i
			ZGlzcGF0Y2hFdmVudCIsZVtGXSl8fChGPSJmaXJlRXZlbnQiLGVbRl0pLEw9W10seT1bXSxRPTAs
			dz17b25wb3BzdGF0ZTpMLHBvcHN0YXRlOkwsb25oYXNoY2hhbmdlOnksaGFzaGNoYW5nZTp5fSx0
			PWZ1bmN0aW9uKCl7dmFyIGEsYyxnLGQ9e2Jhc2VwYXRoOiIvIixyZWRpcmVjdDowLHR5cGU6Ii8i
			fTtnPW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIlNDUklQVCIpO2ZvcihhPTA7Z1thXTthKyspaWYo
			Yz0vKC4qKVwvKD86aGlzdG9yeXxzcGlrZSkoPzotXGRcLlxkKD86XC5cZCk/XHc/KT8oPzpcLm1p
			bik/LmpzXD8oLiopJC9pLmV4ZWMoZ1thXS5zcmMpfHwKYT09PWcubGVuZ3RoLTEmJjI9PT0oYz1n
			W2FdLnNyYy5zcGxpdCgiPyIpKS5sZW5ndGgmJihjWzJdPWNbMV0pJiZjKXthPTA7Zm9yKGc9Y1sy
			XS5zcGxpdCgiJiIpO2dbYV07KWM9Z1thKytdLnNwbGl0KCI9IiksZFtjWzBdXT0idHJ1ZSI9PWNb
			MV0/ejoiZmFsc2UiPT1jWzFdP3M6Y1sxXXx8IiI7ZC5iYXNlcGF0aD1kLmJhc2VwYXRofHwiLyI7
			YnJlYWt9cmV0dXJuIGR9KCksbD1mdW5jdGlvbihhKXt2YXIgYyxnLGQsYixlLGgscSxpPVJlZ0V4
			cCgiXiIrdC5iYXNlcGF0aCwiaSIpO3JldHVybiBmdW5jdGlvbihrLGope2lmKGspe2lmKCFwKXZh
			ciBvPWwoKSxSPW8uZixYPW8uaSxrPS9eKD86W2Etel0rXDopP1wvXC8vLnRlc3Qoayk/MD09PWsu
			aW5kZXhPZigiLyIpP1grazprOlgrIi8vIitvLmgrKDA9PT1rLmluZGV4T2YoIi8iKT9rOjA9PT1r
			LmluZGV4T2YoIj8iKT9SK2s6MD09PWsuaW5kZXhPZigiIyIpP1Irby5nK2s6Ui5yZXBsYWNlKC9b
			XlwvXSskL2csIiIpK2spfWVsc2UgaWYoaz0KZi5ocmVmLCFwfHxqKWs9Zi5wcm90b2NvbCsiLy8i
			K2YuaG9zdCt0LmJhc2VwYXRoKyhrLnJlcGxhY2UoL15bXiNdKi8sIiIpfHwiIyIpLnJlcGxhY2Uo
			UmVnRXhwKCJeI1svXT8oPzoiK3QudHlwZSsiKT8iKSwiIik7aWYoYyE9PWspe2EuaHJlZj1jPWs7
			aD1hLnBvcnQ7ZT1hLmhvc3Q7cT1hLnBhdGhuYW1lO2lmKCJodHRwOiI9PT1hLnByb3RvY29sJiY4
			MD09aHx8Imh0dHBzOiI9PT1hLnByb3RvY29sJiY0NDM9PWgpZT1hLmhvc3RuYW1lLGg9IiI7cT0w
			PT09cS5pbmRleE9mKCIvIik/cToiLyIrcTtnPXErYS5zZWFyY2grYS5oYXNoO2I9cS5yZXBsYWNl
			KGksdC50eXBlKSthLnNlYXJjaDtkPWIrYS5oYXNofXJldHVybnthOmEucHJvdG9jb2wrIi8vIitl
			K2csaTphLnByb3RvY29sLGg6ZSxqOmEuaG9zdG5hbWV8fGYuaG9zdG5hbWUsazpofHxmLnBvcnQs
			ZjpxLGc6YS5zZWFyY2gsZTphLmhhc2gsYjpnLGM6YixkOmR9fX0obS5jcmVhdGVFbGVtZW50KCJh
			IikpLG49IXg/cjp7YmFjazpyLmJhY2ssCmZvcndhcmQ6ci5mb3J3YXJkLGdvOnIuZ28scHVzaFN0
			YXRlOmoscmVwbGFjZVN0YXRlOmosZW11bGF0ZTohcCx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVy
			biJbb2JqZWN0IEhpc3RvcnldIn19LE09e3N0YXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gaSYm
			aS5zdG9yYWdlfHxOKClbbi5sb2NhdGlvbi5ocmVmXXx8an19LGxlbmd0aDp7Z2V0OmZ1bmN0aW9u
			KCl7cmV0dXJuIHIubGVuZ3RofX0sbG9jYXRpb246e3NldDpmdW5jdGlvbihhKXtlLmxvY2F0aW9u
			PWF9LGdldDpmdW5jdGlvbigpe3JldHVybiBwP2Y6U319fSxTPXthc3NpZ246ZnVuY3Rpb24oYSl7
			Zi5hc3NpZ24ocHx8MCE9PWEuaW5kZXhPZigiIyIpP2E6IiMiK2woKS5jK2EpfSxyZWxvYWQ6Zi5y
			ZWxvYWQscmVwbGFjZTpmdW5jdGlvbihhKXtmLnJlcGxhY2UocHx8MCE9PWEuaW5kZXhPZigiIyIp
			P2E6IiMiK2woKS5jK2EpfSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhyZWZ9fSxl
			YT17aHJlZjp7c2V0OmZ1bmN0aW9uKGEpe2YuaHJlZj0KYX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJu
			IGwoKS5hfX0scHJvdG9jb2w6e3NldDpmdW5jdGlvbihhKXtmLnByb3RvY29sPWF9LGdldDpmdW5j
			dGlvbigpe3JldHVybiBmLnByb3RvY29sfX0saG9zdDp7c2V0OmZ1bmN0aW9uKGEpe2YuaG9zdD1h
			fSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZi5ob3N0fX0saG9zdG5hbWU6e3NldDpmdW5jdGlvbihh
			KXtmLmhvc3RuYW1lPWF9LGdldDpmdW5jdGlvbigpe3JldHVybiBmLmhvc3RuYW1lfX0scG9ydDp7
			c2V0OmZ1bmN0aW9uKGEpe2YucG9ydD1hfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZi5wb3J0fX0s
			cGF0aG5hbWU6e3NldDpmdW5jdGlvbihhKXtmLnBhdGhuYW1lPWF9LGdldDpmdW5jdGlvbigpe3Jl
			dHVybiBsKCkuZn19LHNlYXJjaDp7c2V0OmZ1bmN0aW9uKGEpe2Yuc2VhcmNoPWF9LGdldDpmdW5j
			dGlvbigpe3JldHVybiBsKCkuZ319LGhhc2g6e3NldDpmdW5jdGlvbihhKXt2YXIgYT0wPT09YS5p
			bmRleE9mKCIjIik/YToiIyIrYSxjPQpsKCk7aT9hIT1jLmUmJihuLnB1c2hTdGF0ZShqLGosYy5j
			K2EpLFkoe29sZFVSTDpjLmF9KSk6Zi5oYXNoPSIjIitjLmMrYX0sZ2V0OmZ1bmN0aW9uKCl7cmV0
			dXJuIGwoKS5lfX19LEk9di5zdHJpbmdpZnl8fGZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGMoZCl7dmFy
			IGIsZSxoO2I9KHR5cGVvZiBkKS5jaGFyQ29kZUF0KDIpO2lmKDExND09PWIpZD1nKGQpO2Vsc2Ug
			aWYoMTA5PT09YilkPWlzRmluaXRlKGQpPyIiK2Q6Im51bGwiO2Vsc2UgaWYoMTExPT09Ynx8MTA4
			PT09YilkPSIiK2Q7ZWxzZSBpZigxMDY9PT1iKWlmKGQpe2U9KGI9IltvYmplY3QgQXJyYXldIj09
			PWJhLmFwcGx5KGQpKT8iWyI6InsiO2lmKGIpZm9yKGg9MDtoPGQubGVuZ3RoO2grKyllKz0oMD09
			aD8iIjoiLCIpK2MoZFtoXSk7ZWxzZSBmb3IoaCBpbiBkKUMuY2FsbChkLGgpJiZkW2hdIT09YSYm
			KGUrPSgxPT1lLmxlbmd0aD8iIjoiLCIpK2coaCkrIjoiK2MoZFtoXSkpO2Q9ZSsoYj8iXSI6In0i
			KX1lbHNlIGQ9Im51bGwiOwplbHNlIGQ9YTtyZXR1cm4gZH1mdW5jdGlvbiBnKGEpe3ZhciBiPS9b
			XFxcIlx1MDAwMC1cdTAwMWZcdTAwN2YtXHUwMDlmXHUwMGFkXHUwNjAwLVx1MDYwNFx1MDcwZlx1
			MTdiNFx1MTdiNVx1MjAwYy1cdTIwMGZcdTIwMjgtXHUyMDJmXHUyMDYwLVx1MjA2Zlx1ZmVmZlx1
			ZmZmMC1cdWZmZmZdL2csYz17Ilx1MDAwOCI6IlxcYiIsIlx0IjoiXFx0IiwiXG4iOiJcXG4iLCJc
			dTAwMGMiOiJcXGYiLCJcciI6IlxcciIsJyInOidcXCInLCJcXCI6IlxcXFwifTtiLmxhc3RJbmRl
			eD0wO3JldHVybiBiLnRlc3QoYSk/JyInK2EucmVwbGFjZShiLGZ1bmN0aW9uKGEpe3ZhciBiPWNb
			YV07cmV0dXJuInN0cmluZyI9PT10eXBlb2YgYj9iOiJcXHUiKygiMDAwMCIrYS5jaGFyQ29kZUF0
			KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTQpfSkrJyInOiciJythKyciJ31yZXR1cm4gY30oKSxP
			PWZ1bmN0aW9uKCl7dmFyIGE9di5wYXJzZTtyZXR1cm4gZnVuY3Rpb24oYyl7cmV0dXJuIGM/YT9h
			KGMpOihuZXcgRnVuY3Rpb24oInJldHVybiAiKwpjKSkoKTpqfX0oKSxZPWZ1bmN0aW9uKCl7ZnVu
			Y3Rpb24gYShhKXt2YXIgYz1sKCk7aWYoUSlyZXR1cm4gcT1jLmEsUT0wO3ZhciBkPWEub2xkVVJM
			fHxxLGE9cT1hLm5ld1VSTHx8Yy5hLGM9ZC5yZXBsYWNlKC9eLio/KCN8JCkvLCIiKSxlPWEucmVw
			bGFjZSgvXi4qPygjfCQpLywiIik7ZCE9YSYmIWImJkcoKTt1PWI9MDtjIT1lJiZHKDIsZCxhKX1m
			dW5jdGlvbiBjKCl7aWYodSYmISh1PTApJiZoLmIhPT10LmJhc2VwYXRoKWNsZWFySW50ZXJ2YWwo
			aSksc2V0VGltZW91dChHLDEwKX12YXIgZz1lLm9ucG9wc3RhdGV8fGosZD1lLm9uaGFzaGNoYW5n
			ZXx8aixiPTAsaT1qLGg9bCgpLHE9aC5hO2guZS5yZXBsYWNlKC9eIy8sIiIpO0soSisiaGFzaGNo
			YW5nZSIsYSxzKTtLKEorInBvcHN0YXRlIixmdW5jdGlvbigpe2lmKHU9PT1mLmhyZWYpcmV0dXJu
			IHU9MDt1PTA7RyhiPTEpfSxzKTtuLmZpeFVSTD1mdW5jdGlvbihhKXtyZXR1cm4gbChhKS5ifTtu
			PVAobix4P006ci5zdGF0ZT09PQpUP3tzdGF0ZTpNLnN0YXRlLGxvY2F0aW9uOk0ubG9jYXRpb259
			Ontsb2NhdGlvbjpNLmxvY2F0aW9ufSk7Uz1QKFMsZWEpO2VbRF09ZnVuY3Rpb24oYSxiLGQsZSl7
			d1thXT8od1thXS5wdXNoKGIpLCFwJiZMPT09d1thXSYmYygpKTpLKGEsYixkLGUpfTtlW0VdPWZ1
			bmN0aW9uKGEsYixjKXt2YXIgZD13W2FdO2lmKGQpZm9yKGE9ZC5sZW5ndGg7LS1hOyl7aWYoZFth
			XT09PWIpe2Quc3BsaWNlKGEsMSk7YnJlYWt9fWVsc2UgY2EoYSxiLGMpfTtlW0ZdPWZ1bmN0aW9u
			KGEsYil7dmFyIGM9d1thXSxkPWM9PT1MP2Uub25wb3BzdGF0ZTplLm9uaGFzaGNoYW5nZTtpZihj
			KXtiPWJ8fCgic3RyaW5nIj09dHlwZW9mIGE/ZS5ldmVudDphKTt0cnl7YiYmKGIudGFyZ2V0PWUp
			fWNhdGNoKGcpe3RyeXtiLnNyY0VsZW1lbnQ9ZX1jYXRjaChoKXt9fWQmJmQuY2FsbChlLGIpO2Zv
			cih2YXIgZD0wLGY9Yy5sZW5ndGg7ZDxmO2QrKyljW2RdLmNhbGwoZSxiKTtyZXR1cm4gen1yZXR1
			cm4gZGEoYSwKYil9O3gmJmV4ZWNTY3JpcHQoIlB1YmxpYyBoaXN0b3J5LCBvbmhhc2hjaGFuZ2Ui
			LCJWQlNjcmlwdCIpO2lmKCghQSYmIUJ8fCFQKGUse29uaGFzaGNoYW5nZTp7Z2V0OmZ1bmN0aW9u
			KCl7cmV0dXJuIGR9LHNldDpmdW5jdGlvbihhKXtkPWF8fGp9fSxvbnBvcHN0YXRlOntnZXQ6ZnVu
			Y3Rpb24oKXtyZXR1cm4gZ30sc2V0OmZ1bmN0aW9uKGEpeyhnPWF8fGopJiYhcCYmYygpfX19LDEp
			KSYmIXApaT1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2Uub25wb3BzdGF0ZSYmYygpfSwxMDApO2lm
			KHQucmVkaXJlY3QmJjA9PT1lLnBhcmVudC5mcmFtZXMubGVuZ3RoKXt2YXIgVz1sKGoseikuYixr
			PWYuc2VhcmNoLG09Zi5wYXRobmFtZSxvPXQuYmFzZXBhdGg7aWYocCl7aWYoVyE9byYmUmVnRXhw
			KCJeIitvKyIkIiwiaSIpLnRlc3QobSkmJihmLmhyZWY9VyksIVJlZ0V4cCgiXiIrbywiaSIpLnRl
			c3QobSkpZi5ocmVmPW0ucmVwbGFjZSgvXlwvLyxvKStrfWVsc2UgbSE9byYmKGYuaHJlZj1vKwoi
			IyIrbS5yZXBsYWNlKFJlZ0V4cCgiXiIrbywiaSIpLHQudHlwZSkraytmLmhhc2gpfXJldHVybiBh
			fSgpO24ucHVzaFN0YXRlPWZ1bmN0aW9uKGEsYyxlLGQpe3ZhciBiPU4oKSxpPWwoKS5hLGg9ZSYm
			bChlKTt1PTA7ZT1oP2guYTppO2QmJmJbaV0mJmRlbGV0ZSBiW2ldO2lmKCghcHx8YWEpJiZIJiZh
			KWJbZV09YSxOKGIpLGE9ajtVJiZWP2Q/Vi5jYWxsKG4sYSxjLGUpOlUuY2FsbChuLGEsYyxlKTpo
			JiZoLmIhPWwoKS5iJiYoUT0xLGQ/Zi5yZXBsYWNlKCIjIitoLmQpOmYuaGFzaD1oLmQpfTtuLnJl
			cGxhY2VTdGF0ZT1mdW5jdGlvbihhLGMsZSl7bi5wdXNoU3RhdGUoYSxjLGUsMSl9O3g/KGUuaGlz
			dG9yeT1uLGZ1bmN0aW9uKGEsYyl7aWYoaSl7dmFyIGcsZCxiPWZ1bmN0aW9uKCl7dmFyIGE9bCgp
			LmE7YyE9YSYmWSh7b2xkVVJMOmMsbmV3VVJMOmM9YX0pfTtkPXNldEludGVydmFsKGIsMTAwKTtp
			LnNyYz0iamF2YXNjcmlwdDp0cnVlOyI7aT1tLmRvY3VtZW50RWxlbWVudC5maXJzdENoaWxkLmFw
			cGVuZENoaWxkKGkpLmNvbnRlbnRXaW5kb3c7Cm4ucHVzaFN0YXRlPWc9ZnVuY3Rpb24oYSxlLGos
			ayxtKXt2YXIgbz1pLmRvY3VtZW50LG49WyI8c2NyaXB0PiIsImxmaXJzdD0xOyIsLCJzdG9yYWdl
			PSIrSShhKSsiOyIsIjxcL3NjcmlwdD4iXTtpZihqPWomJmwoaikpe218fGNsZWFySW50ZXJ2YWwo
			ZCk7aWYoaylpLmxmaXJzdD8oaGlzdG9yeS5iYWNrKCksZyhhLGUsai5hLDAsMSkpOihpLnN0b3Jh
			Z2U9YSxmLnJlcGxhY2UoIiMiK2ouZCkpO2Vsc2UgaWYoai5hIT1jfHxtKWkubGZpcnN0fHwoaS5s
			Zmlyc3Q9MSxnKGkuc3RvcmFnZSxlLGMsMCwxKSksblsyXT0ncGFyZW50LmxvY2F0aW9uLmhhc2g9
			Iicrai5kLnJlcGxhY2UoLyIvZywnXFwiJykrJyI7JyxvLm9wZW4oKSxvLndyaXRlKG4uam9pbigi
			IikpLG8uY2xvc2UoKTttfHwoYz1sKCkuYSxkPXNldEludGVydmFsKGIsMTAwKSl9ZWxzZSBpLnN0
			b3JhZ2U9YX07SyhKKyJ1bmxvYWQiLGZ1bmN0aW9uKCl7aWYoaS5zdG9yYWdlKXt2YXIgYT17fTth
			W2woKS5hXT1pLnN0b3JhZ2U7Cm0uY29va2llPSJfaGlzdG9yeUFQST0iK2VzY2FwZShJKGEpKX1j
			bGVhckludGVydmFsKGQpfSxzKTtpZigxPGEubGVuZ3RoKXthPXVuZXNjYXBlKGEucG9wKCkuc3Bs
			aXQoIjsiKS5zaGlmdCgpKTt0cnl7aS5zdG9yYWdlPU8oYSlbbCgpLmFdfWNhdGNoKGope319IXYu
			cGFyc2UmJiF2LnN0cmluZ2lmeSYmKHYucGFyc2U9Tyx2LnN0cmluZ2lmeT1JLGUuSlNPTj12KX19
			KG0uY29va2llLnNwbGl0KCJfaGlzdG9yeUFQST0iKSxsKCkuYSkpOmUuaGlzdG9yeS5lbXVsYXRl
			PSFwfSkod2luZG93LCEwLCExLG51bGwpOwo=]]></Resource>
    <Resource ID="62bfaaa0-c2fd-02d5-2a32-49056e416a65" Name="html5shiv.js" Type="js"><![CDATA[LyohIEhUTUw1IFNoaXYgdnByZTMuNiB8IEBhZmFya2FzIEBqZGFsdG9uIEBqb25fbmVhbCBAcmVt
			IHwgTUlUL0dQTDIgTGljZW5zZWQKICBVbmNvbXByZXNzZWQgc291cmNlOiBodHRwczovL2dpdGh1
			Yi5jb20vYUZhcmthcy9odG1sNXNoaXYgICovCihmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGgoYSxi
			KXt2YXIgYz1hLmNyZWF0ZUVsZW1lbnQoInAiKSxkPWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhl
			YWQiKVswXXx8YS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGMuaW5uZXJIVE1MPSJ4PHN0eWxlPiIr
			YisiPC9zdHlsZT4iLGQuaW5zZXJ0QmVmb3JlKGMubGFzdENoaWxkLGQuZmlyc3RDaGlsZCl9ZnVu
			Y3Rpb24gaSgpe3ZhciBhPWwuZWxlbWVudHM7cmV0dXJuIHR5cGVvZiBhPT0ic3RyaW5nIj9hLnNw
			bGl0KCIgIik6YX1mdW5jdGlvbiBqKGEpe3ZhciBiPXt9LGM9YS5jcmVhdGVFbGVtZW50LGY9YS5j
			cmVhdGVEb2N1bWVudEZyYWdtZW50LGc9ZigpO2EuY3JlYXRlRWxlbWVudD1mdW5jdGlvbihhKXtp
			ZighbC5zaGl2TWV0aG9kcylyZXR1cm4gYyhhKTt2YXIgZjtyZXR1cm4gYlthXT9mPWJbYV0uY2xv
			bmVOb2RlKCk6ZS50ZXN0KGEpP2Y9KGJbYV09YyhhKSkuY2xvbmVOb2RlKCk6Zj1jKGEpLGYuY2Fu
			SGF2ZUNoaWxkcmVuJiYhZC50ZXN0KGEpP2cuYXBwZW5kQ2hpbGQoZik6Zn0sYS5jcmVhdGVEb2N1
			bWVudEZyYWdtZW50PUZ1bmN0aW9uKCJoLGYiLCJyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1mLmNs
			b25lTm9kZSgpLGM9bi5jcmVhdGVFbGVtZW50O2guc2hpdk1ldGhvZHMmJigiK2koKS5qb2luKCku
			cmVwbGFjZSgvXHcrL2csZnVuY3Rpb24oYSl7cmV0dXJuIGMoYSksZy5jcmVhdGVFbGVtZW50KGEp
			LCdjKCInK2ErJyIpJ30pKyIpO3JldHVybiBufSIpKGwsZyl9ZnVuY3Rpb24gayhhKXt2YXIgYjty
			ZXR1cm4gYS5kb2N1bWVudFNoaXZlZD9hOihsLnNoaXZDU1MmJiFmJiYoYj0hIWgoYSwiYXJ0aWNs
			ZSxhc2lkZSxkZXRhaWxzLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG5h
			dixzZWN0aW9ue2Rpc3BsYXk6YmxvY2t9YXVkaW97ZGlzcGxheTpub25lfWNhbnZhcyx2aWRlb3tk
			aXNwbGF5OmlubGluZS1ibG9jazsqZGlzcGxheTppbmxpbmU7Knpvb206MX1baGlkZGVuXXtkaXNw
			bGF5Om5vbmV9YXVkaW9bY29udHJvbHNde2Rpc3BsYXk6aW5saW5lLWJsb2NrOypkaXNwbGF5Omlu
			bGluZTsqem9vbToxfW1hcmt7YmFja2dyb3VuZDojRkYwO2NvbG9yOiMwMDB9IikpLGd8fChiPSFq
			KGEpKSxiJiYoYS5kb2N1bWVudFNoaXZlZD1iKSxhKX12YXIgYz1hLmh0bWw1fHx7fSxkPS9ePHxe
			KD86YnV0dG9ufGZvcm18bWFwfHNlbGVjdHx0ZXh0YXJlYXxvYmplY3R8aWZyYW1lfG9wdGlvbnxv
			cHRncm91cCkkL2ksZT0vXjx8Xig/OmF8YnxidXR0b258Y29kZXxkaXZ8ZmllbGRzZXR8Zm9ybXxo
			MXxoMnxoM3xoNHxoNXxoNnxpfGlmcmFtZXxpbWd8aW5wdXR8bGFiZWx8bGl8bGlua3xvbHxvcHRp
			b258cHxwYXJhbXxxfHNjcmlwdHxzZWxlY3R8c3BhbnxzdHJvbmd8c3R5bGV8dGFibGV8dGJvZHl8
			dGR8dGV4dGFyZWF8dGZvb3R8dGh8dGhlYWR8dHJ8dWwpJC9pLGYsZzsoZnVuY3Rpb24oKXt2YXIg
			Yz1iLmNyZWF0ZUVsZW1lbnQoImEiKTtjLmlubmVySFRNTD0iPHh5ej48L3h5ej4iLGY9ImhpZGRl
			biJpbiBjLGYmJnR5cGVvZiBpbmplY3RFbGVtZW50V2l0aFN0eWxlcz09ImZ1bmN0aW9uIiYmaW5q
			ZWN0RWxlbWVudFdpdGhTdHlsZXMoIiNtb2Rlcm5penJ7fSIsZnVuY3Rpb24oYil7Yi5oaWRkZW49
			ITAsZj0oYS5nZXRDb21wdXRlZFN0eWxlP2dldENvbXB1dGVkU3R5bGUoYixudWxsKTpiLmN1cnJl
			bnRTdHlsZSkuZGlzcGxheT09Im5vbmUifSksZz1jLmNoaWxkTm9kZXMubGVuZ3RoPT0xfHxmdW5j
			dGlvbigpe3RyeXtiLmNyZWF0ZUVsZW1lbnQoImEiKX1jYXRjaChhKXtyZXR1cm4hMH12YXIgYz1i
			LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtyZXR1cm4gdHlwZW9mIGMuY2xvbmVOb2RlPT0idW5k
			ZWZpbmVkInx8dHlwZW9mIGMuY3JlYXRlRG9jdW1lbnRGcmFnbWVudD09InVuZGVmaW5lZCJ8fHR5
			cGVvZiBjLmNyZWF0ZUVsZW1lbnQ9PSJ1bmRlZmluZWQifSgpfSkoKTt2YXIgbD17ZWxlbWVudHM6
			Yy5lbGVtZW50c3x8ImFiYnIgYXJ0aWNsZSBhc2lkZSBhdWRpbyBiZGkgY2FudmFzIGRhdGEgZGF0
			YWxpc3QgZGV0YWlscyBmaWdjYXB0aW9uIGZpZ3VyZSBmb290ZXIgaGVhZGVyIGhncm91cCBtYXJr
			IG1ldGVyIG5hdiBvdXRwdXQgcHJvZ3Jlc3Mgc2VjdGlvbiBzdW1tYXJ5IHRpbWUgdmlkZW8iLHNo
			aXZDU1M6Yy5zaGl2Q1NTIT09ITEsc2hpdk1ldGhvZHM6Yy5zaGl2TWV0aG9kcyE9PSExLHR5cGU6
			ImRlZmF1bHQiLHNoaXZEb2N1bWVudDprfTthLmh0bWw1PWwsayhiKX0pKHRoaXMsZG9jdW1lbnQp]]></Resource>
    <Resource ID="c37ebb01-ced6-9d96-d2f1-9ded89297a9c" Name="modernizr.2.6.0.custom.97751.js" Type="js"><![CDATA[LyogTW9kZXJuaXpyIDIuNi4wIChDdXN0b20gQnVpbGQpIHwgTUlUICYgQlNECiAqIEJ1aWxkOiBo
			dHRwOi8vbW9kZXJuaXpyLmNvbS9kb3dubG9hZC8jLWZvbnRmYWNlLWJhY2tncm91bmRzaXplLWJv
			cmRlcmltYWdlLWJvcmRlcnJhZGl1cy1ib3hzaGFkb3ctZmxleGJveC1mbGV4Ym94X2xlZ2FjeS1o
			c2xhLW11bHRpcGxlYmdzLW9wYWNpdHktcmdiYS10ZXh0c2hhZG93LWNzc2FuaW1hdGlvbnMtY3Nz
			Y29sdW1ucy1nZW5lcmF0ZWRjb250ZW50LWNzc2dyYWRpZW50cy1jc3NyZWZsZWN0aW9ucy1jc3N0
			cmFuc2Zvcm1zLWNzc3RyYW5zZm9ybXMzZC1jc3N0cmFuc2l0aW9ucy1pbnB1dC1pbnB1dHR5cGVz
			LXNoaXYtY3NzY2xhc3Nlcy10ZXN0c3R5bGVzLXRlc3Rwcm9wLXRlc3RhbGxwcm9wcy1wcmVmaXhl
			cy1kb21wcmVmaXhlcy1mb3Jtc19wbGFjZWhvbGRlci1sb2FkCiAqLwo7d2luZG93Lk1vZGVybml6
			cj1mdW5jdGlvbihhLGIsYyl7ZnVuY3Rpb24gQShhKXtqLmNzc1RleHQ9YX1mdW5jdGlvbiBCKGEs
			Yil7cmV0dXJuIEEobi5qb2luKGErIjsiKSsoYnx8IiIpKX1mdW5jdGlvbiBDKGEsYil7cmV0dXJu
			IHR5cGVvZiBhPT09Yn1mdW5jdGlvbiBEKGEsYil7cmV0dXJuISF+KCIiK2EpLmluZGV4T2YoYil9
			ZnVuY3Rpb24gRShhLGIpe2Zvcih2YXIgZCBpbiBhKWlmKGpbYVtkXV0hPT1jKXJldHVybiBiPT0i
			cGZ4Ij9hW2RdOiEwO3JldHVybiExfWZ1bmN0aW9uIEYoYSxiLGQpe2Zvcih2YXIgZSBpbiBhKXt2
			YXIgZj1iW2FbZV1dO2lmKGYhPT1jKXJldHVybiBkPT09ITE/YVtlXTpDKGYsImZ1bmN0aW9uIik/
			Zi5iaW5kKGR8fGIpOmZ9cmV0dXJuITF9ZnVuY3Rpb24gRyhhLGIsYyl7dmFyIGQ9YS5jaGFyQXQo
			MCkudG9VcHBlckNhc2UoKSthLnNsaWNlKDEpLGU9KGErIiAiK3Auam9pbihkKyIgIikrZCkuc3Bs
			aXQoIiAiKTtyZXR1cm4gQyhiLCJzdHJpbmciKXx8QyhiLCJ1bmRlZmluZWQiKT9FKGUsYik6KGU9
			KGErIiAiK3Euam9pbihkKyIgIikrZCkuc3BsaXQoIiAiKSxGKGUsYixjKSl9ZnVuY3Rpb24gSCgp
			e2UuaW5wdXQ9ZnVuY3Rpb24oYyl7Zm9yKHZhciBkPTAsZT1jLmxlbmd0aDtkPGU7ZCsrKXRbY1tk
			XV09Y1tkXWluIGs7cmV0dXJuIHQubGlzdCYmKHQubGlzdD0hIWIuY3JlYXRlRWxlbWVudCgiZGF0
			YWxpc3QiKSYmISFhLkhUTUxEYXRhTGlzdEVsZW1lbnQpLHR9KCJhdXRvY29tcGxldGUgYXV0b2Zv
			Y3VzIGxpc3QgcGxhY2Vob2xkZXIgbWF4IG1pbiBtdWx0aXBsZSBwYXR0ZXJuIHJlcXVpcmVkIHN0
			ZXAiLnNwbGl0KCIgIikpLGUuaW5wdXR0eXBlcz1mdW5jdGlvbihhKXtmb3IodmFyIGQ9MCxlLGYs
			aCxpPWEubGVuZ3RoO2Q8aTtkKyspay5zZXRBdHRyaWJ1dGUoInR5cGUiLGY9YVtkXSksZT1rLnR5
			cGUhPT0idGV4dCIsZSYmKGsudmFsdWU9bCxrLnN0eWxlLmNzc1RleHQ9InBvc2l0aW9uOmFic29s
			dXRlO3Zpc2liaWxpdHk6aGlkZGVuOyIsL15yYW5nZSQvLnRlc3QoZikmJmsuc3R5bGUuV2Via2l0
			QXBwZWFyYW5jZSE9PWM/KGcuYXBwZW5kQ2hpbGQoayksaD1iLmRlZmF1bHRWaWV3LGU9aC5nZXRD
			b21wdXRlZFN0eWxlJiZoLmdldENvbXB1dGVkU3R5bGUoayxudWxsKS5XZWJraXRBcHBlYXJhbmNl
			IT09InRleHRmaWVsZCImJmsub2Zmc2V0SGVpZ2h0IT09MCxnLnJlbW92ZUNoaWxkKGspKTovXihz
			ZWFyY2h8dGVsKSQvLnRlc3QoZil8fCgvXih1cmx8ZW1haWwpJC8udGVzdChmKT9lPWsuY2hlY2tW
			YWxpZGl0eSYmay5jaGVja1ZhbGlkaXR5KCk9PT0hMTplPWsudmFsdWUhPWwpKSxzW2FbZF1dPSEh
			ZTtyZXR1cm4gc30oInNlYXJjaCB0ZWwgdXJsIGVtYWlsIGRhdGV0aW1lIGRhdGUgbW9udGggd2Vl
			ayB0aW1lIGRhdGV0aW1lLWxvY2FsIG51bWJlciByYW5nZSBjb2xvciIuc3BsaXQoIiAiKSl9dmFy
			IGQ9IjIuNi4wIixlPXt9LGY9ITAsZz1iLmRvY3VtZW50RWxlbWVudCxoPSJtb2Rlcm5penIiLGk9
			Yi5jcmVhdGVFbGVtZW50KGgpLGo9aS5zdHlsZSxrPWIuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSxs
			PSI6KSIsbT17fS50b1N0cmluZyxuPSIgLXdlYmtpdC0gLW1vei0gLW8tIC1tcy0gIi5zcGxpdCgi
			ICIpLG89IldlYmtpdCBNb3ogTyBtcyIscD1vLnNwbGl0KCIgIikscT1vLnRvTG93ZXJDYXNlKCku
			c3BsaXQoIiAiKSxyPXt9LHM9e30sdD17fSx1PVtdLHY9dS5zbGljZSx3LHg9ZnVuY3Rpb24oYSxj
			LGQsZSl7dmFyIGYsaSxqLGs9Yi5jcmVhdGVFbGVtZW50KCJkaXYiKSxsPWIuYm9keSxtPWw/bDpi
			LmNyZWF0ZUVsZW1lbnQoImJvZHkiKTtpZihwYXJzZUludChkLDEwKSl3aGlsZShkLS0paj1iLmNy
			ZWF0ZUVsZW1lbnQoImRpdiIpLGouaWQ9ZT9lW2RdOmgrKGQrMSksay5hcHBlbmRDaGlsZChqKTty
			ZXR1cm4gZj1bIiYjMTczOyIsJzxzdHlsZSBpZD0icycsaCwnIj4nLGEsIjwvc3R5bGU+Il0uam9p
			bigiIiksay5pZD1oLChsP2s6bSkuaW5uZXJIVE1MKz1mLG0uYXBwZW5kQ2hpbGQoayksbHx8KG0u
			c3R5bGUuYmFja2dyb3VuZD0iIixnLmFwcGVuZENoaWxkKG0pKSxpPWMoayxhKSxsP2sucGFyZW50
			Tm9kZS5yZW1vdmVDaGlsZChrKTptLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobSksISFpfSx5PXt9
			Lmhhc093blByb3BlcnR5LHo7IUMoeSwidW5kZWZpbmVkIikmJiFDKHkuY2FsbCwidW5kZWZpbmVk
			Iik/ej1mdW5jdGlvbihhLGIpe3JldHVybiB5LmNhbGwoYSxiKX06ej1mdW5jdGlvbihhLGIpe3Jl
			dHVybiBiIGluIGEmJkMoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGVbYl0sInVuZGVmaW5lZCIpfSxG
			dW5jdGlvbi5wcm90b3R5cGUuYmluZHx8KEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kPWZ1bmN0aW9u
			KGIpe3ZhciBjPXRoaXM7aWYodHlwZW9mIGMhPSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJv
			cjt2YXIgZD12LmNhbGwoYXJndW1lbnRzLDEpLGU9ZnVuY3Rpb24oKXtpZih0aGlzIGluc3RhbmNl
			b2YgZSl7dmFyIGE9ZnVuY3Rpb24oKXt9O2EucHJvdG90eXBlPWMucHJvdG90eXBlO3ZhciBmPW5l
			dyBhLGc9Yy5hcHBseShmLGQuY29uY2F0KHYuY2FsbChhcmd1bWVudHMpKSk7cmV0dXJuIE9iamVj
			dChnKT09PWc/ZzpmfXJldHVybiBjLmFwcGx5KGIsZC5jb25jYXQodi5jYWxsKGFyZ3VtZW50cykp
			KX07cmV0dXJuIGV9KSxyLmZsZXhib3g9ZnVuY3Rpb24oKXtyZXR1cm4gRygiZmxleFdyYXAiKX0s
			ci5yZ2JhPWZ1bmN0aW9uKCl7cmV0dXJuIEEoImJhY2tncm91bmQtY29sb3I6cmdiYSgxNTAsMjU1
			LDE1MCwuNSkiKSxEKGouYmFja2dyb3VuZENvbG9yLCJyZ2JhIil9LHIuaHNsYT1mdW5jdGlvbigp
			e3JldHVybiBBKCJiYWNrZ3JvdW5kLWNvbG9yOmhzbGEoMTIwLDQwJSwxMDAlLC41KSIpLEQoai5i
			YWNrZ3JvdW5kQ29sb3IsInJnYmEiKXx8RChqLmJhY2tncm91bmRDb2xvciwiaHNsYSIpfSxyLm11
			bHRpcGxlYmdzPWZ1bmN0aW9uKCl7cmV0dXJuIEEoImJhY2tncm91bmQ6dXJsKGh0dHBzOi8vKSx1
			cmwoaHR0cHM6Ly8pLHJlZCB1cmwoaHR0cHM6Ly8pIiksLyh1cmxccypcKC4qPyl7M30vLnRlc3Qo
			ai5iYWNrZ3JvdW5kKX0sci5iYWNrZ3JvdW5kc2l6ZT1mdW5jdGlvbigpe3JldHVybiBHKCJiYWNr
			Z3JvdW5kU2l6ZSIpfSxyLmJvcmRlcmltYWdlPWZ1bmN0aW9uKCl7cmV0dXJuIEcoImJvcmRlcklt
			YWdlIil9LHIuYm9yZGVycmFkaXVzPWZ1bmN0aW9uKCl7cmV0dXJuIEcoImJvcmRlclJhZGl1cyIp
			fSxyLmJveHNoYWRvdz1mdW5jdGlvbigpe3JldHVybiBHKCJib3hTaGFkb3ciKX0sci50ZXh0c2hh
			ZG93PWZ1bmN0aW9uKCl7cmV0dXJuIGIuY3JlYXRlRWxlbWVudCgiZGl2Iikuc3R5bGUudGV4dFNo
			YWRvdz09PSIifSxyLm9wYWNpdHk9ZnVuY3Rpb24oKXtyZXR1cm4gQigib3BhY2l0eTouNTUiKSwv
			XjAuNTUkLy50ZXN0KGoub3BhY2l0eSl9LHIuY3NzYW5pbWF0aW9ucz1mdW5jdGlvbigpe3JldHVy
			biBHKCJhbmltYXRpb25OYW1lIil9LHIuY3NzY29sdW1ucz1mdW5jdGlvbigpe3JldHVybiBHKCJj
			b2x1bW5Db3VudCIpfSxyLmNzc2dyYWRpZW50cz1mdW5jdGlvbigpe3ZhciBhPSJiYWNrZ3JvdW5k
			LWltYWdlOiIsYj0iZ3JhZGllbnQobGluZWFyLGxlZnQgdG9wLHJpZ2h0IGJvdHRvbSxmcm9tKCM5
			ZjkpLHRvKHdoaXRlKSk7IixjPSJsaW5lYXItZ3JhZGllbnQobGVmdCB0b3AsIzlmOSwgd2hpdGUp
			OyI7cmV0dXJuIEEoKGErIi13ZWJraXQtICIuc3BsaXQoIiAiKS5qb2luKGIrYSkrbi5qb2luKGMr
			YSkpLnNsaWNlKDAsLWEubGVuZ3RoKSksRChqLmJhY2tncm91bmRJbWFnZSwiZ3JhZGllbnQiKX0s
			ci5jc3NyZWZsZWN0aW9ucz1mdW5jdGlvbigpe3JldHVybiBHKCJib3hSZWZsZWN0Iil9LHIuY3Nz
			dHJhbnNmb3Jtcz1mdW5jdGlvbigpe3JldHVybiEhRygidHJhbnNmb3JtIil9LHIuY3NzdHJhbnNm
			b3JtczNkPWZ1bmN0aW9uKCl7dmFyIGE9ISFHKCJwZXJzcGVjdGl2ZSIpO3JldHVybiBhJiYid2Vi
			a2l0UGVyc3BlY3RpdmUiaW4gZy5zdHlsZSYmeCgiQG1lZGlhICh0cmFuc2Zvcm0tM2QpLCgtd2Vi
			a2l0LXRyYW5zZm9ybS0zZCl7I21vZGVybml6cntsZWZ0OjlweDtwb3NpdGlvbjphYnNvbHV0ZTto
			ZWlnaHQ6M3B4O319IixmdW5jdGlvbihiLGMpe2E9Yi5vZmZzZXRMZWZ0PT09OSYmYi5vZmZzZXRI
			ZWlnaHQ9PT0zfSksYX0sci5jc3N0cmFuc2l0aW9ucz1mdW5jdGlvbigpe3JldHVybiBHKCJ0cmFu
			c2l0aW9uIil9LHIuZm9udGZhY2U9ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4geCgnQGZvbnQtZmFj
			ZSB7Zm9udC1mYW1pbHk6ImZvbnQiO3NyYzp1cmwoImh0dHBzOi8vIil9JyxmdW5jdGlvbihjLGQp
			e3ZhciBlPWIuZ2V0RWxlbWVudEJ5SWQoInNtb2Rlcm5penIiKSxmPWUuc2hlZXR8fGUuc3R5bGVT
			aGVldCxnPWY/Zi5jc3NSdWxlcyYmZi5jc3NSdWxlc1swXT9mLmNzc1J1bGVzWzBdLmNzc1RleHQ6
			Zi5jc3NUZXh0fHwiIjoiIjthPS9zcmMvaS50ZXN0KGcpJiZnLmluZGV4T2YoZC5zcGxpdCgiICIp
			WzBdKT09PTB9KSxhfSxyLmdlbmVyYXRlZGNvbnRlbnQ9ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4g
			eChbJyNtb2Rlcm5penI6YWZ0ZXJ7Y29udGVudDoiJyxsLCciO3Zpc2liaWxpdHk6aGlkZGVufSdd
			LmpvaW4oIiIpLGZ1bmN0aW9uKGIpe2E9Yi5vZmZzZXRIZWlnaHQ+PTF9KSxhfTtmb3IodmFyIEkg
			aW4gcil6KHIsSSkmJih3PUkudG9Mb3dlckNhc2UoKSxlW3ddPXJbSV0oKSx1LnB1c2goKGVbd10/
			IiI6Im5vLSIpK3cpKTtyZXR1cm4gZS5pbnB1dHx8SCgpLGUuYWRkVGVzdD1mdW5jdGlvbihhLGIp
			e2lmKHR5cGVvZiBhPT0ib2JqZWN0Iilmb3IodmFyIGQgaW4gYSl6KGEsZCkmJmUuYWRkVGVzdChk
			LGFbZF0pO2Vsc2V7YT1hLnRvTG93ZXJDYXNlKCk7aWYoZVthXSE9PWMpcmV0dXJuIGU7Yj10eXBl
			b2YgYj09ImZ1bmN0aW9uIj9iKCk6YixmJiYoZy5jbGFzc05hbWUrPSIgIisoYj8iIjoibm8tIikr
			YSksZVthXT1ifXJldHVybiBlfSxBKCIiKSxpPWs9bnVsbCxmdW5jdGlvbihhLGIpe2Z1bmN0aW9u
			IGsoYSxiKXt2YXIgYz1hLmNyZWF0ZUVsZW1lbnQoInAiKSxkPWEuZ2V0RWxlbWVudHNCeVRhZ05h
			bWUoImhlYWQiKVswXXx8YS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGMuaW5uZXJIVE1MPSJ4PHN0
			eWxlPiIrYisiPC9zdHlsZT4iLGQuaW5zZXJ0QmVmb3JlKGMubGFzdENoaWxkLGQuZmlyc3RDaGls
			ZCl9ZnVuY3Rpb24gbCgpe3ZhciBhPXIuZWxlbWVudHM7cmV0dXJuIHR5cGVvZiBhPT0ic3RyaW5n
			Ij9hLnNwbGl0KCIgIik6YX1mdW5jdGlvbiBtKGEpe3ZhciBiPWlbYVtnXV07cmV0dXJuIGJ8fChi
			PXt9LGgrKyxhW2ddPWgsaVtoXT1iKSxifWZ1bmN0aW9uIG4oYSxjLGYpe2N8fChjPWIpO2lmKGop
			cmV0dXJuIGMuY3JlYXRlRWxlbWVudChhKTtmfHwoZj1tKGMpKTt2YXIgZztyZXR1cm4gZi5jYWNo
			ZVthXT9nPWYuY2FjaGVbYV0uY2xvbmVOb2RlKCk6ZS50ZXN0KGEpP2c9KGYuY2FjaGVbYV09Zi5j
			cmVhdGVFbGVtKGEpKS5jbG9uZU5vZGUoKTpnPWYuY3JlYXRlRWxlbShhKSxnLmNhbkhhdmVDaGls
			ZHJlbiYmIWQudGVzdChhKT9mLmZyYWcuYXBwZW5kQ2hpbGQoZyk6Z31mdW5jdGlvbiBvKGEsYyl7
			YXx8KGE9Yik7aWYoailyZXR1cm4gYS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7Yz1jfHxtKGEp
			O3ZhciBkPWMuZnJhZy5jbG9uZU5vZGUoKSxlPTAsZj1sKCksZz1mLmxlbmd0aDtmb3IoO2U8Zztl
			KyspZC5jcmVhdGVFbGVtZW50KGZbZV0pO3JldHVybiBkfWZ1bmN0aW9uIHAoYSxiKXtiLmNhY2hl
			fHwoYi5jYWNoZT17fSxiLmNyZWF0ZUVsZW09YS5jcmVhdGVFbGVtZW50LGIuY3JlYXRlRnJhZz1h
			LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQsYi5mcmFnPWIuY3JlYXRlRnJhZygpKSxhLmNyZWF0ZUVs
			ZW1lbnQ9ZnVuY3Rpb24oYyl7cmV0dXJuIHIuc2hpdk1ldGhvZHM/bihjLGEsYik6Yi5jcmVhdGVF
			bGVtKGMpfSxhLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQ9RnVuY3Rpb24oImgsZiIsInJldHVybiBm
			dW5jdGlvbigpe3ZhciBuPWYuY2xvbmVOb2RlKCksYz1uLmNyZWF0ZUVsZW1lbnQ7aC5zaGl2TWV0
			aG9kcyYmKCIrbCgpLmpvaW4oKS5yZXBsYWNlKC9cdysvZyxmdW5jdGlvbihhKXtyZXR1cm4gYi5j
			cmVhdGVFbGVtKGEpLGIuZnJhZy5jcmVhdGVFbGVtZW50KGEpLCdjKCInK2ErJyIpJ30pKyIpO3Jl
			dHVybiBufSIpKHIsYi5mcmFnKX1mdW5jdGlvbiBxKGEpe2F8fChhPWIpO3ZhciBjPW0oYSk7cmV0
			dXJuIHIuc2hpdkNTUyYmIWYmJiFjLmhhc0NTUyYmKGMuaGFzQ1NTPSEhayhhLCJhcnRpY2xlLGFz
			aWRlLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG5hdixzZWN0aW9ue2Rp
			c3BsYXk6YmxvY2t9bWFya3tiYWNrZ3JvdW5kOiNGRjA7Y29sb3I6IzAwMH0iKSksanx8cChhLGMp
			LGF9dmFyIGM9YS5odG1sNXx8e30sZD0vXjx8Xig/OmJ1dHRvbnxtYXB8c2VsZWN0fHRleHRhcmVh
			fG9iamVjdHxpZnJhbWV8b3B0aW9ufG9wdGdyb3VwKSQvaSxlPS9ePHxeKD86YXxifGJ1dHRvbnxj
			b2RlfGRpdnxmaWVsZHNldHxmb3JtfGgxfGgyfGgzfGg0fGg1fGg2fGl8aWZyYW1lfGltZ3xpbnB1
			dHxsYWJlbHxsaXxsaW5rfG9sfG9wdGlvbnxwfHBhcmFtfHF8c2NyaXB0fHNlbGVjdHxzcGFufHN0
			cm9uZ3xzdHlsZXx0YWJsZXx0Ym9keXx0ZHx0ZXh0YXJlYXx0Zm9vdHx0aHx0aGVhZHx0cnx1bCkk
			L2ksZixnPSJfaHRtbDVzaGl2IixoPTAsaT17fSxqOyhmdW5jdGlvbigpe3RyeXt2YXIgYT1iLmNy
			ZWF0ZUVsZW1lbnQoImEiKTthLmlubmVySFRNTD0iPHh5ej48L3h5ej4iLGY9ImhpZGRlbiJpbiBh
			LGo9YS5jaGlsZE5vZGVzLmxlbmd0aD09MXx8ZnVuY3Rpb24oKXtiLmNyZWF0ZUVsZW1lbnQoImEi
			KTt2YXIgYT1iLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtyZXR1cm4gdHlwZW9mIGEuY2xvbmVO
			b2RlPT0idW5kZWZpbmVkInx8dHlwZW9mIGEuY3JlYXRlRG9jdW1lbnRGcmFnbWVudD09InVuZGVm
			aW5lZCJ8fHR5cGVvZiBhLmNyZWF0ZUVsZW1lbnQ9PSJ1bmRlZmluZWQifSgpfWNhdGNoKGMpe2Y9
			ITAsaj0hMH19KSgpO3ZhciByPXtlbGVtZW50czpjLmVsZW1lbnRzfHwiYWJiciBhcnRpY2xlIGFz
			aWRlIGF1ZGlvIGJkaSBjYW52YXMgZGF0YSBkYXRhbGlzdCBkZXRhaWxzIGZpZ2NhcHRpb24gZmln
			dXJlIGZvb3RlciBoZWFkZXIgaGdyb3VwIG1hcmsgbWV0ZXIgbmF2IG91dHB1dCBwcm9ncmVzcyBz
			ZWN0aW9uIHN1bW1hcnkgdGltZSB2aWRlbyIsc2hpdkNTUzpjLnNoaXZDU1MhPT0hMSxzdXBwb3J0
			c1Vua25vd25FbGVtZW50czpqLHNoaXZNZXRob2RzOmMuc2hpdk1ldGhvZHMhPT0hMSx0eXBlOiJk
			ZWZhdWx0IixzaGl2RG9jdW1lbnQ6cSxjcmVhdGVFbGVtZW50Om4sY3JlYXRlRG9jdW1lbnRGcmFn
			bWVudDpvfTthLmh0bWw1PXIscShiKX0odGhpcyxiKSxlLl92ZXJzaW9uPWQsZS5fcHJlZml4ZXM9
			bixlLl9kb21QcmVmaXhlcz1xLGUuX2Nzc29tUHJlZml4ZXM9cCxlLnRlc3RQcm9wPWZ1bmN0aW9u
			KGEpe3JldHVybiBFKFthXSl9LGUudGVzdEFsbFByb3BzPUcsZS50ZXN0U3R5bGVzPXgsZy5jbGFz
			c05hbWU9Zy5jbGFzc05hbWUucmVwbGFjZSgvKF58XHMpbm8tanMoXHN8JCkvLCIkMSQyIikrKGY/
			IiBqcyAiK3Uuam9pbigiICIpOiIiKSxlfSh0aGlzLHRoaXMuZG9jdW1lbnQpLGZ1bmN0aW9uKGEs
			YixjKXtmdW5jdGlvbiBkKGEpe3JldHVybiBvLmNhbGwoYSk9PSJbb2JqZWN0IEZ1bmN0aW9uXSJ9
			ZnVuY3Rpb24gZShhKXtyZXR1cm4gdHlwZW9mIGE9PSJzdHJpbmcifWZ1bmN0aW9uIGYoKXt9ZnVu
			Y3Rpb24gZyhhKXtyZXR1cm4hYXx8YT09ImxvYWRlZCJ8fGE9PSJjb21wbGV0ZSJ8fGE9PSJ1bmlu
			aXRpYWxpemVkIn1mdW5jdGlvbiBoKCl7dmFyIGE9cC5zaGlmdCgpO3E9MSxhP2EudD9tKGZ1bmN0
			aW9uKCl7KGEudD09ImMiP0IuaW5qZWN0Q3NzOkIuaW5qZWN0SnMpKGEucywwLGEuYSxhLngsYS5l
			LDEpfSwwKTooYSgpLGgoKSk6cT0wfWZ1bmN0aW9uIGkoYSxjLGQsZSxmLGksail7ZnVuY3Rpb24g
			ayhiKXtpZighbyYmZyhsLnJlYWR5U3RhdGUpJiYodS5yPW89MSwhcSYmaCgpLGwub25sb2FkPWwu
			b25yZWFkeXN0YXRlY2hhbmdlPW51bGwsYikpe2EhPSJpbWciJiZtKGZ1bmN0aW9uKCl7dC5yZW1v
			dmVDaGlsZChsKX0sNTApO2Zvcih2YXIgZCBpbiB5W2NdKXlbY10uaGFzT3duUHJvcGVydHkoZCkm
			JnlbY11bZF0ub25sb2FkKCl9fXZhciBqPWp8fEIuZXJyb3JUaW1lb3V0LGw9e30sbz0wLHI9MCx1
			PXt0OmQsczpjLGU6ZixhOmkseDpqfTt5W2NdPT09MSYmKHI9MSx5W2NdPVtdLGw9Yi5jcmVhdGVF
			bGVtZW50KGEpKSxhPT0ib2JqZWN0Ij9sLmRhdGE9YzoobC5zcmM9YyxsLnR5cGU9YSksbC53aWR0
			aD1sLmhlaWdodD0iMCIsbC5vbmVycm9yPWwub25sb2FkPWwub25yZWFkeXN0YXRlY2hhbmdlPWZ1
			bmN0aW9uKCl7ay5jYWxsKHRoaXMscil9LHAuc3BsaWNlKGUsMCx1KSxhIT0iaW1nIiYmKHJ8fHlb
			Y109PT0yPyh0Lmluc2VydEJlZm9yZShsLHM/bnVsbDpuKSxtKGssaikpOnlbY10ucHVzaChsKSl9
			ZnVuY3Rpb24gaihhLGIsYyxkLGYpe3JldHVybiBxPTAsYj1ifHwiaiIsZShhKT9pKGI9PSJjIj92
			OnUsYSxiLHRoaXMuaSsrLGMsZCxmKToocC5zcGxpY2UodGhpcy5pKyssMCxhKSxwLmxlbmd0aD09
			MSYmaCgpKSx0aGlzfWZ1bmN0aW9uIGsoKXt2YXIgYT1CO3JldHVybiBhLmxvYWRlcj17bG9hZDpq
			LGk6MH0sYX12YXIgbD1iLmRvY3VtZW50RWxlbWVudCxtPWEuc2V0VGltZW91dCxuPWIuZ2V0RWxl
			bWVudHNCeVRhZ05hbWUoInNjcmlwdCIpWzBdLG89e30udG9TdHJpbmcscD1bXSxxPTAscj0iTW96
			QXBwZWFyYW5jZSJpbiBsLnN0eWxlLHM9ciYmISFiLmNyZWF0ZVJhbmdlKCkuY29tcGFyZU5vZGUs
			dD1zP2w6bi5wYXJlbnROb2RlLGw9YS5vcGVyYSYmby5jYWxsKGEub3BlcmEpPT0iW29iamVjdCBP
			cGVyYV0iLGw9ISFiLmF0dGFjaEV2ZW50JiYhbCx1PXI/Im9iamVjdCI6bD8ic2NyaXB0IjoiaW1n
			Iix2PWw/InNjcmlwdCI6dSx3PUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGEpe3JldHVybiBvLmNh
			bGwoYSk9PSJbb2JqZWN0IEFycmF5XSJ9LHg9W10seT17fSx6PXt0aW1lb3V0OmZ1bmN0aW9uKGEs
			Yil7cmV0dXJuIGIubGVuZ3RoJiYoYS50aW1lb3V0PWJbMF0pLGF9fSxBLEI7Qj1mdW5jdGlvbihh
			KXtmdW5jdGlvbiBiKGEpe3ZhciBhPWEuc3BsaXQoIiEiKSxiPXgubGVuZ3RoLGM9YS5wb3AoKSxk
			PWEubGVuZ3RoLGM9e3VybDpjLG9yaWdVcmw6YyxwcmVmaXhlczphfSxlLGYsZztmb3IoZj0wO2Y8
			ZDtmKyspZz1hW2ZdLnNwbGl0KCI9IiksKGU9eltnLnNoaWZ0KCldKSYmKGM9ZShjLGcpKTtmb3Io
			Zj0wO2Y8YjtmKyspYz14W2ZdKGMpO3JldHVybiBjfWZ1bmN0aW9uIGcoYSxlLGYsZyxpKXt2YXIg
			aj1iKGEpLGw9ai5hdXRvQ2FsbGJhY2s7ai51cmwuc3BsaXQoIi4iKS5wb3AoKS5zcGxpdCgiPyIp
			LnNoaWZ0KCksai5ieXBhc3N8fChlJiYoZT1kKGUpP2U6ZVthXXx8ZVtnXXx8ZVthLnNwbGl0KCIv
			IikucG9wKCkuc3BsaXQoIj8iKVswXV18fGgpLGouaW5zdGVhZD9qLmluc3RlYWQoYSxlLGYsZyxp
			KTooeVtqLnVybF0/ai5ub2V4ZWM9ITA6eVtqLnVybF09MSxmLmxvYWQoai51cmwsai5mb3JjZUNT
			U3x8IWouZm9yY2VKUyYmImNzcyI9PWoudXJsLnNwbGl0KCIuIikucG9wKCkuc3BsaXQoIj8iKS5z
			aGlmdCgpPyJjIjpjLGoubm9leGVjLGouYXR0cnMsai50aW1lb3V0KSwoZChlKXx8ZChsKSkmJmYu
			bG9hZChmdW5jdGlvbigpe2soKSxlJiZlKGoub3JpZ1VybCxpLGcpLGwmJmwoai5vcmlnVXJsLGks
			ZykseVtqLnVybF09Mn0pKSl9ZnVuY3Rpb24gaShhLGIpe2Z1bmN0aW9uIGMoYSxjKXtpZihhKXtp
			ZihlKGEpKWN8fChqPWZ1bmN0aW9uKCl7dmFyIGE9W10uc2xpY2UuY2FsbChhcmd1bWVudHMpO2su
			YXBwbHkodGhpcyxhKSxsKCl9KSxnKGEsaixiLDAsaCk7ZWxzZSBpZihPYmplY3QoYSk9PT1hKWZv
			cihuIGluIG09ZnVuY3Rpb24oKXt2YXIgYj0wLGM7Zm9yKGMgaW4gYSlhLmhhc093blByb3BlcnR5
			KGMpJiZiKys7cmV0dXJuIGJ9KCksYSlhLmhhc093blByb3BlcnR5KG4pJiYoIWMmJiEtLW0mJihk
			KGopP2o9ZnVuY3Rpb24oKXt2YXIgYT1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7ay5hcHBseSh0
			aGlzLGEpLGwoKX06altuXT1mdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYj1bXS5z
			bGljZS5jYWxsKGFyZ3VtZW50cyk7YSYmYS5hcHBseSh0aGlzLGIpLGwoKX19KGtbbl0pKSxnKGFb
			bl0saixiLG4saCkpfWVsc2UhYyYmbCgpfXZhciBoPSEhYS50ZXN0LGk9YS5sb2FkfHxhLmJvdGgs
			aj1hLmNhbGxiYWNrfHxmLGs9aixsPWEuY29tcGxldGV8fGYsbSxuO2MoaD9hLnllcDphLm5vcGUs
			ISFpKSxpJiZjKGkpfXZhciBqLGwsbT10aGlzLnllcG5vcGUubG9hZGVyO2lmKGUoYSkpZyhhLDAs
			bSwwKTtlbHNlIGlmKHcoYSkpZm9yKGo9MDtqPGEubGVuZ3RoO2orKylsPWFbal0sZShsKT9nKGws
			MCxtLDApOncobCk/QihsKTpPYmplY3QobCk9PT1sJiZpKGwsbSk7ZWxzZSBPYmplY3QoYSk9PT1h
			JiZpKGEsbSl9LEIuYWRkUHJlZml4PWZ1bmN0aW9uKGEsYil7elthXT1ifSxCLmFkZEZpbHRlcj1m
			dW5jdGlvbihhKXt4LnB1c2goYSl9LEIuZXJyb3JUaW1lb3V0PTFlNCxiLnJlYWR5U3RhdGU9PW51
			bGwmJmIuYWRkRXZlbnRMaXN0ZW5lciYmKGIucmVhZHlTdGF0ZT0ibG9hZGluZyIsYi5hZGRFdmVu
			dExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixBPWZ1bmN0aW9uKCl7Yi5yZW1vdmVFdmVudExp
			c3RlbmVyKCJET01Db250ZW50TG9hZGVkIixBLDApLGIucmVhZHlTdGF0ZT0iY29tcGxldGUifSww
			KSksYS55ZXBub3BlPWsoKSxhLnllcG5vcGUuZXhlY3V0ZVN0YWNrPWgsYS55ZXBub3BlLmluamVj
			dEpzPWZ1bmN0aW9uKGEsYyxkLGUsaSxqKXt2YXIgaz1iLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIp
			LGwsbyxlPWV8fEIuZXJyb3JUaW1lb3V0O2suc3JjPWE7Zm9yKG8gaW4gZClrLnNldEF0dHJpYnV0
			ZShvLGRbb10pO2M9aj9oOmN8fGYsay5vbnJlYWR5c3RhdGVjaGFuZ2U9ay5vbmxvYWQ9ZnVuY3Rp
			b24oKXshbCYmZyhrLnJlYWR5U3RhdGUpJiYobD0xLGMoKSxrLm9ubG9hZD1rLm9ucmVhZHlzdGF0
			ZWNoYW5nZT1udWxsKX0sbShmdW5jdGlvbigpe2x8fChsPTEsYygxKSl9LGUpLGk/ay5vbmxvYWQo
			KTpuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGssbil9LGEueWVwbm9wZS5pbmplY3RDc3M9ZnVu
			Y3Rpb24oYSxjLGQsZSxnLGkpe3ZhciBlPWIuY3JlYXRlRWxlbWVudCgibGluayIpLGosYz1pP2g6
			Y3x8ZjtlLmhyZWY9YSxlLnJlbD0ic3R5bGVzaGVldCIsZS50eXBlPSJ0ZXh0L2NzcyI7Zm9yKGog
			aW4gZCllLnNldEF0dHJpYnV0ZShqLGRbal0pO2d8fChuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3Jl
			KGUsbiksbShjLDApKX19KHRoaXMsZG9jdW1lbnQpLE1vZGVybml6ci5sb2FkPWZ1bmN0aW9uKCl7
			eWVwbm9wZS5hcHBseSh3aW5kb3csW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfSxNb2Rlcm5p
			enIuYWRkVGVzdCgicGxhY2Vob2xkZXIiLGZ1bmN0aW9uKCl7cmV0dXJuInBsYWNlaG9sZGVyImlu
			KE1vZGVybml6ci5pbnB1dHx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKSkmJiJwbGFj
			ZWhvbGRlciJpbihNb2Rlcm5penIudGV4dGFyZWF8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRl
			eHRhcmVhIikpfSk7]]></Resource>
    <Resource ID="4825c23c-68db-c578-a707-f691cb87f376" Name="ui-bg_diagonals-thick_18_b81900_40x40.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAy0lEQVRYhe3XQQrCMBSE4d8svIH0
			Ft5/5X3EG7jRTYUYk5ekackgb5alDF8LbZjT7bq8SPJ83NNLPzlfluo9e/SFPctyGe37AqrhIAIq
			4mAFquIAgjIOMh/JSNkRD2sCZ+PAeIMKOCgAVXCQASrhIAGq4SACKuJgBariAIIyDhp+1D1lRzxs
			E3DmcVgFzj6rTeBsHBhABRwUgCo48E3im6Sv7BPfJFvLfJOMllnxTdJSlotvkp6yOL5JtpSBb5Kx
			stb4JimV1fKXm+QNcHvyUkD/BIAAAAAASUVORK5CYII=]]></Resource>
    <Resource ID="013ec742-86e5-34b5-2f14-f691d54fead6" Name="ui-bg_diagonals-thick_20_666666_40x40.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAwklEQVRYhe3XXQqDMBhE0dtsIKvN
			wrOC+mIhTfNrlAzlm0eR4ShomFcI4U2WGGN+6Sfe++49d/S5O8tKWe37AqrhIAEq4uAEquIAnDIO
			Ch/JStkTD9sE7sZB4w0q4KACVMFBAaiEgwyohoMEqIiDE6iKA3DKOBj4Uc+UPfGwQ8Cdx2EXuPus
			bgJ346ABVMBBBaiCA9sktknmyj6xTXK1zDbJalkrtklGykqxTTJTlsY2yZUysE2yVjYa2yS1sl7+
			cpMcegPyrqBRcaoAAAAASUVORK5CYII=]]></Resource>
    <Resource ID="89f5a148-d634-fd26-8914-f691de3a0d49" Name="ui-bg_flat_10_000000_40x100.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAACgAAABkCAYAAAD0ZHJ6AAAAeUlEQVRoge3OMQHAIBAAsQf/nlsJ
			DDfAkCjImplvHrZvB04EK8FKsBKsBCvBSrASrAQrwUqwEqwEK8FKsBKsBCvBSrASrAQrwUqwEqwE
			K8FKsBKsBCvBSrASrAQrwUqwEqwEK8FKsBKsBCvBSrASrAQrwUqwEqwEqx92LQHHRpDUNwAAAABJ
			RU5ErkJggg==]]></Resource>
    <Resource ID="71a7f86f-6c0c-4ac1-a70a-f691f2690ca6" Name="ui-bg_glass_100_f6f6f6_1x400.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAAEAAAGQCAYAAABvWArbAAAAL0lEQVQ4je3HsQ0AIBDDwIT9F/4i
			gpYiAyDk5mRrZvaSJAD4liT32u7bqi0APMcBiYQKDwcroFAAAAAASUVORK5CYII=]]></Resource>
    <Resource ID="aa0a5f99-224d-015c-4f3f-f691fb37fccb" Name="ui-bg_glass_100_fdf5ce_1x400.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAAEAAAGQCAYAAABvWArbAAAARElEQVQ4jWP4+/PhfyYGBgaGUWKU
			GCWGL/HnLQMTAwMjjGBkYmBiYGBiYGJgZEZlMcNlYRKMCMUQAwbcM6PEKDFKYCEAGrQJAcbElNQA
			AAAASUVORK5CYII=]]></Resource>
    <Resource ID="3ec3c618-6b82-253a-bbd8-f691e802a954" Name="ui-bg_glass_65_ffffff_1x400.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAAEAAAGQCAYAAABvWArbAAAAMElEQVQ4je3LIQ4AIBTD0O3f/8wr
			FgmKhMy8pKJKwkhSKeVbbGuAPU9f4PIopTxgAeS0DRtI4yK0AAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="5867e19c-17dc-b7f4-5565-f6920621d3f5" Name="ui-bg_gloss-wave_35_f6a828_500x100.png" Type="png"><![CDATA[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]]></Resource>
    <Resource ID="3da49274-02aa-d7c1-0bfa-f69216672a51" Name="ui-bg_highlight-soft_100_eeeeee_1x100.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAAEAAABkCAYAAABHLFpgAAAAIUlEQVQYlWP48ePHfyYGBgaGIUT8
			//8fO5cSFn6J4UQAAJSgIpAFCJPdAAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="2dada98f-75ad-6f4d-4f90-f6920e94d85d" Name="ui-bg_highlight-soft_75_ffe45c_1x100.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAAEAAABkCAYAAABHLFpgAAAASElEQVQYldWPwQmAQBADJ+m/Dfuz
			gN2ND/WjX+HwMzAQBkL2LQb4EZLCZLAYnDSWGpO6lBSGwjy1sHjvRN+pM1oYBmv5349xADIyLQUa
			yPX/AAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="ccfb4678-798f-230e-0cc8-22bad806c706" Name="jquery.percentageloader-0.1.min.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="910d5aa6-aeef-2e2d-6127-5434d62562fc" Name="jquery-3.7.1.min.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="ab87f9cd-7202-1b37-94ed-63001c47a8d9" Name="jquery-ui.min.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="f02d3a9e-d412-f035-8133-6338117e9b80" Name="ui-icons_444444_256x240.png" Type="png"><![CDATA[]]></Resource>
    <Resource ID="40cbd013-ec89-86c1-c0ea-633817fe5be0" Name="ui-icons_555555_256x240.png" Type="png"><![CDATA[]]></Resource>
    <Resource ID="95bc48c6-d676-6f33-abd3-633820ce8a4c" Name="ui-icons_777620_256x240.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAQAAAADwCAMAAADYSUr5AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABEVBMVEV3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diBh/q0oAAAAWnRSTlMAWEd8IjKY4b3Ld2acsomqpVpOeudAZYVTi0aRlGNhTaBobZtzv33AvOOt5enkgY5d393gudbb0sTV1Ndi2nD+Dc6Zafg4KhYcxXnRp8iT0Niv8M2QiLC7x6vji8qEAAAAAWJLR0QAiAUdSAAAAAd0SU1FB+YHDhQzBy8WAiMAAA9rSURBVHja7V0LY9u2EQbJSKrpmJIbuUubOG69JnM2L8leXdd1bdSma+M6qbuk63r//4cM4AuHOzzEUqZoG59syUeAAO7jAbwDQFmIiIiIESCBZNtN2LL+MHIGejcvAb/+CWZAZR6WEGKBoGASQNtjpKvUBB8BYBWApwJyfvnnoCZBLZATkND2GOn0CjIC6Om8ApY5GZAB1n67Cp50zqAguf2l2zIn3kwbBbNg3kR6gbmFeK8wtwBPA4a3ADsprIk+AtjZwEzEUzoxweHHgDX4uNS7AO1Cw98Fto6b7ghFREREREREjBiX7glu2Q9KWLQG1HlP6Bk0uxHgJ6wC33wAmxCSpQ9KiaUBjACWgWY3w8WEVUAJ8ESXqvQhgyHWfnuLPcmWGZXEc7oITAFCScBg0wHcgoXNZo1obY35gMQszdejtm0BViSeFvefD+A9ZKtjQBjX/S4QEREREREREbE99HP8g65psPzegUfPAoAvp0KH3L3bx7cDsAYFSgP/Ea4e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]]></Resource>
    <Resource ID="bfa36bd9-e3b5-f24f-ca1f-633827ccdc18" Name="ui-icons_777777_256x240.png" Type="png"><![CDATA[]]></Resource>
    <Resource ID="66669b23-95cd-eb4f-918f-6338313f5e51" Name="ui-icons_cc0000_256x240.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAQAAAADwCAMAAADYSUr5AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABEVBMVEXMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAADMAAAWt1qrAAAAWnRSTlMAWEd8IjKY4b3Ld2acsomqpVpOeudAZYVTi0aRlGNhTaBobZtzv33AvOOt5enkgY5d393gudbb0sTV1Ndi2nD+Dc6Zafg4KhYcxXnRp8iT0Niv8M2QiLC7x6vji8qEAAAAAWJLR0QAiAUdSAAAAAd0SU1FB+YHDhQzBy8WAiMAAA9rSURBVHja7V0LY9u2EQbJSKrpmJIbuUubOG69JnM2L8leXdd1bdSma+M6qbuk63r//4cM4AuHOzzEUqZoG59syUeAAO7jAbwDQFmIiIiIESCBZNtN2LL+MHIGejcvAb/+CWZAZR6WEGKBoGASQNtjpKvUBB8BYBWApwJyfvnnoCZBLZATkND2GOn0CjIC6Om8ApY5GZAB1n67Cp50zqAguf2l2zIn3kwbBbNg3kR6gbmFeK8wtwBPA4a3ADsprIk+AtjZwEzEUzoxweHHgDX4uNS7AO1Cw98Fto6b7ghFREREREREjBiX7glu2Q9KWLQG1HlP6Bk0uxHgJ6wC33wAmxCSpQ9KiaUBjACWgWY3w8WEVUAJ8ESXqvQhgyHWfnuLPcmWGZXEc7oITAFCScBg0wHcgoXNZo1obY35gMQszdejtm0BViSeFvefD+A9ZKtjQBjX/S4QEREREREREbE99HP8g65psPzegUfPAoAvp0KH3L3bx7cDsAYFSgP/Ea4e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]]></Resource>
    <Resource ID="83590c6e-d9e6-143b-20f7-6338369f83b1" Name="ui-icons_ffffff_256x240.png" Type="png"><![CDATA[]]></Resource>
    <Resource ID="5142b7cc-cf07-a6df-e91e-68c6bc9ab58f" Name="vdom_classes.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="ad0f545d-18c6-37ce-fb87-fe54dcb8a0a6" Name="vdom_functions" Type="js"><![CDATA[]]></Resource>
    <Resource ID="a0fb93f7-826e-9be6-02fd-1348887cb685" Name="jquery-ui.css" Type="css"><![CDATA[]]></Resource>
  </Resources>
  <SourceCode><![CDATA[import json
import time
import email
import email.utils
import managers
from scripting import e2vdom


# DOCTYPE = u"""<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">"""
DOCTYPE = u"""<!DOCTYPE html>"""


JAVASCRIPT = \
    u"<script type='text/javascript' src='/{uuid}.res'></script>" \
    u"<script type='text/javascript'>\n" \
    u"{declarations}\n" \
    u"</script>\n"


JQUERY_UI = u"""
	<link rel="preload" href="/a0fb93f7-826e-9be6-02fd-1348887cb685.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
	<noscript><link rel="stylesheet" href="/a0fb93f7-826e-9be6-02fd-1348887cb685.css"></noscript>

	<script type='text/javascript' src='/ab87f9cd-7202-1b37-94ed-63001c47a8d9.res?v=1.13.2.1m'></script>
"""

DEFAULT_TEST_FUNCTIONS = "<script type='text/javascript' src='/ad0f545d-18c6-37ce-fb87-fe54dcb8a0a6.res?v20240112'></script>"
DEFAULT_TEST_CLASSES = "<script type='text/javascript' src='/5142b7cc-cf07-a6df-e91e-68c6bc9ab58f.res?v20231216'></script>"

CENTERING_CSS = \
    ".center {width: 1100px; margin: 0 auto !important; position: relative;}\n" \
    ".ui-widget-overlay {position: fixed;}"

TEMPLATE = u"""{doctype}
<!--[if gt IE 9]><!-->
<html>
<!--<![endif]-->
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
<meta charset="utf-8"/>
<title>{title}</title>
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
{metas}
<script type="text/javascript">
    var APPLICATION_ID="{application}", SESSION_ID="{session}"
    var SERVER_URL="/e2vdom.py"
    var E2VDEBUG={e2vdebug}, E2VSTATE="{e2vstate}", E2VSV={e2vsv};
</script>
<script type="text/javascript" src="/910d5aa6-aeef-2e2d-6127-5434d62562fc.res?v20231217"></script>
<script defer type="text/javascript" src="/ccfb4678-798f-230e-0cc8-22bad806c706.res?v20180123"></script>
{jquery_ui}
{test_functions}
<script type="text/javascript" src="/3e932470-0e08-446c-a866-30c00e6d812a.res"></script>
{static_libraries}
{dynamic_libraries}
{test_classes}
<style type="text/css">
{css}
</style>
<!--[if lt IE 9]><script src="/62bfaaa0-c2fd-02d5-2a32-49056e416a65.res"></script><![endif]-->
</head>
<body id="{element_name}" style="{style} {font_style}"{inline_style}{inline_class}>
{cookiewarning}
{noscript}
{contents}
{javascript}
<div id='e2vdomindicator' style='z-index:99999;width:1px;height:1px;position:absolute;position:fixed;left:0;top:0;display:none'></div>
<script type="text/javascript" src="/6cdc7eef-c7d2-bc99-b202-98b2d9052836.res"></script>
<script type="text/javascript">
    hchInit({center},'#{bgcolor}','{id4code}');
    hchSetEvents('{id4code}');
</script>
</body>
<!-- type {type_version}, runtime {server_version} -->
</html>"""


class VDOM_htmlcontainer(VDOM_object):

    def render(self, contents=""):
        if self.visible != "1":
            return VDOM_object.render(self, contents="<html></html>")

        if self.securitycode != "":
            code = str(session["SecurityCode"])
            redirection = not code or code not in self.securitycode.split(";")
            if redirection:
                if self.deniedlink == "":
                    return VDOM_object.render(self, contents="<html></html>")
                else:
                    target = managers.engine.application.objects.catalog.get(self.deniedlink)
                    reference = "/%s.vdom" % target.name if target else ""
                    response.redirect(reference)

        e2vdom.process(self)

        # NOTE: cleanup later
        # static, dynamic = e2vdom.generate(self)

        # static_declarations, static_libraries = static
        # dynamic_declarations, dynamic_libraries = dynamic

        static_declarations, static_libraries = e2vdom.generate(self)
        dynamic_declarations, dynamic_libraries = "", u"".join(managers.request_manager.current.dyn_libraries.itervalues())

        javascript_label = "jsdata-%s" % len(static_declarations)
        javascript_resource = application.resources.get_by_label(self.id, javascript_label)
        if javascript_resource:
            javascript_resource_uuid = javascript_resource.id
        else:
            javascript_resource_uuid = application.resources.create_temporary(self.id,
                "jsdata-htmlcontainer", static_declarations.encode("utf-8"), "js", javascript_label)

        javascript = JAVASCRIPT.format(
            declarations=dynamic_declarations,
            uuid=javascript_resource_uuid)

        id4code = self.id.replace('-', '_')
        element_name = u"o_%s" % id4code

        if self.position == "jscenter":
            classname = self.cssclass
            center = "1"
            centering_css = ""
        elif self.position == "center":
            classname = "%s center" % self.cssclass if self.cssclass else "center"
            center = "0"
            centering_css = CENTERING_CSS
        else:
            classname = self.cssclass
            center = "0"
            centering_css = ""

        style = self.style
        style += " margin: 0 auto;"
        if self.bgcolor:
            style += " background-color: #%s;" % self.bgcolor
        if self.image:
            style += " background-image: url('/%s.res'); background-repeat: %s;" % (self.image, self.bgrepeat)

        inline_style = ""
        if self.linkcolor:
            inline_style += " link=\"#" + self.linkcolor + "\""
        if self.activelinkcolor:
            inline_style += " alink=\"#" + self.activelinkcolor + "\""
        if self.visitedlinkcolor:
            inline_style += " vlink=\"#" + self.visitedlinkcolor + "\""
            
        fstyles = {
            "color": "#"+self.textcolor if self.textcolor else "",
            "font-family": self.fontfamily.replace('"', "'"),
            "font-size": self.fontsize,
            "font-weight": self.fontweight,
            "letter-spacing": self.letterspacing,
            "line-height": self.lineheight,
            "font-style": self.fontstyle
        }        
        font_style = " ".join(["{}: {};".format(key, value) for key, value in fstyles.items() if value])

        metas = u""
        if self.metadescription:
            metas += u'<meta name="description" content="%s" />\n' % (self.metadescription).replace('"', '&quot;')
        if self.metakeywords:
            metas += u'<meta name="keywords" content="%s" />\n' % (self.metakeywords).replace('"', '&quot;')
        if self.customheaders:
            metas += u'%s' % self.customheaders

        if self.noscript:
            noscript = "<noscript>%s</noscript>" % self.noscript
        else:
            noscript = ""

        cookie_name = 'cookiewarning'
        cookiewarning = ""
        if self.cookiewarning == "1":
            if cookie_name not in request.cookies:
                cookiewarning=u"""<div id="cookieWarningDiv" style="display: block; text-align: center; background: #333; color: #fff; font-size: 15px !important; width: 90%%; box-sizing: content-box; font-family: sans-serif !important; padding-top: 5px; padding-right: 5%%; padding-bottom: 5px; padding-left: 5%%; vertical-align: initial;">
                                  <span id="cookieWarningAlert" style="font: 15px verdana;"> %(text)s </span>
                                  <span id="cookieWarningOK" style="cursor: pointer; display: inline-block; font-size: 16px; background: #4596ec !important; border-radius: 10px; font-family: sans-serif !important; box-sizing: initial; vertical-align: initial; padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; margin-left: 7px;" onclick="$(function(){ document.cookie = '%(cookie)s=1; expires=%(cookie_exp)s'; $('#cookieWarningDiv').hide(); });">&#x2713; OK</span>
                                  </div>""" % {
                                                   "text": self.cookiewarningtext,
                                                   "cookie": cookie_name,
                                                   "cookie_exp": email.utils.formatdate(time.time()+31536000, usegmt=True) # set one year expiration
                                  }

        result = TEMPLATE.format(
            doctype=DOCTYPE,
            type_version=self.type.version,
            server_version=server.version,
            title=self.title.encode("html"),
            metas=metas,
            application=application.id,
            session=session.id,
            e2vdebug="true" if VDOM_CONFIG_1["ENABLE-PAGE-DEBUG"] == "1" else "false",
            e2vstate="0",
            e2vsv=json.dumps(response.shared_variables.copy()),
            jquery_ui=JQUERY_UI,
            test_functions=self.testfunctions or DEFAULT_TEST_FUNCTIONS,
            test_classes=self.testclasses or DEFAULT_TEST_CLASSES,
            css="\n".join((self.css, centering_css)),
            static_libraries=static_libraries,
            dynamic_libraries=dynamic_libraries,
            element_name=element_name,
            style=style,
            inline_style=inline_style,
            font_style=font_style,
            inline_class=" class='%s'" % classname if classname else "",
            cookiewarning=cookiewarning,
            noscript=noscript,
            contents=contents,
            javascript=javascript,
            center=center,
            bgcolor=self.bgcolor,
            id4code=id4code)

        return VDOM_object.render(self, contents=result)

    def wysiwyg(self, contents=""):
        result = "<container name=\"%s\" id=\"%s\" visible=\"%s\" zindex=\"%s\" hierarchy=\"%s\" order=\"%s\" backgroundcolor=\"#%s\" backgroundimage=\"%s\" backgroundrepeat=\"%s\" >%s</container>" % (
            self.name, self.id, self.visible, self.zindex, self.hierarchy, self.order, self.bgcolor, self.image, self.bgrepeat, contents)
        return VDOM_object.wysiwyg(self, contents=result)]]></SourceCode>
  <Libraries/>
  <E2vdom>
    <Events>
      <Userinterfaceevents>
        <Event Name="click" Help="#Lang(517)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(901)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(902)"/>
          </Parameters>
        </Event>
        <Event Name="ctrlclick" Help="#Lang(518)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(903)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(904)"/>
          </Parameters>
        </Event>
        <Event Name="custom" Help="#Lang(519)">
          <Parameters>
            <Parameter Name="params" Order="0" VbType="" Help="#Lang(905)"/>
          </Parameters>
        </Event>
        <Event Name="dblclick" Help="#Lang(521)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(906)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(907)"/>
          </Parameters>
        </Event>
        <Event Name="erroreventengine" Help="#Lang(522)">
          <Parameters>
            <Parameter Name="msg" Order="0" VbType="" Help="#Lang(908)"/>
          </Parameters>
        </Event>
        <Event Name="labelchanged" Help="#Lang(523)">
          <Parameters>
            <Parameter Name="label" Order="0" VbType="" Help="#Lang(909)"/>
          </Parameters>
        </Event>
        <Event Name="load" Help="#Lang(524)">
          <Parameters>
            <Parameter Name="width" Order="0" VbType="" Help="#Lang(911)"/>
            <Parameter Name="height" Order="0" VbType="" Help="#Lang(912)"/>
            <Parameter Name="userAgent" Order="0" VbType="" Help="#Lang(913)"/>
            <Parameter Name="language" Order="0" VbType="" Help="#Lang(914)"/>
            <Parameter Name="os" Order="0" VbType="" Help="#Lang(915)"/>
            <Parameter Name="platform" Order="0" VbType="" Help="#Lang(916)"/>
            <Parameter Name="cookie" Order="0" VbType="" Help="#Lang(917)"/>
            <Parameter Name="maxWidth" Order="0" VbType="" Help="#Lang(918)"/>
            <Parameter Name="maxHeight" Order="0" VbType="" Help="#Lang(919)"/>
            <Parameter Name="colors" Order="0" VbType="" Help="#Lang(921)"/>
          </Parameters>
        </Event>
        <Event Name="mousedown" Help="#Lang(525)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(922)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(923)"/>
          </Parameters>
        </Event>
        <Event Name="mousemove" Help="#Lang(526)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(924)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(925)"/>
          </Parameters>
        </Event>
        <Event Name="mouseout" Help="#Lang(527)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(926)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(927)"/>
          </Parameters>
        </Event>
        <Event Name="mouseover" Help="#Lang(528)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(928)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(929)"/>
          </Parameters>
        </Event>
        <Event Name="mouseup" Help="#Lang(529)">
          <Parameters>
            <Parameter Name="X" Order="0" VbType="" Help="#Lang(931)"/>
            <Parameter Name="Y" Order="0" VbType="" Help="#Lang(932)"/>
          </Parameters>
        </Event>
        <Event Name="resize" Help="#Lang(531)">
          <Parameters>
            <Parameter Name="width" Order="0" VbType="" Help="#Lang(933)"/>
            <Parameter Name="height" Order="0" VbType="" Help="#Lang(934)"/>
          </Parameters>
        </Event>
        <Event Name="sharedvariablechanged" Help="#Lang(532)">
          <Parameters>
            <Parameter Name="key" Order="0" VbType="" Help="#Lang(935)"/>
          </Parameters>
        </Event>
      </Userinterfaceevents>
    </Events>
    <Actions>
      <Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
        <Action Help="#Lang(501)" InterfaceName="#Lang(601)" MethodName="addHTML">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(701)" ScriptName="value" Help="#Lang(801)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$(this.domCont).append(value);]]></SourceCode>
        </Action>
        <Action Help="#Lang(502)" InterfaceName="#Lang(602)" MethodName="browserZoom">
          <Parameters>
            <Parameter DefaultValue="100" Interface="" InterfaceName="#Lang(702)" ScriptName="zoom" Help="#Lang(802)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[zoom = $(window).width()/zoom*100;
            document.body.style.zoom = zoom + "%"]]></SourceCode>
        </Action>
        <Action Help="#Lang(503)" InterfaceName="#Lang(603)" MethodName="changeCursor">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(703)" ScriptName="cursorType" Help="#Lang(803)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[this.domCont.style.cursor = cursorType;]]></SourceCode>
        </Action>
        <Action Help="#Lang(504)" InterfaceName="#Lang(604)" MethodName="changeSharedVariable">
          <Parameters>
            <Parameter DefaultValue="'array1'" Interface="" InterfaceName="#Lang(704)" ScriptName="key" Help="#Lang(804)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(705)" ScriptName="value" Help="#Lang(805)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="'push'" Interface="" InterfaceName="#Lang(706)" ScriptName="action" Help="#Lang(806)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[if (typeof e2vdomSV !== 'undefined') {
    if (action == 'add') {
        e2vdomSV[key] = value;
    } else if (action == 'remove') {
        if (typeof e2vdomSV[key] !== 'undefined') delete(e2vdomSV[key]);
    } else if (action == 'push') {
        var a = (typeof e2vdomSV[key] !== 'undefined') ? e2vdomSV[key] : [];
        if ($.inArray(value,a)) a.push(value);
        e2vdomSV[key] = a;
    } else if (action == 'pop') {
        if (typeof e2vdomSV[key][value] !== 'undefined') delete(e2vdomSV[key][value]);
    }
}]]></SourceCode>
        </Action>
        <Action Help="#Lang(505)" InterfaceName="#Lang(605)" MethodName="clearSharedVariables">
          <Parameters/>
          <SourceCode><![CDATA[if (e2vdomSV !== 'undefined') {
    delete(e2vdomSV);
}
e2vdomSV = {};]]></SourceCode>
        </Action>
        <Action Help="#Lang(506)" InterfaceName="#Lang(606)" MethodName="consoleMessage">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(707)" ScriptName="msg" Help="#Lang(807)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[console.info(msg);]]></SourceCode>
        </Action>
        <Action Help="#Lang(507)" InterfaceName="#Lang(607)" MethodName="custom">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(708)" ScriptName="custom" Help="#Lang(808)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[eval(custom);]]></SourceCode>
        </Action>
        <Action Help="#Lang(508)" InterfaceName="#Lang(608)" MethodName="goTo">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(709)" ScriptName="url" Help="#Lang(809)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[/*document.location.href=url; return false;*//* not working in chrome */
window.setTimeout(function(){
    window.location = url;
},500);
return false;]]></SourceCode>
        </Action>
        <Action Help="#Lang(509)" InterfaceName="#Lang(609)" MethodName="goToLabel">
          <Parameters>
            <Parameter DefaultValue="" Interface="" InterfaceName="#Lang(711)" ScriptName="label" Help="#Lang(811)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[window.location.href=e2vdompageurl+'#'+label;
/*
var id = this.domCont.id;
execEventBinded(id.substring(2, id.length), "labelchanged", {label:label});
*/]]></SourceCode>
        </Action>
        <Action Help="#Lang(511)" InterfaceName="#Lang(611)" MethodName="hide">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(712)" ScriptName="fade" Help="#Lang(812)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[vdom_ui_hide(this.domCont, fade);]]></SourceCode>
        </Action>
        <Action Help="#Lang(512)" InterfaceName="#Lang(612)" MethodName="loadHTML">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(713)" ScriptName="value" Help="#Lang(813)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$(this.domCont).html(value);]]></SourceCode>
        </Action>
        <Action Help="#Lang(513)" InterfaceName="#Lang(613)" MethodName="moveZindexTo">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(714)" ScriptName="newZindex" Help="#Lang(814)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[this.domCont.style.zindex = parseInt(newZindex,10);]]></SourceCode>
        </Action>
        <Action Help="#Lang(514)" InterfaceName="#Lang(614)" MethodName="removeSharedVariable">
          <Parameters>
            <Parameter DefaultValue="'name'" Interface="" InterfaceName="#Lang(715)" ScriptName="key" Help="#Lang(815)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[if (e2vdomSV !== 'undefined') {
    if (e2vdomSV[key] !== 'undefined') {
        delete(e2vdomSV[key]);
    }
}]]></SourceCode>
        </Action>
        <Action Help="#Lang(515)" InterfaceName="#Lang(615)" MethodName="setSharedVariable">
          <Parameters>
            <Parameter DefaultValue="'name'" Interface="" InterfaceName="#Lang(716)" ScriptName="key" Help="#Lang(816)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(717)" ScriptName="value" Help="#Lang(817)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[if (e2vdomSV !== 'undefined') {
    e2vdomSV[key] = value;
}]]></SourceCode>
        </Action>
        <Action Help="#Lang(516)" InterfaceName="#Lang(616)" MethodName="show">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(718)" ScriptName="fade" Help="#Lang(818)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[vdom_ui_show(this.domCont, fade);]]></SourceCode>
        </Action>
      </Container>
    </Actions>
  </E2vdom>
</Type>